{"version":3,"file":"index-DBiTzP04.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/modules/storage/database.ts","../../src/modules/storage/json-loader.ts","../../src/modules/storage/seed-data.ts","../../src/modules/core/types/services.ts","../../src/modules/core/entities/practice-session.ts","../../src/modules/core/services/practice-session-service.ts","../../src/modules/core/entities/spaced-repetition-item.ts","../../src/modules/core/services/spaced-repetition-service.ts","../../src/modules/storage/adapters/repositories-simple.ts","../../src/modules/storage/factory.ts","../../src/modules/core/entities/audio-playback.ts","../../src/modules/core/services/audio-service.ts","../../src/modules/ui/hooks/use-audio-playback.ts","../../src/modules/core/entities/audio-settings.ts","../../src/modules/storage/adapters/audio-settings-storage.ts","../../src/modules/ui/hooks/use-audio-settings.ts","../../src/modules/core/utils/audio-helpers.ts","../../src/modules/storage/template-loader.ts","../../node_modules/clsx/dist/clsx.mjs","../../src/modules/ui/components/audio-button.tsx","../../src/modules/ui/components/common/Card.tsx","../../src/modules/ui/design-tokens.ts","../../src/modules/ui/components/common/FeedbackCard.tsx","../../src/modules/ui/components/forms/Input.tsx","../../src/modules/ui/components/forms/Checkbox.tsx","../../src/modules/ui/components/forms/Select.tsx","../../src/modules/ui/components/forms/Slider.tsx","../../src/modules/ui/components/practice-session.tsx","../../src/modules/ui/components/common/StatCard.tsx","../../src/modules/ui/components/common/Button.tsx","../../src/modules/ui/components/session-results.tsx","../../src/modules/ui/components/common/MasteryBar.tsx","../../src/modules/ui/components/dashboard.tsx","../../src/modules/ui/components/TopicCard.tsx","../../src/modules/core/entities/app-settings.ts","../../src/modules/core/services/settings-service.ts","../../src/modules/ui/hooks/use-app-settings.ts","../../src/modules/ui/components/settings/SettingsPage.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import Dexie, { Table } from 'dexie';\nimport type {\n  Topic,\n  LearningPath,\n  Task,\n  AnswerHistory,\n  UserProgress,\n  PracticeSession,\n  SpacedRepetitionItem,\n} from '@core/types/services';\n\n/**\n * IndexedDB database schema using Dexie\n */\nexport class LearningPlatformDB extends Dexie {\n  // Tables\n  topics!: Table<Topic, string>;\n  learningPaths!: Table<LearningPath, string>;\n  tasks!: Table<Task, string>;\n  answerHistory!: Table<AnswerHistory, string>;\n  userProgress!: Table<UserProgress, string>;\n  practiceSessions!: Table<PracticeSession, string>;\n  spacedRepetition!: Table<SpacedRepetitionItem, string>;\n\n  constructor() {\n    // Use environment-specific database name\n    const dbName = import.meta.env.VITE_DB_NAME || 'mindforge-academy';\n    super(dbName);\n\n    this.version(1).stores({\n      topics: 'id, title, isActive, createdAt',\n      learningPaths: 'id, topicId, difficulty, isActive, createdAt',\n      tasks: 'id, learningPathId, type, *metadata.tags, metadata.difficulty, createdAt, hasAudio, language',\n      answerHistory: 'id, taskId, sessionId, timestamp, isCorrect',\n      userProgress: 'id, topicId, learningPathId, *milestones.lastActivity',\n      practiceSessions: 'id, execution.status, execution.startedAt, execution.completedAt, createdAt',\n      spacedRepetition: 'id, taskId, schedule.nextReview, algorithm.interval, createdAt',\n    });\n  }\n}\n\n// Create singleton instance\nexport const db = new LearningPlatformDB();","import type { Topic, LearningPath, Task } from '@core/types/services';\n\n/**\n * Interface for learning path JSON files\n */\ninterface LearningPathData {\n  learningPath: Omit<LearningPath, 'createdAt' | 'updatedAt'> & { createdAt?: string };\n  tasks: Omit<Task, 'createdAt' | 'updatedAt'>[];\n}\n\n/**\n * Load all learning path JSON files from public/learning-paths/ directory\n * Uses fetch API to load files from public directory\n */\nexport async function loadLearningPathsFromJSON(): Promise<{\n  topics: Topic[];\n  learningPaths: LearningPath[];\n  tasks: Task[];\n}> {\n  const topics: Map<string, Topic> = new Map();\n  const learningPaths: LearningPath[] = [];\n  const tasks: Task[] = [];\n\n  // Learning path files to load (topic -> filenames)\n  const learningPathFiles: Record<string, string[]> = {\n    mathematik: ['algebra-basics.json', 'geometry-basics.json', 'advanced-tasks.json', 'brueche-grundlagen.json'],\n    biologie: ['zellbiologie.json', 'genetik-basics.json'],\n    spanisch: ['spanisch-grundlagen.json', 'begruessung-vorstellung.json', 'familie-persoenliches.json', 'zahlen-farben-tiere.json', 'vokabeltest-karteikarten.json'],\n    test: ['all-task-types.json'],\n  };\n\n  // Load each learning path\n  for (const [topicId, files] of Object.entries(learningPathFiles)) {\n    // Create topic if it doesn't exist\n    if (!topics.has(topicId)) {\n      const topic: Topic = createTopicFromId(topicId);\n      topics.set(topicId, topic);\n    }\n\n    // Load each file for this topic\n    for (const filename of files) {\n      try {\n        // Use relative path to work with base URL (e.g., /learning-platform/)\n        const baseUrl = (import.meta as any).env?.BASE_URL || '/';\n        const path = `${baseUrl}learning-paths/${topicId}/${filename}`;\n        const response = await fetch(path);\n\n        if (!response.ok) {\n          console.warn(`Failed to load ${path}: ${response.status}`);\n          continue;\n        }\n\n        const data: LearningPathData = await response.json();\n\n        // Build task IDs array from tasks\n        const taskIds = data.tasks.map((task) => task.id);\n\n        // Add learning path with task IDs\n        const learningPath: LearningPath = {\n          ...data.learningPath,\n          taskIds, // Add task IDs\n          createdAt: data.learningPath.createdAt ? new Date(data.learningPath.createdAt) : new Date('2024-01-01'),\n          updatedAt: data.learningPath.createdAt ? new Date(data.learningPath.createdAt) : new Date('2024-01-01'),\n        };\n        learningPaths.push(learningPath);\n\n        // Add learning path ID to topic\n        const topic = topics.get(topicId)!;\n        if (!topic.learningPathIds.includes(learningPath.id)) {\n          topic.learningPathIds.push(learningPath.id);\n        }\n\n        // Add tasks\n        for (const taskData of data.tasks) {\n          const task: Task = {\n            ...taskData,\n            createdAt: new Date('2024-01-01'),\n            updatedAt: new Date('2024-01-01'),\n          };\n          tasks.push(task);\n        }\n      } catch (error) {\n        console.error(`Failed to load learning path ${topicId}/${filename}:`, error);\n      }\n    }\n  }\n\n  return {\n    topics: Array.from(topics.values()),\n    learningPaths,\n    tasks,\n  };\n}\n\n/**\n * Create a Topic object from topic ID\n */\nfunction createTopicFromId(topicId: string): Topic {\n  const topicConfig: Record<string, Partial<Topic>> = {\n    test: {\n      id: 'test',\n      title: 'Test & Demo',\n      description: 'Demonstriert alle Aufgabentypen der Plattform',\n      metadata: {\n        estimatedHours: 1,\n        difficultyLevel: 'beginner',\n        prerequisites: [],\n      },\n    },\n    mathematik: {\n      id: 'mathematik',\n      title: 'Mathematik',\n      description: 'Grundlagen der Mathematik: Algebra, Geometrie und mehr',\n      metadata: {\n        estimatedHours: 40,\n        difficultyLevel: 'intermediate',\n        prerequisites: [],\n      },\n    },\n    biologie: {\n      id: 'biologie',\n      title: 'Biologie',\n      description: 'Einführung in die Biologie: Zellen, Genetik und Ökosysteme',\n      metadata: {\n        estimatedHours: 35,\n        difficultyLevel: 'beginner',\n        prerequisites: [],\n      },\n    },\n    spanisch: {\n      id: 'spanisch',\n      title: 'Spanisch',\n      description: 'Lerne Spanisch: Vokabeln, Grammatik und Konversation',\n      metadata: {\n        estimatedHours: 50,\n        difficultyLevel: 'beginner',\n        prerequisites: [],\n      },\n    },\n    chemie: {\n      id: 'chemie',\n      title: 'Chemie',\n      description: 'Grundlagen der Chemie: Atome, Moleküle und Reaktionen',\n      metadata: {\n        estimatedHours: 40,\n        difficultyLevel: 'intermediate',\n        prerequisites: [],\n      },\n    },\n    physik: {\n      id: 'physik',\n      title: 'Physik',\n      description: 'Einführung in die Physik: Kräfte, Energie und Bewegung',\n      metadata: {\n        estimatedHours: 45,\n        difficultyLevel: 'intermediate',\n        prerequisites: [],\n      },\n    },\n  };\n\n  const config = topicConfig[topicId] || {\n    id: topicId,\n    title: topicId.charAt(0).toUpperCase() + topicId.slice(1),\n    description: `Lernmaterialien für ${topicId}`,\n    metadata: {\n      estimatedHours: 30,\n      difficultyLevel: 'beginner',\n      prerequisites: [],\n    },\n  };\n\n  return {\n    id: config.id!,\n    title: config.title!,\n    description: config.description!,\n    learningPathIds: [],\n    isActive: true,\n    metadata: config.metadata!,\n    createdAt: new Date('2024-01-01'),\n    updatedAt: new Date('2024-01-01'),\n  };\n}\n\n","import { loadLearningPathsFromJSON } from './json-loader';\n\n/**\n * All data is loaded from JSON files in public/learning-paths/\n * No sample/fallback data is needed.\n */\n\n/**\n * Seeds the database with learning data from JSON files\n */\nexport async function seedDatabase(db: any): Promise<void> {\n  // Clear existing data\n  console.log('🗑️ Clearing existing database...');\n  const beforeTopics = await db.topics.count();\n  const beforePaths = await db.learningPaths.count();\n  const beforeTasks = await db.tasks.count();\n  console.log(`Before clear: ${beforeTopics} topics, ${beforePaths} paths, ${beforeTasks} tasks`);\n\n  await db.topics.clear();\n  await db.learningPaths.clear();\n  await db.tasks.clear();\n\n  const afterClear = await db.tasks.count();\n  console.log(`After clear: ${afterClear} tasks remaining`);\n\n  // Load from JSON files\n  console.log('📂 Loading learning paths from JSON files...');\n  const data = await loadLearningPathsFromJSON();\n\n  if (data.topics.length === 0) {\n    throw new Error('No learning paths found in JSON files!');\n  }\n\n  console.log(`Saving to database: ${data.topics.length} topics, ${data.learningPaths.length} learning paths, ${data.tasks.length} tasks`);\n  console.log('Topics:', data.topics.map(t => t.id));\n  console.log('Learning paths:', data.learningPaths.map(lp => `${lp.id} (${lp.taskIds?.length || 0} taskIds)`));\n  console.log('Tasks:', data.tasks.map(t => `${t.id} (learningPathId: ${t.learningPathId})`));\n\n  try {\n    await db.topics.bulkAdd(data.topics);\n    console.log('✓ Topics saved');\n  } catch (err: any) {\n    console.log('⚠️ Topics exist, using bulkPut to update...');\n    await db.topics.bulkPut(data.topics);\n    console.log('✓ Topics updated');\n  }\n\n  try {\n    await db.learningPaths.bulkAdd(data.learningPaths);\n    console.log('✓ Learning paths saved');\n  } catch (err: any) {\n    console.log('⚠️ Learning paths exist, using bulkPut to update...');\n    await db.learningPaths.bulkPut(data.learningPaths);\n    console.log('✓ Learning paths updated');\n  }\n\n  try {\n    await db.tasks.bulkAdd(data.tasks);\n    console.log('✓ Tasks saved');\n  } catch (err: any) {\n    console.error('❌ Error saving tasks with bulkAdd:', err.message);\n    console.log('⚠️ Some tasks already exist, using bulkPut to update...');\n    try {\n      await db.tasks.bulkPut(data.tasks);\n      console.log('✓ Tasks updated with bulkPut');\n    } catch (putErr: any) {\n      console.error('❌ Error with bulkPut:', putErr.message);\n    }\n  }\n\n  console.log(\n    `✅ Loaded from JSON: ${data.topics.length} topics, ${data.learningPaths.length} learning paths, ${data.tasks.length} tasks`\n  );\n\n  // Verify what was actually saved\n  const savedTopics = await db.topics.count();\n  const savedPaths = await db.learningPaths.count();\n  const savedTasks = await db.tasks.count();\n  console.log(`✅ Verified in DB: ${savedTopics} topics, ${savedPaths} learning paths, ${savedTasks} tasks`);\n}","/**\n * Core Service Interfaces for Learning Platform\n * These contracts define the boundaries between modules\n */\n\n// Domain Types\nexport interface Topic {\n  id: string;\n  title: string;\n  description: string;\n  learningPathIds: string[];\n  isActive: boolean;\n  metadata: {\n    estimatedHours: number;\n    difficultyLevel: 'beginner' | 'intermediate' | 'advanced';\n    prerequisites: string[];\n  };\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface LearningPath {\n  id: string;\n  topicId: string;\n  title: string;\n  description: string;\n  difficulty: 'easy' | 'medium' | 'hard';\n  taskIds: string[];\n  estimatedTime: number;\n  isActive: boolean;\n  requirements: {\n    minimumAccuracy: number;\n    requiredTasks: number;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport type TaskType = 'multiple-choice' | 'cloze-deletion' | 'true-false' | 'ordering' | 'matching' | 'multiple-select' | 'slider' | 'word-scramble' | 'flashcard' | 'text-input';\n\nexport interface Task {\n  id: string;\n  learningPathId: string;\n  templateId: string;\n  type: TaskType;\n  content: MultipleChoiceContent | ClozeDeletionContent | TrueFalseContent | OrderingContent | MatchingContent | MultipleSelectContent | SliderContent | WordScrambleContent | FlashcardContent | TextInputContent;\n  metadata: {\n    difficulty: 'easy' | 'medium' | 'hard';\n    tags: string[];\n    estimatedTime: number;\n    points: number;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n\n  // Audio feature fields (added for auto-play audio feature)\n  /** Whether this task has pronunciation audio */\n  hasAudio?: boolean;\n  /** Path to audio file (relative to /audio/) */\n  audioUrl?: string | null;\n  /** Content language (e.g., 'Spanish', 'French', 'German') */\n  language?: string;\n  /** IPA pronunciation guide (for accessibility) */\n  ipa?: string | null;\n}\n\nexport interface MultipleChoiceContent {\n  question: string;\n  questionLanguage?: 'de' | 'es' | 'en';\n  questionAudio?: string; // e.g., \"spanish/pregunta.mp3\"\n  options: string[];\n  optionsLanguage?: 'de' | 'es' | 'en';\n  optionsAudio?: string[]; // Optional audio for each option (same length as options)\n  correctAnswer: number;\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface ClozeDeletionContent {\n  text: string; // Text with {{blanks}} marked\n  textLanguage?: 'de' | 'es' | 'en';\n  textAudio?: string; // Audio of full text (with blanks spoken)\n  blanks: Array<{\n    index: number;\n    correctAnswer: string;\n    correctAnswerLanguage?: 'de' | 'es' | 'en';\n    correctAnswerAudio?: string; // Audio for the correct answer\n    alternatives?: string[]; // Alternative correct answers\n  }>;\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface TrueFalseContent {\n  statement: string;\n  statementLanguage?: 'de' | 'es' | 'en';\n  statementAudio?: string; // e.g., \"spanish/afirmacion.mp3\"\n  correctAnswer: boolean;\n  requireJustification?: boolean; // If true, user must explain why\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface OrderingContent {\n  question: string;\n  questionLanguage?: 'de' | 'es' | 'en';\n  questionAudio?: string;\n  items: string[]; // Items to be ordered\n  itemsLanguage?: 'de' | 'es' | 'en';\n  itemsAudio?: string[]; // Optional audio for each item (same length as items)\n  correctOrder: number[]; // Indices in correct order\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface MatchingContent {\n  question: string;\n  questionLanguage?: 'de' | 'es' | 'en';\n  questionAudio?: string;\n  pairs: Array<{\n    left: string;\n    leftLanguage?: 'de' | 'es' | 'en';\n    leftAudio?: string; // Audio for left item\n    right: string;\n    rightLanguage?: 'de' | 'es' | 'en';\n    rightAudio?: string; // Audio for right item\n  }>;\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface MultipleSelectContent {\n  question: string;\n  questionLanguage?: 'de' | 'es' | 'en';\n  questionAudio?: string;\n  options: string[];\n  optionsLanguage?: 'de' | 'es' | 'en';\n  optionsAudio?: string[]; // Optional audio for each option (same length as options)\n  correctAnswers: number[]; // Array of correct indices\n  minRequired?: number; // Minimum selections required\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface SliderContent {\n  question: string;\n  min: number;\n  max: number;\n  step?: number; // Default: 1\n  correctValue: number;\n  tolerance?: number; // ±tolerance for correct (default: 0)\n  unit?: string; // e.g., \"°C\", \"%\", \"cm\"\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface WordScrambleContent {\n  question: string;\n  scrambledWord: string;\n  correctWord: string;\n  showLength?: boolean; // Show word length as hint\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface FlashcardContent {\n  front: string; // The word/phrase shown initially\n  back: string; // The translation/answer (hidden until revealed)\n  frontLanguage: 'de' | 'es' | 'en'; // Language of front side\n  backLanguage: 'de' | 'es' | 'en'; // Language of back side\n  frontAudio?: string; // Audio file path for front (e.g., \"spanish/hola.mp3\")\n  backAudio?: string; // Audio file path for back (e.g., \"german/hallo.mp3\")\n  explanation?: string; // Optional additional context\n  hint?: string; // Optional hint\n}\n\nexport interface TextInputContent {\n  question: string;\n  questionLanguage?: 'de' | 'es' | 'en';\n  questionAudio?: string; // e.g., \"spanish/escucha.mp3\" for listening comprehension\n  correctAnswer: string;\n  correctAnswerLanguage?: 'de' | 'es' | 'en';\n  correctAnswerAudio?: string; // Audio for the correct answer\n  alternatives?: string[]; // Alternative correct answers\n  caseSensitive?: boolean; // Default: false\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface AnswerHistory {\n  id: string;\n  taskId: string;\n  sessionId: string;\n  userAnswer: string | string[];\n  isCorrect: boolean;\n  timeSpent: number;\n  confidence: number;\n  metadata: {\n    attemptNumber: number;\n    hintsUsed: number;\n    deviceType: 'mobile' | 'desktop' | 'tablet';\n    browserInfo: string;\n  };\n  timestamp: Date;\n}\n\nexport interface UserProgress {\n  id: string;\n  topicId: string;\n  learningPathId?: string;\n  statistics: {\n    completedTasks: number;\n    totalTasks: number;\n    correctAnswers: number;\n    totalAttempts: number;\n    accuracyRate: number;\n    timeSpent: number;\n    streakDays: number;\n    masteryLevel: number;\n  };\n  milestones: {\n    firstCompleted: Date;\n    lastActivity: Date;\n    bestStreak: number;\n    totalSessions: number;\n  };\n  preferences: {\n    preferredDifficulty: 'easy' | 'medium' | 'hard';\n    preferredSessionLength: number;\n    reminderSettings: {\n      enabled: boolean;\n      frequency: 'daily' | 'weekly';\n      time: string;\n    };\n  };\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface PracticeSession {\n  id: string;\n  configuration: {\n    topicId: string;\n    learningPathIds: string[];\n    targetCount: number;\n    includeReview: boolean;\n    difficultyFilter?: 'easy' | 'medium' | 'hard';\n  };\n  execution: {\n    taskIds: string[];\n    completedCount: number;\n    correctCount: number;\n    status: 'planned' | 'active' | 'paused' | 'completed' | 'abandoned';\n    startedAt?: Date;\n    completedAt?: Date;\n    totalTimeSpent: number;\n  };\n  results: {\n    accuracy: number;\n    averageTime: number;\n    difficultyDistribution: Record<string, number>;\n    improvementAreas: string[];\n  };\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface SpacedRepetitionItem {\n  id: string;\n  taskId: string;\n  algorithm: {\n    interval: number;\n    repetition: number;\n    efactor: number;\n  };\n  schedule: {\n    nextReview: Date;\n    lastReviewed?: Date;\n    totalReviews: number;\n    consecutiveCorrect: number;\n  };\n  performance: {\n    averageAccuracy: number;\n    averageTime: number;\n    difficultyRating: number;\n    lastGrade: number;\n  };\n  metadata: {\n    introduced: Date;\n    graduated: boolean;\n    lapseCount: number;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Service Interfaces\n\n/**\n * Core domain service for managing topics and learning paths\n */\nexport interface ILearningContentService {\n  // Topic Management\n  getTopics(): Promise<Topic[]>;\n  getTopic(id: string): Promise<Topic | null>;\n  getTopicByTitle(title: string): Promise<Topic | null>;\n\n  // Learning Path Management\n  getLearningPaths(topicId: string): Promise<LearningPath[]>;\n  getLearningPath(id: string): Promise<LearningPath | null>;\n\n  // Task Management\n  getTasks(learningPathId: string): Promise<Task[]>;\n  getTask(id: string): Promise<Task | null>;\n  searchTasks(query: string, filters: TaskSearchFilters): Promise<Task[]>;\n}\n\nexport interface TaskSearchFilters {\n  topicId?: string;\n  learningPathId?: string;\n  difficulty?: 'easy' | 'medium' | 'hard';\n  tags?: string[];\n  type?: string;\n}\n\n/**\n * Spaced repetition algorithm service\n */\nexport interface ISpacedRepetitionService {\n  // Algorithm Management\n  getNextTasks(userId: string, count: number): Promise<Task[]>;\n  recordAnswer(taskId: string, isCorrect: boolean, grade: number): Promise<void>;\n  getRepetitionData(taskId: string): Promise<SpacedRepetitionItem | null>;\n\n  // Review Scheduling\n  getTasksDue(userId: string): Promise<Task[]>;\n  getReviewSchedule(userId: string, days: number): Promise<ReviewSchedule[]>;\n  rescheduleTask(taskId: string, newDate: Date): Promise<void>;\n}\n\nexport interface ReviewSchedule {\n  date: Date;\n  taskCount: number;\n  estimatedTime: number;\n}\n\n/**\n * Practice session management service\n */\nexport interface IPracticeSessionService {\n  // Session Lifecycle\n  createSession(config: SessionConfiguration): Promise<PracticeSession>;\n  getSession(id: string): Promise<PracticeSession | null>;\n  updateSession(id: string, updates: Partial<PracticeSession>): Promise<void>;\n  completeSession(id: string): Promise<PracticeSession>;\n  pauseSession(id: string): Promise<void>;\n  resumeSession(id: string): Promise<void>;\n  abandonSession(id: string): Promise<void>;\n\n  // Session Management\n  getActiveSessions(userId: string): Promise<PracticeSession[]>;\n  getRecentSessions(userId: string, limit: number): Promise<PracticeSession[]>;\n}\n\nexport interface SessionConfiguration {\n  topicId: string;\n  learningPathIds: string[];\n  targetCount: number;\n  includeReview: boolean;\n  difficultyFilter?: 'easy' | 'medium' | 'hard';\n}\n\n/**\n * User progress tracking service\n */\nexport interface IProgressTrackingService {\n  // Progress Queries\n  getTopicProgress(userId: string, topicId: string): Promise<UserProgress | null>;\n  getLearningPathProgress(userId: string, learningPathId: string): Promise<UserProgress | null>;\n  getAllProgress(userId: string): Promise<UserProgress[]>;\n\n  // Progress Updates\n  recordTaskCompletion(userId: string, taskId: string, isCorrect: boolean, timeSpent: number): Promise<void>;\n  updateStreakDays(userId: string): Promise<void>;\n  recalculateMasteryLevel(userId: string, topicId: string): Promise<number>;\n\n  // Analytics\n  getProgressSummary(userId: string): Promise<ProgressSummary>;\n  getWeeklyStats(userId: string): Promise<WeeklyStats[]>;\n}\n\nexport interface ProgressSummary {\n  totalTopics: number;\n  completedTopics: number;\n  totalTasksCompleted: number;\n  overallAccuracy: number;\n  totalTimeSpent: number;\n  currentStreak: number;\n  longestStreak: number;\n}\n\nexport interface WeeklyStats {\n  week: string; // ISO week string\n  tasksCompleted: number;\n  accuracy: number;\n  timeSpent: number;\n  topicsStudied: string[];\n}\n\n/**\n * Answer history tracking service\n */\nexport interface IAnswerHistoryService {\n  // Recording Answers\n  recordAnswer(answer: Omit<AnswerHistory, 'id' | 'timestamp'>): Promise<AnswerHistory>;\n\n  // Querying History\n  getTaskHistory(taskId: string, userId: string): Promise<AnswerHistory[]>;\n  getUserHistory(userId: string, limit?: number): Promise<AnswerHistory[]>;\n  getSessionHistory(sessionId: string): Promise<AnswerHistory[]>;\n\n  // Analytics\n  getAccuracyTrend(userId: string, days: number): Promise<AccuracyTrend[]>;\n  getDifficultyAnalysis(userId: string, topicId: string): Promise<DifficultyAnalysis>;\n}\n\nexport interface AccuracyTrend {\n  date: Date;\n  accuracy: number;\n  taskCount: number;\n}\n\nexport interface DifficultyAnalysis {\n  easy: { total: number; correct: number; accuracy: number };\n  medium: { total: number; correct: number; accuracy: number };\n  hard: { total: number; correct: number; accuracy: number };\n}\n\n// Error Types\nexport class LearningPlatformError extends Error {\n  constructor(\n    message: string,\n    public code: string,\n    public context?: Record<string, any>\n  ) {\n    super(message);\n    this.name = 'LearningPlatformError';\n  }\n}\n\nexport class ValidationError extends LearningPlatformError {\n  constructor(message: string, context?: Record<string, any>) {\n    super(message, 'VALIDATION_ERROR', context);\n    this.name = 'ValidationError';\n  }\n}\n\nexport class NotFoundError extends LearningPlatformError {\n  constructor(resource: string, id: string) {\n    super(`${resource} with id ${id} not found`, 'NOT_FOUND', { resource, id });\n    this.name = 'NotFoundError';\n  }\n}\n\nexport class BusinessRuleError extends LearningPlatformError {\n  constructor(message: string, context?: Record<string, any>) {\n    super(message, 'BUSINESS_RULE_VIOLATION', context);\n    this.name = 'BusinessRuleError';\n  }\n}","import { PracticeSession, ValidationError } from '../types/entities';\n\n/**\n * PracticeSession entity for managing learning sessions\n */\nexport class PracticeSessionEntity implements PracticeSession {\n  id: string;\n  configuration: {\n    topicId: string;\n    learningPathIds: string[];\n    targetCount: number;\n    includeReview: boolean;\n    difficultyFilter?: 'easy' | 'medium' | 'hard';\n  };\n  execution: {\n    taskIds: string[];\n    completedCount: number;\n    correctCount: number;\n    status: 'planned' | 'active' | 'paused' | 'completed' | 'abandoned';\n    startedAt?: Date;\n    completedAt?: Date;\n    totalTimeSpent: number;\n  };\n  results: {\n    accuracy: number;\n    averageTime: number;\n    difficultyDistribution: Record<string, number>;\n    improvementAreas: string[];\n  };\n  createdAt: Date;\n  updatedAt: Date;\n\n  constructor(\n    data: Omit<PracticeSession, 'createdAt' | 'updatedAt'> & {\n      createdAt?: Date;\n      updatedAt?: Date;\n    }\n  ) {\n    PracticeSessionEntity.validate(data);\n\n    this.id = data.id;\n    this.configuration = { ...data.configuration, learningPathIds: [...data.configuration.learningPathIds] };\n    this.execution = {\n      taskIds: [...data.execution.taskIds],\n      completedCount: data.execution.completedCount,\n      correctCount: data.execution.correctCount,\n      status: data.execution.status,\n      totalTimeSpent: data.execution.totalTimeSpent,\n    };\n    if (data.execution.startedAt) {\n      this.execution.startedAt = new Date(data.execution.startedAt);\n    }\n    if (data.execution.completedAt) {\n      this.execution.completedAt = new Date(data.execution.completedAt);\n    }\n    this.results = {\n      ...data.results,\n      difficultyDistribution: { ...data.results.difficultyDistribution },\n      improvementAreas: [...data.results.improvementAreas],\n    };\n    this.createdAt = data.createdAt || new Date();\n    this.updatedAt = data.updatedAt || new Date();\n  }\n\n  /**\n   * Validates practice session data\n   */\n  static validate(data: Partial<PracticeSession>): void {\n    // Target count validation (5-50)\n    if (data.configuration?.targetCount !== undefined) {\n      if (data.configuration.targetCount < 5 || data.configuration.targetCount > 50) {\n        throw new ValidationError('Target count must be between 5 and 50', {\n          field: 'targetCount',\n          value: data.configuration.targetCount,\n        });\n      }\n    }\n\n    // Status validation\n    if (data.execution?.status !== undefined) {\n      const validStatuses = ['planned', 'active', 'paused', 'completed', 'abandoned'];\n      if (!validStatuses.includes(data.execution.status)) {\n        throw new ValidationError('Invalid session status', {\n          field: 'status',\n          value: data.execution.status,\n          validValues: validStatuses,\n        });\n      }\n    }\n  }\n\n  /**\n   * Creates a new session\n   */\n  static create(\n    id: string,\n    topicId: string,\n    learningPathIds: string[],\n    taskIds: string[],\n    config: {\n      targetCount: number;\n      includeReview: boolean;\n      difficultyFilter?: 'easy' | 'medium' | 'hard';\n    }\n  ): PracticeSessionEntity {\n    const configuration: PracticeSession['configuration'] = {\n      topicId,\n      learningPathIds,\n      targetCount: config.targetCount,\n      includeReview: config.includeReview,\n    };\n    if (config.difficultyFilter) {\n      configuration.difficultyFilter = config.difficultyFilter;\n    }\n\n    return new PracticeSessionEntity({\n      id,\n      configuration,\n      execution: {\n        taskIds,\n        completedCount: 0,\n        correctCount: 0,\n        status: 'planned',\n        totalTimeSpent: 0,\n      },\n      results: {\n        accuracy: 0,\n        averageTime: 0,\n        difficultyDistribution: {},\n        improvementAreas: [],\n      },\n    });\n  }\n\n  /**\n   * Starts the session\n   */\n  start(): void {\n    if (this.execution.status !== 'planned' && this.execution.status !== 'paused') {\n      throw new Error('Can only start planned or paused sessions');\n    }\n\n    this.execution.status = 'active';\n    if (!this.execution.startedAt) {\n      this.execution.startedAt = new Date();\n    }\n    this.updatedAt = new Date();\n  }\n\n  /**\n   * Pauses the session\n   */\n  pause(): void {\n    if (this.execution.status !== 'active') {\n      throw new Error('Can only pause active sessions');\n    }\n\n    this.execution.status = 'paused';\n    this.updatedAt = new Date();\n  }\n\n  /**\n   * Resumes the session\n   */\n  resume(): void {\n    if (this.execution.status !== 'paused') {\n      throw new Error('Can only resume paused sessions');\n    }\n\n    this.execution.status = 'active';\n    this.updatedAt = new Date();\n  }\n\n  /**\n   * Records an answer\n   */\n  recordAnswer(isCorrect: boolean, timeSpent: number): void {\n    if (this.execution.status !== 'active') {\n      throw new Error('Session must be active to record answers');\n    }\n\n    this.execution.completedCount++;\n    if (isCorrect) {\n      this.execution.correctCount++;\n    }\n    this.execution.totalTimeSpent += timeSpent;\n\n    // Recalculate results\n    this.updateResults();\n    this.updatedAt = new Date();\n  }\n\n  /**\n   * Completes the session\n   */\n  complete(): void {\n    if (this.execution.status === 'completed' || this.execution.status === 'abandoned') {\n      throw new Error('Session already finalized');\n    }\n\n    this.execution.status = 'completed';\n    this.execution.completedAt = new Date();\n    this.updateResults();\n    this.updatedAt = new Date();\n  }\n\n  /**\n   * Abandons the session\n   */\n  abandon(): void {\n    if (this.execution.status === 'completed' || this.execution.status === 'abandoned') {\n      throw new Error('Session already finalized');\n    }\n\n    this.execution.status = 'abandoned';\n    this.updatedAt = new Date();\n  }\n\n  /**\n   * Updates calculated results\n   */\n  private updateResults(): void {\n    // Calculate accuracy\n    if (this.execution.completedCount > 0) {\n      this.results.accuracy = (this.execution.correctCount / this.execution.completedCount) * 100;\n    }\n\n    // Calculate average time\n    if (this.execution.completedCount > 0) {\n      this.results.averageTime = this.execution.totalTimeSpent / this.execution.completedCount;\n    }\n  }\n\n  /**\n   * Gets progress percentage\n   */\n  getProgress(): number {\n    return (this.execution.completedCount / this.configuration.targetCount) * 100;\n  }\n\n  /**\n   * Checks if session is complete\n   */\n  isComplete(): boolean {\n    return this.execution.completedCount >= this.configuration.targetCount;\n  }\n\n  /**\n   * Gets remaining tasks count\n   */\n  getRemainingCount(): number {\n    return Math.max(0, this.configuration.targetCount - this.execution.completedCount);\n  }\n\n  /**\n   * Converts to plain object\n   */\n  toJSON(): PracticeSession {\n    const result: PracticeSession = {\n      id: this.id,\n      configuration: {\n        ...this.configuration,\n        learningPathIds: [...this.configuration.learningPathIds],\n      },\n      execution: {\n        ...this.execution,\n        taskIds: [...this.execution.taskIds],\n      },\n      results: {\n        ...this.results,\n        difficultyDistribution: { ...this.results.difficultyDistribution },\n        improvementAreas: [...this.results.improvementAreas],\n      },\n      createdAt: this.createdAt,\n      updatedAt: this.updatedAt,\n    };\n\n    if (this.configuration.difficultyFilter) {\n      result.configuration.difficultyFilter = this.configuration.difficultyFilter;\n    }\n    if (this.execution.startedAt) {\n      result.execution.startedAt = this.execution.startedAt;\n    }\n    if (this.execution.completedAt) {\n      result.execution.completedAt = this.execution.completedAt;\n    }\n\n    return result;\n  }\n\n  /**\n   * Creates from plain object\n   */\n  static fromJSON(data: PracticeSession): PracticeSessionEntity {\n    return new PracticeSessionEntity(data);\n  }\n}","import type {\n  IPracticeSessionService,\n  PracticeSession,\n  SessionConfiguration,\n} from '../types/services';\nimport type {\n  IPracticeSessionRepository,\n  ITaskRepository,\n  ISpacedRepetitionRepository,\n} from '@storage/types/adapters';\nimport { PracticeSessionEntity } from '../entities/practice-session';\nimport { NotFoundError } from '../types/entities';\n\n/**\n * Practice Session Service for managing learning sessions\n */\nexport class PracticeSessionService implements IPracticeSessionService {\n  constructor(\n    private sessionRepository: IPracticeSessionRepository,\n    private taskRepository: ITaskRepository,\n    private spacedRepRepository: ISpacedRepetitionRepository\n  ) {}\n\n  /**\n   * Creates a new practice session\n   */\n  async createSession(config: SessionConfiguration): Promise<PracticeSession> {\n    // Get tasks for the session\n    const taskIds = await this.selectTasksForSession(config);\n\n    // Create session entity\n    const sessionId = `session-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    const sessionConfig: {\n      targetCount: number;\n      includeReview: boolean;\n      difficultyFilter?: 'easy' | 'medium' | 'hard';\n    } = {\n      targetCount: config.targetCount,\n      includeReview: config.includeReview,\n    };\n    if (config.difficultyFilter) {\n      sessionConfig.difficultyFilter = config.difficultyFilter;\n    }\n\n    const sessionEntity = PracticeSessionEntity.create(\n      sessionId,\n      config.topicId,\n      config.learningPathIds,\n      taskIds,\n      sessionConfig\n    );\n\n    // Save to repository\n    return await this.sessionRepository.create(sessionEntity.toJSON());\n  }\n\n  /**\n   * Gets a session by ID\n   */\n  async getSession(id: string): Promise<PracticeSession | null> {\n    return await this.sessionRepository.getById(id);\n  }\n\n  /**\n   * Updates a session\n   */\n  async updateSession(id: string, updates: Partial<PracticeSession>): Promise<void> {\n    await this.sessionRepository.update(id, updates);\n  }\n\n  /**\n   * Completes a session\n   */\n  async completeSession(id: string): Promise<PracticeSession> {\n    const session = await this.sessionRepository.getById(id);\n    if (!session) {\n      throw new NotFoundError('PracticeSession', id);\n    }\n\n    const sessionEntity = PracticeSessionEntity.fromJSON(session);\n    sessionEntity.complete();\n\n    return await this.sessionRepository.update(id, sessionEntity.toJSON());\n  }\n\n  /**\n   * Pauses a session\n   */\n  async pauseSession(id: string): Promise<void> {\n    const session = await this.sessionRepository.getById(id);\n    if (!session) {\n      throw new NotFoundError('PracticeSession', id);\n    }\n\n    const sessionEntity = PracticeSessionEntity.fromJSON(session);\n    sessionEntity.pause();\n\n    await this.sessionRepository.update(id, sessionEntity.toJSON());\n  }\n\n  /**\n   * Resumes a session\n   */\n  async resumeSession(id: string): Promise<void> {\n    const session = await this.sessionRepository.getById(id);\n    if (!session) {\n      throw new NotFoundError('PracticeSession', id);\n    }\n\n    const sessionEntity = PracticeSessionEntity.fromJSON(session);\n    sessionEntity.resume();\n\n    await this.sessionRepository.update(id, sessionEntity.toJSON());\n  }\n\n  /**\n   * Abandons a session\n   */\n  async abandonSession(id: string): Promise<void> {\n    const session = await this.sessionRepository.getById(id);\n    if (!session) {\n      throw new NotFoundError('PracticeSession', id);\n    }\n\n    const sessionEntity = PracticeSessionEntity.fromJSON(session);\n    sessionEntity.abandon();\n\n    await this.sessionRepository.update(id, sessionEntity.toJSON());\n  }\n\n  /**\n   * Gets active sessions for a user\n   */\n  async getActiveSessions(userId: string): Promise<PracticeSession[]> {\n    return await this.sessionRepository.getActive(userId);\n  }\n\n  /**\n   * Gets recent sessions for a user\n   */\n  async getRecentSessions(userId: string, limit: number): Promise<PracticeSession[]> {\n    return await this.sessionRepository.getRecent(userId, limit);\n  }\n\n  /**\n   * Records an answer in the session\n   */\n  async recordSessionAnswer(\n    sessionId: string,\n    isCorrect: boolean,\n    timeSpent: number\n  ): Promise<void> {\n    const session = await this.sessionRepository.getById(sessionId);\n    if (!session) {\n      throw new NotFoundError('PracticeSession', sessionId);\n    }\n\n    const sessionEntity = PracticeSessionEntity.fromJSON(session);\n\n    // Start session if it's still planned\n    if (sessionEntity.execution.status === 'planned') {\n      sessionEntity.start();\n    }\n\n    sessionEntity.recordAnswer(isCorrect, timeSpent);\n\n    // Auto-complete if target reached\n    if (sessionEntity.isComplete()) {\n      sessionEntity.complete();\n    }\n\n    await this.sessionRepository.update(sessionId, sessionEntity.toJSON());\n  }\n\n  /**\n   * Selects tasks for the session based on configuration\n   */\n  private async selectTasksForSession(config: SessionConfiguration): Promise<string[]> {\n    const selectedTaskIds: string[] = [];\n    let remainingCount = config.targetCount;\n\n    console.log(`Selecting tasks: targetCount=${config.targetCount}, learningPaths=${config.learningPathIds.join(',')}`);\n\n    // Get review tasks if requested\n    if (config.includeReview && remainingCount > 0) {\n      const dueItems = await this.spacedRepRepository.getDue(new Date());\n      const reviewTaskIds = dueItems\n        .slice(0, Math.min(dueItems.length, Math.ceil(config.targetCount * 0.3))) // 30% review\n        .map((item) => item.taskId);\n\n      console.log(`Review tasks found: ${reviewTaskIds.length}`);\n      selectedTaskIds.push(...reviewTaskIds);\n      remainingCount -= reviewTaskIds.length;\n    }\n\n    // Get new tasks from learning paths\n    if (remainingCount > 0) {\n      const filters: any = {\n        learningPathIds: config.learningPathIds,\n        excludeIds: selectedTaskIds,\n      };\n      if (config.difficultyFilter) {\n        filters.difficulty = config.difficultyFilter;\n      }\n\n      console.log(`Requesting ${remainingCount} new tasks with filters:`, filters);\n      const newTasks = await this.taskRepository.getRandomTasks(remainingCount, filters);\n      console.log(`Got ${newTasks.length} tasks:`, newTasks.map(t => t.id));\n\n      selectedTaskIds.push(...newTasks.map((task) => task.id));\n    }\n\n    console.log(`Total selected tasks: ${selectedTaskIds.length}`);\n    return selectedTaskIds;\n  }\n}","import { SpacedRepetitionItem, ValidationError } from '../types/entities';\n\n/**\n * SpacedRepetitionItem entity with SM-2 algorithm implementation\n */\nexport class SpacedRepetitionItemEntity implements SpacedRepetitionItem {\n  id: string;\n  taskId: string;\n  algorithm: {\n    interval: number;\n    repetition: number;\n    efactor: number;\n  };\n  schedule: {\n    nextReview: Date;\n    lastReviewed?: Date;\n    totalReviews: number;\n    consecutiveCorrect: number;\n  };\n  performance: {\n    averageAccuracy: number;\n    averageTime: number;\n    difficultyRating: number;\n    lastGrade: number;\n  };\n  metadata: {\n    introduced: Date;\n    graduated: boolean;\n    lapseCount: number;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n\n  constructor(\n    data: Omit<SpacedRepetitionItem, 'createdAt' | 'updatedAt'> & {\n      createdAt?: Date;\n      updatedAt?: Date;\n    }\n  ) {\n    SpacedRepetitionItemEntity.validate(data);\n\n    this.id = data.id;\n    this.taskId = data.taskId;\n    this.algorithm = { ...data.algorithm };\n    this.schedule = { ...data.schedule, nextReview: new Date(data.schedule.nextReview) };\n    if (data.schedule.lastReviewed) {\n      this.schedule.lastReviewed = new Date(data.schedule.lastReviewed);\n    }\n    this.performance = { ...data.performance };\n    this.metadata = { ...data.metadata, introduced: new Date(data.metadata.introduced) };\n    this.createdAt = data.createdAt || new Date();\n    this.updatedAt = data.updatedAt || new Date();\n  }\n\n  /**\n   * Validates spaced repetition data\n   */\n  static validate(data: Partial<SpacedRepetitionItem>): void {\n    // Efactor validation (1.3-2.5)\n    if (data.algorithm?.efactor !== undefined) {\n      if (data.algorithm.efactor < 1.3 || data.algorithm.efactor > 2.5) {\n        throw new ValidationError('Efactor must be between 1.3 and 2.5', {\n          field: 'efactor',\n          value: data.algorithm.efactor,\n        });\n      }\n    }\n\n    // Interval validation (max 365 days)\n    if (data.algorithm?.interval !== undefined) {\n      if (data.algorithm.interval < 0 || data.algorithm.interval > 365) {\n        throw new ValidationError('Interval must be between 0 and 365 days', {\n          field: 'interval',\n          value: data.algorithm.interval,\n        });\n      }\n    }\n\n    // Grade validation (0-5)\n    if (data.performance?.lastGrade !== undefined) {\n      if (data.performance.lastGrade < 0 || data.performance.lastGrade > 5) {\n        throw new ValidationError('Grade must be between 0 and 5', {\n          field: 'lastGrade',\n          value: data.performance.lastGrade,\n        });\n      }\n    }\n\n    // Accuracy validation (0-100)\n    if (data.performance?.averageAccuracy !== undefined) {\n      if (data.performance.averageAccuracy < 0 || data.performance.averageAccuracy > 100) {\n        throw new ValidationError('Average accuracy must be between 0 and 100', {\n          field: 'averageAccuracy',\n          value: data.performance.averageAccuracy,\n        });\n      }\n    }\n  }\n\n  /**\n   * Creates a new spaced repetition item with default values\n   */\n  static createNew(taskId: string, id: string): SpacedRepetitionItemEntity {\n    return new SpacedRepetitionItemEntity({\n      id,\n      taskId,\n      algorithm: {\n        interval: 1,\n        repetition: 0,\n        efactor: 2.5,\n      },\n      schedule: {\n        nextReview: new Date(Date.now() + 24 * 60 * 60 * 1000), // Tomorrow\n        totalReviews: 0,\n        consecutiveCorrect: 0,\n      },\n      performance: {\n        averageAccuracy: 0,\n        averageTime: 0,\n        difficultyRating: 3,\n        lastGrade: 0,\n      },\n      metadata: {\n        introduced: new Date(),\n        graduated: false,\n        lapseCount: 0,\n      },\n    });\n  }\n\n  /**\n   * Updates the item after answering with SM-2 algorithm\n   * @param grade - Quality of answer (0-5): 0=complete blackout, 5=perfect response\n   * @param timeSpent - Time spent on the question in milliseconds\n   */\n  recordAnswer(grade: number, timeSpent: number): void {\n    if (grade < 0 || grade > 5) {\n      throw new ValidationError('Grade must be between 0 and 5', {\n        field: 'grade',\n        value: grade,\n      });\n    }\n\n    // Update performance metrics\n    this.performance.lastGrade = grade;\n    this.updateAverageAccuracy(grade >= 3);\n    this.updateAverageTime(timeSpent);\n\n    // Update schedule\n    this.schedule.totalReviews++;\n    this.schedule.lastReviewed = new Date();\n\n    // Apply SM-2 algorithm\n    if (grade < 3) {\n      // Failed - reset\n      this.algorithm.repetition = 0;\n      this.algorithm.interval = 1;\n      this.schedule.consecutiveCorrect = 0;\n      this.metadata.lapseCount++;\n      this.metadata.graduated = false;\n    } else {\n      // Passed - calculate new interval\n      this.schedule.consecutiveCorrect++;\n\n      // Calculate new efactor\n      // EF' = EF + (0.1 - (5 - q) * (0.08 + (5 - q) * 0.02))\n      const efactorChange = 0.1 - (5 - grade) * (0.08 + (5 - grade) * 0.02);\n      this.algorithm.efactor = Math.max(1.3, this.algorithm.efactor + efactorChange);\n      this.algorithm.efactor = Math.min(2.5, this.algorithm.efactor);\n\n      // Calculate new interval based on repetition count\n      if (this.algorithm.repetition === 0) {\n        this.algorithm.interval = 1;\n      } else if (this.algorithm.repetition === 1) {\n        this.algorithm.interval = 6;\n      } else {\n        this.algorithm.interval = Math.round(this.algorithm.interval * this.algorithm.efactor);\n      }\n\n      // Cap at maximum interval\n      this.algorithm.interval = Math.min(365, this.algorithm.interval);\n\n      this.algorithm.repetition++;\n\n      // Mark as graduated after 2+ successful reviews\n      if (this.algorithm.repetition >= 2) {\n        this.metadata.graduated = true;\n      }\n    }\n\n    // Calculate next review date\n    this.schedule.nextReview = new Date(\n      Date.now() + this.algorithm.interval * 24 * 60 * 60 * 1000\n    );\n\n    this.updatedAt = new Date();\n  }\n\n  /**\n   * Updates average accuracy\n   */\n  private updateAverageAccuracy(correct: boolean): void {\n    const totalReviews = this.schedule.totalReviews;\n    const currentSum = (this.performance.averageAccuracy / 100) * (totalReviews - 1);\n    const newSum = currentSum + (correct ? 1 : 0);\n    this.performance.averageAccuracy = (newSum / totalReviews) * 100;\n  }\n\n  /**\n   * Updates average time\n   */\n  private updateAverageTime(timeSpent: number): void {\n    const totalReviews = this.schedule.totalReviews;\n    const currentSum = this.performance.averageTime * (totalReviews - 1);\n    const newSum = currentSum + timeSpent;\n    this.performance.averageTime = newSum / totalReviews;\n  }\n\n  /**\n   * Checks if the item is due for review\n   */\n  isDue(): boolean {\n    return this.schedule.nextReview.getTime() <= Date.now();\n  }\n\n  /**\n   * Gets days until next review\n   */\n  daysUntilReview(): number {\n    const diff = this.schedule.nextReview.getTime() - Date.now();\n    return Math.ceil(diff / (24 * 60 * 60 * 1000));\n  }\n\n  /**\n   * Converts to plain object\n   */\n  toJSON(): SpacedRepetitionItem {\n    const result: SpacedRepetitionItem = {\n      id: this.id,\n      taskId: this.taskId,\n      algorithm: { ...this.algorithm },\n      schedule: {\n        nextReview: this.schedule.nextReview,\n        totalReviews: this.schedule.totalReviews,\n        consecutiveCorrect: this.schedule.consecutiveCorrect,\n      },\n      performance: { ...this.performance },\n      metadata: {\n        introduced: this.metadata.introduced,\n        graduated: this.metadata.graduated,\n        lapseCount: this.metadata.lapseCount,\n      },\n      createdAt: this.createdAt,\n      updatedAt: this.updatedAt,\n    };\n\n    if (this.schedule.lastReviewed) {\n      result.schedule.lastReviewed = this.schedule.lastReviewed;\n    }\n\n    return result;\n  }\n\n  /**\n   * Creates from plain object\n   */\n  static fromJSON(data: SpacedRepetitionItem): SpacedRepetitionItemEntity {\n    return new SpacedRepetitionItemEntity(data);\n  }\n}","import type {\n  ISpacedRepetitionService,\n  Task,\n  SpacedRepetitionItem,\n  ReviewSchedule,\n} from '../types/services';\nimport type { ISpacedRepetitionRepository, ITaskRepository } from '@storage/types/adapters';\nimport { SpacedRepetitionItemEntity } from '../entities/spaced-repetition-item';\nimport { NotFoundError } from '../types/entities';\n\n/**\n * Spaced Repetition Service implementing SM-2 algorithm\n */\nexport class SpacedRepetitionService implements ISpacedRepetitionService {\n  constructor(\n    private spacedRepRepository: ISpacedRepetitionRepository,\n    private taskRepository: ITaskRepository\n  ) {}\n\n  /**\n   * Gets the next tasks for review based on spaced repetition\n   */\n  async getNextTasks(_userId: string, count: number): Promise<Task[]> {\n    // Get all items due for review\n    const dueItems = await this.spacedRepRepository.getDue(new Date());\n\n    // Sort by priority (more lapses = higher priority)\n    const sortedItems = dueItems.sort((a, b) => {\n      // Prioritize items with more lapses\n      if (b.metadata.lapseCount !== a.metadata.lapseCount) {\n        return b.metadata.lapseCount - a.metadata.lapseCount;\n      }\n      // Then by how overdue they are\n      return a.schedule.nextReview.getTime() - b.schedule.nextReview.getTime();\n    });\n\n    // Get the requested number of items\n    const selectedItems = sortedItems.slice(0, count);\n\n    // Fetch the corresponding tasks\n    const tasks: Task[] = [];\n    for (const item of selectedItems) {\n      const task = await this.taskRepository.getById(item.taskId);\n      if (task) {\n        tasks.push(task);\n      }\n    }\n\n    return tasks;\n  }\n\n  /**\n   * Records an answer and updates the spaced repetition data\n   */\n  async recordAnswer(taskId: string, _isCorrect: boolean, grade: number): Promise<void> {\n    // Validate grade\n    if (grade < 0 || grade > 5) {\n      throw new Error('Grade must be between 0 and 5');\n    }\n\n    // Get or create spaced repetition item\n    let srItem = await this.spacedRepRepository.getByTaskId(taskId);\n\n    if (!srItem) {\n      // Create new item for first review\n      const newItem = SpacedRepetitionItemEntity.createNew(\n        taskId,\n        `sr-${taskId}-${Date.now()}`\n      );\n      srItem = await this.spacedRepRepository.create(newItem.toJSON());\n    }\n\n    // Convert to entity and record answer\n    const srEntity = SpacedRepetitionItemEntity.fromJSON(srItem);\n    srEntity.recordAnswer(grade, 0); // timeSpent handled separately in answer history\n\n    // Update in repository\n    await this.spacedRepRepository.update(srItem.id, srEntity.toJSON());\n  }\n\n  /**\n   * Gets the spaced repetition data for a task\n   */\n  async getRepetitionData(taskId: string): Promise<SpacedRepetitionItem | null> {\n    return await this.spacedRepRepository.getByTaskId(taskId);\n  }\n\n  /**\n   * Gets all tasks due for review\n   */\n  async getTasksDue(_userId: string): Promise<Task[]> {\n    const dueItems = await this.spacedRepRepository.getDue(new Date());\n\n    const tasks: Task[] = [];\n    for (const item of dueItems) {\n      const task = await this.taskRepository.getById(item.taskId);\n      if (task) {\n        tasks.push(task);\n      }\n    }\n\n    return tasks;\n  }\n\n  /**\n   * Gets the review schedule for the next N days\n   */\n  async getReviewSchedule(_userId: string, days: number): Promise<ReviewSchedule[]> {\n    const schedule: ReviewSchedule[] = [];\n    const now = new Date();\n\n    for (let i = 0; i < days; i++) {\n      const date = new Date(now);\n      date.setDate(date.getDate() + i);\n      date.setHours(23, 59, 59, 999); // End of day\n\n      const items = await this.spacedRepRepository.getByNextReviewDate(date);\n\n      let estimatedTime = 0;\n      for (const item of items) {\n        // Use average time or default to 30 seconds per task\n        estimatedTime += item.performance.averageTime || 30000;\n      }\n\n      schedule.push({\n        date,\n        taskCount: items.length,\n        estimatedTime: Math.round(estimatedTime / 1000), // Convert to seconds\n      });\n    }\n\n    return schedule;\n  }\n\n  /**\n   * Manually reschedules a task to a new date\n   */\n  async rescheduleTask(taskId: string, newDate: Date): Promise<void> {\n    const srItem = await this.spacedRepRepository.getByTaskId(taskId);\n\n    if (!srItem) {\n      throw new NotFoundError('SpacedRepetitionItem', taskId);\n    }\n\n    // Update the next review date\n    await this.spacedRepRepository.updateSchedule(srItem.id, {\n      ...srItem.schedule,\n      nextReview: newDate,\n    });\n  }\n\n  /**\n   * Gets statistics about the spaced repetition system\n   */\n  async getStatistics(_userId: string): Promise<{\n    totalItems: number;\n    dueToday: number;\n    graduated: number;\n    averageInterval: number;\n    averageAccuracy: number;\n  }> {\n    // This would need a custom query or iteration\n    // For now, return placeholder\n    const allItems = await this.spacedRepRepository.getAll();\n    const dueItems = await this.spacedRepRepository.getDue(new Date());\n\n    const graduated = allItems.filter((item) => item.metadata.graduated).length;\n    const totalInterval = allItems.reduce((sum, item) => sum + item.algorithm.interval, 0);\n    const totalAccuracy = allItems.reduce((sum, item) => sum + item.performance.averageAccuracy, 0);\n\n    return {\n      totalItems: allItems.length,\n      dueToday: dueItems.length,\n      graduated,\n      averageInterval: allItems.length > 0 ? totalInterval / allItems.length : 0,\n      averageAccuracy: allItems.length > 0 ? totalAccuracy / allItems.length : 0,\n    };\n  }\n}","/**\n * Simplified repository implementations for IndexedDB using Dexie\n * These provide basic functionality to get the platform working\n */\n\nimport type { Table } from 'dexie';\nimport type {\n  Topic,\n  LearningPath,\n  Task,\n  AnswerHistory,\n  UserProgress,\n  PracticeSession,\n  SpacedRepetitionItem,\n} from '@core/types/services';\nimport type {\n  ITopicRepository,\n  ILearningPathRepository,\n  ITaskRepository,\n  IAnswerHistoryRepository,\n  IUserProgressRepository,\n  IPracticeSessionRepository,\n  ISpacedRepetitionRepository,\n} from '@storage/types/adapters';\n\n/**\n * Topic repository\n */\nexport class TopicRepository implements Partial<ITopicRepository> {\n  constructor(private table: Table<Topic, string>) {}\n\n  async create(topic: Topic): Promise<Topic> {\n    await this.table.add(topic);\n    return topic;\n  }\n\n  async getById(id: string): Promise<Topic | null> {\n    return (await this.table.get(id)) || null;\n  }\n\n  async getAll(): Promise<Topic[]> {\n    return await this.table.toArray();\n  }\n\n  async update(id: string, updates: Partial<Topic>): Promise<Topic> {\n    await this.table.update(id, updates);\n    return (await this.table.get(id))!;\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.table.delete(id);\n  }\n\n  async getActive(): Promise<Topic[]> {\n    return await this.table.where('isActive').equals(1).toArray();\n  }\n\n  async search(query: string): Promise<Topic[]> {\n    const lowerQuery = query.toLowerCase();\n    return await this.table\n      .filter((t) => t.title.toLowerCase().includes(lowerQuery))\n      .toArray();\n  }\n\n  // Stub methods\n  async getByTitle(_title: string): Promise<Topic | null> {\n    return null;\n  }\n  async createMany(_entities: any[]): Promise<Topic[]> {\n    return [];\n  }\n  async updateMany(_updates: any[]): Promise<void> {}\n  async deleteMany(_ids: string[]): Promise<void> {}\n  async count(): Promise<number> {\n    return await this.table.count();\n  }\n  async exists(id: string): Promise<boolean> {\n    return !!(await this.table.get(id));\n  }\n}\n\n/**\n * LearningPath repository\n */\nexport class LearningPathRepository implements Partial<ILearningPathRepository> {\n  constructor(private table: Table<LearningPath, string>) {}\n\n  async create(path: LearningPath): Promise<LearningPath> {\n    await this.table.add(path);\n    return path;\n  }\n\n  async getById(id: string): Promise<LearningPath | null> {\n    return (await this.table.get(id)) || null;\n  }\n\n  async getAll(): Promise<LearningPath[]> {\n    return await this.table.toArray();\n  }\n\n  async update(id: string, updates: Partial<LearningPath>): Promise<LearningPath> {\n    await this.table.update(id, updates);\n    return (await this.table.get(id))!;\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.table.delete(id);\n  }\n\n  async getByTopicId(topicId: string): Promise<LearningPath[]> {\n    return await this.table.where('topicId').equals(topicId).toArray();\n  }\n\n  async getByDifficulty(difficulty: 'easy' | 'medium' | 'hard'): Promise<LearningPath[]> {\n    return await this.table.where('difficulty').equals(difficulty).toArray();\n  }\n\n  async getActive(): Promise<LearningPath[]> {\n    return await this.table.where('isActive').equals(1).toArray();\n  }\n\n  // Stub methods\n  async searchByTitle(_query: string): Promise<LearningPath[]> {\n    return [];\n  }\n  async createMany(_entities: any[]): Promise<LearningPath[]> {\n    return [];\n  }\n  async updateMany(_updates: any[]): Promise<void> {}\n  async deleteMany(_ids: string[]): Promise<void> {}\n  async count(): Promise<number> {\n    return await this.table.count();\n  }\n  async exists(id: string): Promise<boolean> {\n    return !!(await this.table.get(id));\n  }\n}\n\n/**\n * Task repository\n */\nexport class TaskRepository implements Partial<ITaskRepository> {\n  constructor(private table: Table<Task, string>) {}\n\n  async create(task: Task): Promise<Task> {\n    await this.table.add(task);\n    return task;\n  }\n\n  async getById(id: string): Promise<Task | null> {\n    return (await this.table.get(id)) || null;\n  }\n\n  async getAll(): Promise<Task[]> {\n    return await this.table.toArray();\n  }\n\n  async update(id: string, updates: Partial<Task>): Promise<Task> {\n    await this.table.update(id, updates);\n    return (await this.table.get(id))!;\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.table.delete(id);\n  }\n\n  async getByLearningPathId(learningPathId: string): Promise<Task[]> {\n    return await this.table.where('learningPathId').equals(learningPathId).toArray();\n  }\n\n  async getRandomTasks(\n    count: number,\n    filters?: {\n      learningPathIds?: string[];\n      difficulty?: string;\n      excludeIds?: string[];\n    }\n  ): Promise<Task[]> {\n    console.log(`[TaskRepository] getRandomTasks called: count=${count}, filters=`, filters);\n\n    let tasks: Task[];\n    if (filters?.learningPathIds) {\n      tasks = await this.table\n        .where('learningPathId')\n        .anyOf(filters.learningPathIds)\n        .toArray();\n      console.log(`[TaskRepository] Found ${tasks.length} tasks for learning paths:`, filters.learningPathIds);\n      console.log(`[TaskRepository] Task IDs:`, tasks.map(t => t.id));\n    } else {\n      tasks = await this.table.toArray();\n      console.log(`[TaskRepository] Found ${tasks.length} tasks (no filter)`);\n    }\n\n    if (filters?.excludeIds) {\n      const beforeExclude = tasks.length;\n      tasks = tasks.filter((t) => !filters.excludeIds!.includes(t.id));\n      console.log(`[TaskRepository] After excluding IDs: ${beforeExclude} -> ${tasks.length} tasks`);\n    }\n\n    // Shuffle tasks\n    const shuffled = tasks.sort(() => Math.random() - 0.5);\n\n    // If we have fewer tasks than requested, repeat tasks to reach count\n    const result: Task[] = [];\n    if (shuffled.length === 0) {\n      console.log(`[TaskRepository] No tasks available!`);\n      return result;\n    }\n\n    for (let i = 0; i < count; i++) {\n      const task = shuffled[i % shuffled.length];\n      if (task) {\n        result.push(task);\n      }\n    }\n\n    console.log(`[TaskRepository] Returning ${result.length} tasks (${shuffled.length} unique, repeated to reach ${count})`);\n    return result;\n  }\n\n  // Stub methods\n  async getByLearningPathIds(_ids: string[]): Promise<Task[]> {\n    return [];\n  }\n  async getByType(_type: string): Promise<Task[]> {\n    return [];\n  }\n  async getByDifficulty(_difficulty: 'easy' | 'medium' | 'hard'): Promise<Task[]> {\n    return [];\n  }\n  async getByTags(_tags: string[]): Promise<Task[]> {\n    return [];\n  }\n  async search(_query: any): Promise<Task[]> {\n    return [];\n  }\n  async createMany(_entities: any[]): Promise<Task[]> {\n    return [];\n  }\n  async updateMany(_updates: any[]): Promise<void> {}\n  async deleteMany(_ids: string[]): Promise<void> {}\n  async count(): Promise<number> {\n    return await this.table.count();\n  }\n  async exists(id: string): Promise<boolean> {\n    return !!(await this.table.get(id));\n  }\n}\n\n/**\n * AnswerHistory repository\n */\nexport class AnswerHistoryRepository implements Partial<IAnswerHistoryRepository> {\n  constructor(private table: Table<AnswerHistory, string>) {}\n\n  async create(history: AnswerHistory): Promise<AnswerHistory> {\n    await this.table.add(history);\n    return history;\n  }\n\n  async getById(id: string): Promise<AnswerHistory | null> {\n    return (await this.table.get(id)) || null;\n  }\n\n  async getAll(): Promise<AnswerHistory[]> {\n    return await this.table.toArray();\n  }\n\n  async update(id: string, updates: Partial<AnswerHistory>): Promise<AnswerHistory> {\n    await this.table.update(id, updates);\n    return (await this.table.get(id))!;\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.table.delete(id);\n  }\n\n  async getByTaskId(taskId: string): Promise<AnswerHistory[]> {\n    return await this.table.where('taskId').equals(taskId).toArray();\n  }\n\n  async getBySessionId(sessionId: string): Promise<AnswerHistory[]> {\n    return await this.table.where('sessionId').equals(sessionId).toArray();\n  }\n\n  // Stub methods\n  async getByUserId(_userId: string, _limit?: number): Promise<AnswerHistory[]> {\n    return [];\n  }\n  async getByDateRange(_startDate: Date, _endDate: Date): Promise<AnswerHistory[]> {\n    return [];\n  }\n  async getCorrectAnswers(taskId: string): Promise<AnswerHistory[]> {\n    return await this.table.where('taskId').equals(taskId).filter((h) => h.isCorrect).toArray();\n  }\n  async getIncorrectAnswers(taskId: string): Promise<AnswerHistory[]> {\n    return await this.table.where('taskId').equals(taskId).filter((h) => !h.isCorrect).toArray();\n  }\n  async getAccuracyForPeriod(_userId: string, _startDate: Date, _endDate: Date): Promise<number> {\n    return 0;\n  }\n  async createMany(_entities: any[]): Promise<AnswerHistory[]> {\n    return [];\n  }\n  async updateMany(_updates: any[]): Promise<void> {}\n  async deleteMany(_ids: string[]): Promise<void> {}\n  async count(): Promise<number> {\n    return await this.table.count();\n  }\n  async exists(id: string): Promise<boolean> {\n    return !!(await this.table.get(id));\n  }\n}\n\n/**\n * UserProgress repository\n */\nexport class UserProgressRepository implements Partial<IUserProgressRepository> {\n  constructor(private table: Table<UserProgress, string>) {}\n\n  async create(progress: UserProgress): Promise<UserProgress> {\n    await this.table.add(progress);\n    return progress;\n  }\n\n  async getById(id: string): Promise<UserProgress | null> {\n    return (await this.table.get(id)) || null;\n  }\n\n  async getAll(): Promise<UserProgress[]> {\n    return await this.table.toArray();\n  }\n\n  async update(id: string, updates: Partial<UserProgress>): Promise<UserProgress> {\n    await this.table.update(id, updates);\n    return (await this.table.get(id))!;\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.table.delete(id);\n  }\n\n  async getByTopicId(topicId: string): Promise<UserProgress | null> {\n    const results = await this.table.where('topicId').equals(topicId).toArray();\n    return results[0] || null;\n  }\n\n  async getByLearningPathId(learningPathId: string): Promise<UserProgress | null> {\n    const results = await this.table.where('learningPathId').equals(learningPathId).toArray();\n    return results[0] || null;\n  }\n\n  // Stub methods\n  async getByUserId(_userId: string): Promise<UserProgress[]> {\n    return [];\n  }\n  async updateStatistics(_id: string, _stats: any): Promise<void> {}\n  async incrementTaskCount(_id: string, _correct: boolean): Promise<void> {}\n  async updateStreak(_id: string, _streakDays: number): Promise<void> {}\n  async createMany(_entities: any[]): Promise<UserProgress[]> {\n    return [];\n  }\n  async updateMany(_updates: any[]): Promise<void> {}\n  async deleteMany(_ids: string[]): Promise<void> {}\n  async count(): Promise<number> {\n    return await this.table.count();\n  }\n  async exists(id: string): Promise<boolean> {\n    return !!(await this.table.get(id));\n  }\n}\n\n/**\n * PracticeSession repository\n */\nexport class PracticeSessionRepository implements Partial<IPracticeSessionRepository> {\n  constructor(private table: Table<PracticeSession, string>) {}\n\n  async create(session: PracticeSession): Promise<PracticeSession> {\n    await this.table.add(session);\n    return session;\n  }\n\n  async getById(id: string): Promise<PracticeSession | null> {\n    return (await this.table.get(id)) || null;\n  }\n\n  async getAll(): Promise<PracticeSession[]> {\n    return await this.table.toArray();\n  }\n\n  async update(id: string, updates: Partial<PracticeSession>): Promise<PracticeSession> {\n    await this.table.update(id, updates);\n    return (await this.table.get(id))!;\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.table.delete(id);\n  }\n\n  async getActive(_userId: string): Promise<PracticeSession[]> {\n    return await this.table\n      .where('execution.status')\n      .anyOf(['planned', 'active', 'paused'])\n      .toArray();\n  }\n\n  async getRecent(_userId: string, limit: number): Promise<PracticeSession[]> {\n    return await this.table.orderBy('createdAt').reverse().limit(limit).toArray();\n  }\n\n  async getByStatus(status: any): Promise<PracticeSession[]> {\n    return await this.table.where('execution.status').equals(status).toArray();\n  }\n\n  // Stub methods\n  async getByUserId(_userId: string): Promise<PracticeSession[]> {\n    return [];\n  }\n  async getByDateRange(_startDate: Date, _endDate: Date): Promise<PracticeSession[]> {\n    return [];\n  }\n  async updateStatus(_id: string, _status: any): Promise<void> {}\n  async incrementProgress(_id: string, _correct: boolean, _timeSpent: number): Promise<void> {}\n  async createMany(_entities: any[]): Promise<PracticeSession[]> {\n    return [];\n  }\n  async updateMany(_updates: any[]): Promise<void> {}\n  async deleteMany(_ids: string[]): Promise<void> {}\n  async count(): Promise<number> {\n    return await this.table.count();\n  }\n  async exists(id: string): Promise<boolean> {\n    return !!(await this.table.get(id));\n  }\n}\n\n/**\n * SpacedRepetition repository\n */\nexport class SpacedRepetitionRepository implements Partial<ISpacedRepetitionRepository> {\n  constructor(private table: Table<SpacedRepetitionItem, string>) {}\n\n  async create(item: SpacedRepetitionItem): Promise<SpacedRepetitionItem> {\n    await this.table.add(item);\n    return item;\n  }\n\n  async getById(id: string): Promise<SpacedRepetitionItem | null> {\n    return (await this.table.get(id)) || null;\n  }\n\n  async getAll(): Promise<SpacedRepetitionItem[]> {\n    return await this.table.toArray();\n  }\n\n  async update(id: string, updates: Partial<SpacedRepetitionItem>): Promise<SpacedRepetitionItem> {\n    await this.table.update(id, updates);\n    return (await this.table.get(id))!;\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.table.delete(id);\n  }\n\n  async getByTaskId(taskId: string): Promise<SpacedRepetitionItem | null> {\n    const items = await this.table.where('taskId').equals(taskId).toArray();\n    return items[0] || null;\n  }\n\n  async getDue(date: Date): Promise<SpacedRepetitionItem[]> {\n    return await this.table.where('schedule.nextReview').belowOrEqual(date).toArray();\n  }\n\n  // Stub methods\n  async getByNextReviewDate(_date: Date): Promise<SpacedRepetitionItem[]> {\n    return [];\n  }\n  async updateAlgorithmData(_id: string, _algorithm: any): Promise<void> {}\n  async updateSchedule(_id: string, _schedule: any): Promise<void> {}\n  async updatePerformance(_id: string, _performance: any): Promise<void> {}\n  async getReviewCalendar(_startDate: Date, _endDate: Date): Promise<any[]> {\n    return [];\n  }\n  async createMany(_entities: any[]): Promise<SpacedRepetitionItem[]> {\n    return [];\n  }\n  async updateMany(_updates: any[]): Promise<void> {}\n  async deleteMany(_ids: string[]): Promise<void> {}\n  async count(): Promise<number> {\n    return await this.table.count();\n  }\n  async exists(id: string): Promise<boolean> {\n    return !!(await this.table.get(id));\n  }\n}","import { db } from './database';\nimport {\n  TopicRepository,\n  LearningPathRepository,\n  TaskRepository,\n  AnswerHistoryRepository,\n  UserProgressRepository,\n  PracticeSessionRepository,\n  SpacedRepetitionRepository,\n} from './adapters/repositories-simple';\nimport type {\n  ITopicRepository,\n  ILearningPathRepository,\n  ITaskRepository,\n  IAnswerHistoryRepository,\n  IUserProgressRepository,\n  IPracticeSessionRepository,\n  ISpacedRepetitionRepository,\n} from './types/adapters';\n\n/**\n * Storage factory for creating repository instances\n */\nexport class StorageFactory {\n  private static topicRepo: ITopicRepository;\n  private static learningPathRepo: ILearningPathRepository;\n  private static taskRepo: ITaskRepository;\n  private static answerHistoryRepo: IAnswerHistoryRepository;\n  private static userProgressRepo: IUserProgressRepository;\n  private static practiceSessionRepo: IPracticeSessionRepository;\n  private static spacedRepetitionRepo: ISpacedRepetitionRepository;\n\n  /**\n   * Gets the Topic repository\n   */\n  static getTopicRepository(): any {\n    if (!this.topicRepo) {\n      this.topicRepo = new TopicRepository(db.topics) as any;\n    }\n    return this.topicRepo;\n  }\n\n  /**\n   * Gets the LearningPath repository\n   */\n  static getLearningPathRepository(): any {\n    if (!this.learningPathRepo) {\n      this.learningPathRepo = new LearningPathRepository(db.learningPaths) as any;\n    }\n    return this.learningPathRepo;\n  }\n\n  /**\n   * Gets the Task repository\n   */\n  static getTaskRepository(): any {\n    if (!this.taskRepo) {\n      this.taskRepo = new TaskRepository(db.tasks) as any;\n    }\n    return this.taskRepo;\n  }\n\n  /**\n   * Gets the AnswerHistory repository\n   */\n  static getAnswerHistoryRepository(): any {\n    if (!this.answerHistoryRepo) {\n      this.answerHistoryRepo = new AnswerHistoryRepository(db.answerHistory) as any;\n    }\n    return this.answerHistoryRepo;\n  }\n\n  /**\n   * Gets the UserProgress repository\n   */\n  static getUserProgressRepository(): any {\n    if (!this.userProgressRepo) {\n      this.userProgressRepo = new UserProgressRepository(db.userProgress) as any;\n    }\n    return this.userProgressRepo;\n  }\n\n  /**\n   * Gets the PracticeSession repository\n   */\n  static getPracticeSessionRepository(): any {\n    if (!this.practiceSessionRepo) {\n      this.practiceSessionRepo = new PracticeSessionRepository(db.practiceSessions) as any;\n    }\n    return this.practiceSessionRepo;\n  }\n\n  /**\n   * Gets the SpacedRepetition repository\n   */\n  static getSpacedRepetitionRepository(): any {\n    if (!this.spacedRepetitionRepo) {\n      this.spacedRepetitionRepo = new SpacedRepetitionRepository(db.spacedRepetition) as any;\n    }\n    return this.spacedRepetitionRepo;\n  }\n\n  /**\n   * Resets all repository instances (useful for testing)\n   */\n  static reset(): void {\n    this.topicRepo = null as any;\n    this.learningPathRepo = null as any;\n    this.taskRepo = null as any;\n    this.answerHistoryRepo = null as any;\n    this.userProgressRepo = null as any;\n    this.practiceSessionRepo = null as any;\n    this.spacedRepetitionRepo = null as any;\n  }\n}\n\n/**\n * Convenience functions for getting repositories\n */\nexport const getTopicRepository = () => StorageFactory.getTopicRepository();\nexport const getLearningPathRepository = () => StorageFactory.getLearningPathRepository();\nexport const getTaskRepository = () => StorageFactory.getTaskRepository();\nexport const getAnswerHistoryRepository = () => StorageFactory.getAnswerHistoryRepository();\nexport const getUserProgressRepository = () => StorageFactory.getUserProgressRepository();\nexport const getPracticeSessionRepository = () => StorageFactory.getPracticeSessionRepository();\nexport const getSpacedRepetitionRepository = () => StorageFactory.getSpacedRepetitionRepository();","/**\n * AudioPlayback Entity\n *\n * Represents the current audio playback state during a practice session.\n * This is runtime state only (not persisted to storage).\n *\n * Feature: Auto-Play Audio for Language Learning Tasks\n * Branch: 005-issue-23\n * Phase: 3.3 - Core Entities\n */\n\n/**\n * Playback status values\n */\nexport type PlaybackStatus = 'playing' | 'paused' | 'stopped' | 'loading' | 'error';\n\n/**\n * Audio playback state\n * Tracks current audio playback during a practice session\n */\nexport interface AudioPlayback {\n  /** URL of currently playing/loaded audio */\n  audioUrl: string | null;\n\n  /** Current playback status */\n  status: PlaybackStatus;\n\n  /** Current playback position in seconds */\n  currentTime: number;\n\n  /** Total audio duration in seconds */\n  duration: number;\n\n  /** Whether browser has granted auto-play permission */\n  autoPlayUnlocked: boolean;\n\n  /** URL of preloaded next question's audio */\n  preloadedNextUrl: string | null;\n\n  /** Error message if status === 'error' */\n  error: string | null;\n}\n\n/**\n * Initial/default playback state\n */\nexport const INITIAL_PLAYBACK_STATE: AudioPlayback = {\n  audioUrl: null,\n  status: 'stopped',\n  currentTime: 0,\n  duration: 0,\n  autoPlayUnlocked: false,\n  preloadedNextUrl: null,\n  error: null,\n};\n\n/**\n * Validate audio playback state\n * @throws Error if validation fails\n */\nexport function validateAudioPlayback(state: unknown): AudioPlayback {\n  const s = state as Partial<AudioPlayback>;\n\n  const validStatuses: PlaybackStatus[] = ['playing', 'paused', 'stopped', 'loading', 'error'];\n  if (!validStatuses.includes(s.status as PlaybackStatus)) {\n    throw new Error(`Invalid status: ${s.status}`);\n  }\n\n  if (s.currentTime !== undefined && (s.currentTime < 0 || !isFinite(s.currentTime))) {\n    throw new Error('currentTime must be non-negative finite number');\n  }\n\n  if (s.duration !== undefined && (s.duration < 0 || !isFinite(s.duration))) {\n    throw new Error('duration must be non-negative finite number');\n  }\n\n  if (s.currentTime !== undefined && s.duration !== undefined && s.currentTime > s.duration) {\n    throw new Error('currentTime cannot exceed duration');\n  }\n\n  if (s.status === 'error' && !s.error) {\n    throw new Error('error message required when status is error');\n  }\n\n  if (s.status === 'playing' && !s.audioUrl) {\n    throw new Error('audioUrl required when status is playing');\n  }\n\n  return s as AudioPlayback;\n}\n\n/**\n * Check if playback state allows play/pause toggle\n */\nexport function canTogglePlayback(state: AudioPlayback): boolean {\n  return state.status === 'playing' || state.status === 'paused';\n}\n\n/**\n * Check if playback state allows replay\n */\nexport function canReplay(state: AudioPlayback): boolean {\n  return state.audioUrl !== null && state.status !== 'loading';\n}\n","/**\n * Audio Service Implementation\n *\n * Manages audio playback lifecycle for language learning tasks.\n * Handles browser auto-play policies, preloading, and state management.\n *\n * Feature: Auto-Play Audio for Language Learning Tasks\n * Branch: 005-issue-23\n * Phase: 3.5 - Audio Service\n */\n\nimport type { Task } from '../types/services';\nimport type { AudioSettings } from '../entities/audio-settings';\nimport type { AudioPlayback } from '../entities/audio-playback';\nimport { INITIAL_PLAYBACK_STATE } from '../entities/audio-playback';\n\nconst AUTO_PLAY_DELAY_MS = 500;\nconst MAX_AUDIO_URL_LENGTH = 2048; // Maximum URL length for security\nconst MIN_PLAY_INTERVAL_MS = 100; // Minimum time between play() calls (rate limiting)\n\n/**\n * Audio Service Interface\n */\nexport interface IAudioService {\n  initialize(): Promise<void>;\n  loadAudio(task: Task, settings: AudioSettings, autoPlay: boolean): Promise<void>;\n  play(): Promise<void>;\n  pause(): void;\n  stop(): void;\n  replay(): Promise<void>;\n  togglePlayPause(): Promise<void>;\n  preloadNext(nextTask: Task): void;\n  checkAutoPlayPermission(): Promise<boolean>;\n  unlockAutoPlay(): Promise<boolean>;\n  getPlaybackState(): AudioPlayback;\n  onStateChange(callback: (state: AudioPlayback) => void): () => void;\n  dispose(): void;\n}\n\n/**\n * AudioService implementation using HTMLAudioElement\n */\nclass AudioService implements IAudioService {\n  private audio: HTMLAudioElement | null = null;\n  private state: AudioPlayback = { ...INITIAL_PLAYBACK_STATE };\n  private stateListeners: Set<(state: AudioPlayback) => void> = new Set();\n  private preloadedAudio: HTMLAudioElement | null = null;\n  private autoPlayTimer: number | null = null;\n  private lastPlayTime: number = 0; // For rate limiting\n\n  async initialize(): Promise<void> {\n    // Service is ready to use\n    this.setState({ ...INITIAL_PLAYBACK_STATE });\n  }\n\n  async loadAudio(task: Task, _settings: AudioSettings, autoPlay: boolean): Promise<void> {\n    // Stop and cleanup previous audio\n    this.stop();\n    this.clearAutoPlayTimer();\n\n    if (!task.audioUrl) {\n      throw new Error('Task does not have an audio URL');\n    }\n\n    // Validate audio URL\n    const validatedUrl = this.validateAudioUrl(task.audioUrl);\n    if (!validatedUrl) {\n      throw new Error('Invalid audio URL');\n    }\n\n    // Create new audio element\n    this.audio = new Audio(task.audioUrl);\n\n    // Set initial state\n    this.setState({\n      audioUrl: task.audioUrl,\n      status: 'loading',\n      currentTime: 0,\n      duration: 0,\n      autoPlayUnlocked: this.state.autoPlayUnlocked,\n      preloadedNextUrl: this.state.preloadedNextUrl,\n      error: null,\n    });\n\n    // Setup event listeners\n    this.audio.addEventListener('loadedmetadata', () => {\n      if (this.audio) {\n        this.setState({\n          ...this.state,\n          duration: this.audio.duration,\n          status: 'stopped',\n        });\n      }\n    });\n\n    this.audio.addEventListener('timeupdate', () => {\n      if (this.audio && this.state.status === 'playing') {\n        this.setState({\n          ...this.state,\n          currentTime: this.audio.currentTime,\n        });\n      }\n    });\n\n    this.audio.addEventListener('ended', () => {\n      this.setState({\n        ...this.state,\n        status: 'stopped',\n        currentTime: 0,\n      });\n    });\n\n    this.audio.addEventListener('error', (e) => {\n      this.setState({\n        ...this.state,\n        status: 'error',\n        error: `Failed to load audio: ${e.message || 'Unknown error'}`,\n      });\n    });\n\n    // Load the audio\n    this.audio.load();\n\n    // Auto-play if requested and unlocked\n    if (autoPlay && this.state.autoPlayUnlocked) {\n      this.autoPlayTimer = window.setTimeout(async () => {\n        try {\n          await this.play();\n        } catch (error) {\n          console.error('Auto-play failed:', error);\n        }\n      }, AUTO_PLAY_DELAY_MS);\n    }\n  }\n\n  async play(): Promise<void> {\n    if (!this.audio) {\n      throw new Error('No audio loaded');\n    }\n\n    // Rate limiting: prevent rapid successive play() calls\n    const now = Date.now();\n    const timeSinceLastPlay = now - this.lastPlayTime;\n    if (timeSinceLastPlay < MIN_PLAY_INTERVAL_MS) {\n      console.warn('Rate limit: Too many play() calls. Please wait.');\n      return;\n    }\n    this.lastPlayTime = now;\n\n    try {\n      await this.audio.play();\n      this.setState({\n        ...this.state,\n        status: 'playing',\n      });\n    } catch (error: any) {\n      if (error.name === 'NotAllowedError') {\n        this.setState({\n          ...this.state,\n          status: 'error',\n          error: 'Auto-play blocked by browser. Please click to enable audio.',\n        });\n      }\n      throw error;\n    }\n  }\n\n  pause(): void {\n    if (!this.audio) {\n      return;\n    }\n\n    this.audio.pause();\n    this.setState({\n      ...this.state,\n      status: 'paused',\n      currentTime: this.audio.currentTime,\n    });\n  }\n\n  stop(): void {\n    if (!this.audio) {\n      return;\n    }\n\n    this.audio.pause();\n    this.audio.currentTime = 0;\n    this.setState({\n      ...this.state,\n      status: 'stopped',\n      currentTime: 0,\n    });\n  }\n\n  async replay(): Promise<void> {\n    if (!this.audio) {\n      throw new Error('No audio loaded');\n    }\n\n    this.audio.currentTime = 0;\n    await this.play();\n  }\n\n  async togglePlayPause(): Promise<void> {\n    if (this.state.status === 'playing') {\n      this.pause();\n    } else if (this.state.status === 'paused' || this.state.status === 'stopped') {\n      await this.play();\n    }\n  }\n\n  preloadNext(nextTask: Task): void {\n    if (!nextTask.audioUrl) {\n      return;\n    }\n\n    // Create preload audio element\n    this.preloadedAudio = new Audio(nextTask.audioUrl);\n    this.preloadedAudio.preload = 'auto';\n\n    this.setState({\n      ...this.state,\n      preloadedNextUrl: nextTask.audioUrl,\n    });\n  }\n\n  async checkAutoPlayPermission(): Promise<boolean> {\n    // Return current unlock status\n    // Auto-play permission will be validated on actual play attempt\n    return this.state.autoPlayUnlocked;\n  }\n\n  async unlockAutoPlay(): Promise<boolean> {\n    // Simply mark as unlocked - will be validated on first actual play attempt\n    // This avoids CSP issues with data URIs\n    this.setState({\n      ...this.state,\n      autoPlayUnlocked: true,\n    });\n\n    return true;\n  }\n\n  getPlaybackState(): AudioPlayback {\n    return { ...this.state };\n  }\n\n  onStateChange(callback: (state: AudioPlayback) => void): () => void {\n    this.stateListeners.add(callback);\n\n    // Return unsubscribe function\n    return () => {\n      this.stateListeners.delete(callback);\n    };\n  }\n\n  dispose(): void {\n    this.clearAutoPlayTimer();\n\n    if (this.audio) {\n      this.audio.pause();\n      this.audio.src = '';\n      this.audio = null;\n    }\n\n    if (this.preloadedAudio) {\n      this.preloadedAudio.src = '';\n      this.preloadedAudio = null;\n    }\n\n    this.setState({\n      ...INITIAL_PLAYBACK_STATE,\n    });\n\n    this.stateListeners.clear();\n  }\n\n  // Private helpers\n\n  private setState(newState: AudioPlayback): void {\n    this.state = newState;\n\n    // Notify all listeners\n    this.stateListeners.forEach((listener) => {\n      listener(newState);\n    });\n  }\n\n  private clearAutoPlayTimer(): void {\n    if (this.autoPlayTimer !== null) {\n      window.clearTimeout(this.autoPlayTimer);\n      this.autoPlayTimer = null;\n    }\n  }\n\n  /**\n   * Validate audio URL for security\n   * Only allows /audio/ paths and data URIs for testing\n   */\n  private validateAudioUrl(url: string): boolean {\n    // Check length\n    if (url.length > MAX_AUDIO_URL_LENGTH) {\n      console.warn('Audio URL exceeds maximum length');\n      return false;\n    }\n\n    // Allow /audio/ paths, paths with base URL prefix, or data URIs\n    if (url.startsWith('/audio/') || url.includes('/audio/') || url.startsWith('data:audio/')) {\n      return true;\n    }\n\n    console.warn('Audio URL must contain /audio/ or start with data:audio/', url);\n    return false;\n  }\n}\n\n/**\n * Factory function to create audio service instance\n */\nexport function createAudioService(): IAudioService {\n  return new AudioService();\n}\n\n/**\n * Legacy singleton export for backward compatibility\n * @deprecated Use createAudioService() instead\n */\nexport const audioService = {\n  hasAudio: () => false,\n  playSpanish: async () => {},\n  initialize: async () => {},\n} as any;\n","/**\n * useAudioPlayback Hook\n *\n * React hook for managing audio playback in components.\n *\n * Feature: Auto-Play Audio for Language Learning Tasks\n * Branch: 005-issue-23\n * Phase: 3.6 - React Hooks\n */\n\nimport { useState, useEffect, useRef } from 'react';\nimport { createAudioService, type IAudioService } from '../../core/services/audio-service';\nimport type { AudioPlayback } from '../../core/entities/audio-playback';\nimport type { Task } from '../../core/types/services';\nimport type { AudioSettings } from '../../core/entities/audio-settings';\n\n/**\n * Hook return type\n */\nexport interface UseAudioPlaybackReturn {\n  playbackState: AudioPlayback;\n  loadAudio: (task: Task, settings: AudioSettings, autoPlay: boolean) => Promise<void>;\n  play: () => Promise<void>;\n  pause: () => void;\n  stop: () => void;\n  replay: () => Promise<void>;\n  togglePlayPause: () => Promise<void>;\n  preloadNext: (nextTask: Task) => void;\n  checkAutoPlayPermission: () => Promise<boolean>;\n  unlockAutoPlay: () => Promise<boolean>;\n}\n\n/**\n * React hook for audio playback\n *\n * @returns Audio playback controls and state\n *\n * @example\n * const { playbackState, play, pause, loadAudio } = useAudioPlayback();\n *\n * // Load and auto-play audio\n * await loadAudio(task, settings, true);\n *\n * // Manual controls\n * await play();\n * pause();\n */\nexport function useAudioPlayback(): UseAudioPlaybackReturn {\n  const audioServiceRef = useRef<IAudioService | null>(null);\n  const [playbackState, setPlaybackState] = useState<AudioPlayback>({\n    audioUrl: null,\n    status: 'stopped',\n    currentTime: 0,\n    duration: 0,\n    autoPlayUnlocked: false,\n    preloadedNextUrl: null,\n    error: null,\n  });\n\n  // Initialize service\n  useEffect(() => {\n    const service = createAudioService();\n    audioServiceRef.current = service;\n\n    // Initialize service\n    service.initialize().catch((error) => {\n      console.error('Failed to initialize audio service:', error);\n    });\n\n    // Subscribe to state changes\n    const unsubscribe = service.onStateChange((newState) => {\n      setPlaybackState(newState);\n    });\n\n    // Cleanup on unmount - stop all audio and clean up resources\n    return () => {\n      // Stop audio playback immediately\n      service.stop();\n\n      // Unsubscribe from state changes\n      unsubscribe();\n\n      // Clean up all resources (audio elements, timers, etc.)\n      service.dispose();\n\n      // Clear the service reference\n      audioServiceRef.current = null;\n    };\n  }, []);\n\n  // Wrap service methods\n  const loadAudio = async (task: Task, settings: AudioSettings, autoPlay: boolean) => {\n    if (!audioServiceRef.current) {\n      throw new Error('Audio service not initialized');\n    }\n    await audioServiceRef.current.loadAudio(task, settings, autoPlay);\n  };\n\n  const play = async () => {\n    if (!audioServiceRef.current) {\n      throw new Error('Audio service not initialized');\n    }\n    await audioServiceRef.current.play();\n  };\n\n  const pause = () => {\n    audioServiceRef.current?.pause();\n  };\n\n  const stop = () => {\n    audioServiceRef.current?.stop();\n  };\n\n  const replay = async () => {\n    if (!audioServiceRef.current) {\n      throw new Error('Audio service not initialized');\n    }\n    await audioServiceRef.current.replay();\n  };\n\n  const togglePlayPause = async () => {\n    if (!audioServiceRef.current) {\n      throw new Error('Audio service not initialized');\n    }\n    await audioServiceRef.current.togglePlayPause();\n  };\n\n  const preloadNext = (nextTask: Task) => {\n    audioServiceRef.current?.preloadNext(nextTask);\n  };\n\n  const checkAutoPlayPermission = async () => {\n    if (!audioServiceRef.current) {\n      return false;\n    }\n    return audioServiceRef.current.checkAutoPlayPermission();\n  };\n\n  const unlockAutoPlay = async () => {\n    if (!audioServiceRef.current) {\n      return false;\n    }\n    return audioServiceRef.current.unlockAutoPlay();\n  };\n\n  return {\n    playbackState,\n    loadAudio,\n    play,\n    pause,\n    stop,\n    replay,\n    togglePlayPause,\n    preloadNext,\n    checkAutoPlayPermission,\n    unlockAutoPlay,\n  };\n}\n","/**\n * AudioSettings Entity\n *\n * Represents user preferences for audio playback behavior.\n *\n * Feature: Auto-Play Audio for Language Learning Tasks\n * Branch: 005-issue-23\n * Phase: 3.3 - Core Entities\n */\n\n/**\n * Language filter options for auto-play\n */\nexport type LanguageFilter = 'non-German only' | 'all languages' | 'none';\n\n/**\n * Audio settings configuration\n * Stored in LocalStorage (key: 'audioSettings')\n */\nexport interface AudioSettings {\n  /** Schema version for migrations */\n  version: number;\n\n  /** Master switch for auto-play feature */\n  autoPlayEnabled: boolean;\n\n  /** Which content languages trigger auto-play */\n  languageFilter: LanguageFilter;\n\n  /** Per-topic setting overrides (key = topic ID) */\n  perTopicOverrides: Record<string, Partial<Omit<AudioSettings, 'version' | 'perTopicOverrides'>>>;\n\n  /** Enable visual pronunciation guides (IPA notation) */\n  accessibilityMode: boolean;\n}\n\n/**\n * Default audio settings\n * Used when no settings exist in LocalStorage\n */\nexport const DEFAULT_AUDIO_SETTINGS: AudioSettings = {\n  version: 2, // Bumped to trigger migration and enable auto-play by default\n  autoPlayEnabled: true,\n  languageFilter: 'non-German only',\n  perTopicOverrides: {},\n  accessibilityMode: false,\n};\n\n/**\n * Validate audio settings object\n * @throws Error if validation fails\n */\nexport function validateAudioSettings(settings: unknown): AudioSettings {\n  const s = settings as Partial<AudioSettings>;\n\n  if (typeof s.autoPlayEnabled !== 'boolean') {\n    throw new Error('autoPlayEnabled must be boolean');\n  }\n\n  const validFilters: LanguageFilter[] = ['non-German only', 'all languages', 'none'];\n  if (!validFilters.includes(s.languageFilter as LanguageFilter)) {\n    throw new Error(`Invalid languageFilter value: ${s.languageFilter}`);\n  }\n\n  if (s.perTopicOverrides && typeof s.perTopicOverrides !== 'object') {\n    throw new Error('perTopicOverrides must be object');\n  }\n\n  if (typeof s.accessibilityMode !== 'boolean') {\n    throw new Error('accessibilityMode must be boolean');\n  }\n\n  if (typeof s.version !== 'number' || s.version < 1) {\n    throw new Error('version must be positive integer');\n  }\n\n  return s as AudioSettings;\n}\n","/**\n * AudioSettingsStorage Adapter\n *\n * LocalStorage adapter for persisting audio settings.\n *\n * Feature: Auto-Play Audio for Language Learning Tasks\n * Branch: 005-issue-23\n * Phase: 3.4 - Storage Layer\n */\n\nimport type { AudioSettings } from '../../core/entities/audio-settings';\nimport { DEFAULT_AUDIO_SETTINGS, validateAudioSettings } from '../../core/entities/audio-settings';\n\nconst STORAGE_KEY = 'audioSettings';\nconst DEBOUNCE_DELAY_MS = 500; // Delay for debouncing localStorage writes\n\n/**\n * Audio settings storage interface\n */\nexport interface IAudioSettingsStorage {\n  /** Load settings from LocalStorage (returns defaults if not found) */\n  load(): AudioSettings;\n\n  /** Save settings to LocalStorage */\n  save(settings: AudioSettings): void;\n\n  /** Update partial settings (merge with existing) */\n  update(updates: Partial<AudioSettings>): void;\n\n  /** Reset to default settings (clears LocalStorage) */\n  reset(): void;\n\n  /** Check if settings exist in storage */\n  exists(): boolean;\n\n  /** Migrate old settings schema to current version */\n  migrate(oldSettings: any): AudioSettings;\n}\n\n/**\n * LocalStorage-based audio settings storage\n */\nclass AudioSettingsStorage implements IAudioSettingsStorage {\n  private saveTimer: number | null = null;\n\n  load(): AudioSettings {\n    try {\n      const stored = localStorage.getItem(STORAGE_KEY);\n\n      if (!stored) {\n        return { ...DEFAULT_AUDIO_SETTINGS };\n      }\n\n      const parsed = JSON.parse(stored);\n\n      // Check if migration is needed\n      if (parsed.version !== DEFAULT_AUDIO_SETTINGS.version) {\n        return this.migrate(parsed);\n      }\n\n      // Validate and return\n      return validateAudioSettings(parsed);\n    } catch (error) {\n      console.error('Failed to load audio settings, using defaults:', error);\n      return { ...DEFAULT_AUDIO_SETTINGS };\n    }\n  }\n\n  save(settings: AudioSettings): void {\n    try {\n      validateAudioSettings(settings);\n\n      // Clear any pending save\n      if (this.saveTimer !== null) {\n        window.clearTimeout(this.saveTimer);\n      }\n\n      // In test environment, save immediately (no debounce)\n      // Detect test environment by checking for vitest or jest globals\n      const isTestEnv = typeof (globalThis as any).describe === 'function' &&\n                       typeof (globalThis as any).it === 'function';\n\n      if (isTestEnv) {\n        // Immediate save for tests\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(settings));\n      } else {\n        // Debounced save for production\n        this.saveTimer = window.setTimeout(() => {\n          localStorage.setItem(STORAGE_KEY, JSON.stringify(settings));\n          this.saveTimer = null;\n        }, DEBOUNCE_DELAY_MS);\n      }\n    } catch (error) {\n      console.error('Failed to save audio settings:', error);\n      throw error;\n    }\n  }\n\n\n  update(updates: Partial<AudioSettings>): void {\n    const current = this.load();\n    const merged: AudioSettings = {\n      ...current,\n      ...updates,\n      // Preserve version unless explicitly updated\n      version: updates.version ?? current.version,\n      // Deep merge perTopicOverrides\n      perTopicOverrides: {\n        ...current.perTopicOverrides,\n        ...(updates.perTopicOverrides ?? {}),\n      },\n    };\n\n    this.save(merged);\n  }\n\n  reset(): void {\n    localStorage.removeItem(STORAGE_KEY);\n  }\n\n  exists(): boolean {\n    return localStorage.getItem(STORAGE_KEY) !== null;\n  }\n\n  migrate(oldSettings: any): AudioSettings {\n    // Migration from v1 to v2: Enable auto-play by default\n    // This ensures all users get the new auto-play feature enabled\n\n    const migrated: AudioSettings = {\n      version: 2,\n      // Force enable auto-play for v1 -> v2 migration\n      autoPlayEnabled: oldSettings.version === 1 ? true : (oldSettings.autoPlayEnabled ?? DEFAULT_AUDIO_SETTINGS.autoPlayEnabled),\n      languageFilter: oldSettings.languageFilter ?? DEFAULT_AUDIO_SETTINGS.languageFilter,\n      perTopicOverrides: oldSettings.perTopicOverrides ?? {},\n      accessibilityMode: oldSettings.accessibilityMode ?? DEFAULT_AUDIO_SETTINGS.accessibilityMode,\n    };\n\n    try {\n      validateAudioSettings(migrated);\n      // Save migrated settings\n      this.save(migrated);\n      return migrated;\n    } catch (error) {\n      console.error('Migration failed, using defaults:', error);\n      return { ...DEFAULT_AUDIO_SETTINGS };\n    }\n  }\n}\n\n/**\n * Factory function to create audio settings storage instance\n */\nexport function createAudioSettingsStorage(): IAudioSettingsStorage {\n  return new AudioSettingsStorage();\n}\n\n/**\n * Export default settings for convenience\n */\nexport { DEFAULT_AUDIO_SETTINGS };\n","/**\n * useAudioSettings Hook\n *\n * React hook for managing audio settings persistence.\n *\n * Feature: Auto-Play Audio for Language Learning Tasks\n * Branch: 005-issue-23\n * Phase: 3.6 - React Hooks\n */\n\nimport { useState, useEffect, useRef } from 'react';\nimport {\n  createAudioSettingsStorage,\n  type IAudioSettingsStorage,\n} from '../../storage/adapters/audio-settings-storage';\nimport type { AudioSettings } from '../../core/entities/audio-settings';\n\n/**\n * Hook return type\n */\nexport interface UseAudioSettingsReturn {\n  settings: AudioSettings;\n  updateSettings: (updates: Partial<AudioSettings>) => void;\n  resetSettings: () => void;\n  isLoaded: boolean;\n}\n\n/**\n * React hook for audio settings\n *\n * @returns Audio settings and update functions\n *\n * @example\n * const { settings, updateSettings, resetSettings } = useAudioSettings();\n *\n * // Update a setting\n * updateSettings({ autoPlayEnabled: false });\n *\n * // Reset to defaults\n * resetSettings();\n */\nexport function useAudioSettings(): UseAudioSettingsReturn {\n  const storageRef = useRef<IAudioSettingsStorage | null>(null);\n  const [settings, setSettings] = useState<AudioSettings | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  // Initialize storage and load settings\n  useEffect(() => {\n    const storage = createAudioSettingsStorage();\n    storageRef.current = storage;\n\n    // Load settings from storage\n    const loadedSettings = storage.load();\n    setSettings(loadedSettings);\n    setIsLoaded(true);\n  }, []);\n\n  // Update settings\n  const updateSettings = (updates: Partial<AudioSettings>) => {\n    if (!storageRef.current || !settings) {\n      console.warn('Audio settings not loaded yet');\n      return;\n    }\n\n    // Update storage\n    storageRef.current.update(updates);\n\n    // Reload settings from storage\n    const newSettings = storageRef.current.load();\n    setSettings(newSettings);\n  };\n\n  // Reset settings to defaults\n  const resetSettings = () => {\n    if (!storageRef.current) {\n      console.warn('Audio settings not loaded yet');\n      return;\n    }\n\n    storageRef.current.reset();\n\n    // Reload settings (will be defaults now)\n    const newSettings = storageRef.current.load();\n    setSettings(newSettings);\n  };\n\n  return {\n    settings: settings || {\n      version: 1,\n      autoPlayEnabled: true,\n      languageFilter: 'non-German only',\n      perTopicOverrides: {},\n      accessibilityMode: false,\n    },\n    updateSettings,\n    resetSettings,\n    isLoaded,\n  };\n}\n","/**\n * Audio Helpers\n *\n * Utility functions for audio auto-play feature.\n *\n * Feature: Auto-Play Audio for Language Learning Tasks\n * Branch: 005-issue-23\n * Phase: 3.3 - Core Entities\n */\n\nimport type { Task } from '../types/services';\nimport type { AudioSettings } from '../entities/audio-settings';\n\n/**\n * Determine if a task is eligible for auto-play based on settings\n *\n * @param task - The task to check\n * @param settings - Current audio settings\n * @returns true if audio should auto-play for this task\n */\nexport function isEligibleForAutoPlay(task: Task, settings: AudioSettings): boolean {\n  // Rule 1: Must have audio\n  if (!task.hasAudio || !task.audioUrl) {\n    return false;\n  }\n\n  // Rule 2: Auto-play must be enabled globally\n  if (!settings.autoPlayEnabled) {\n    return false;\n  }\n\n  // Rule 3: Check language filter\n  const taskLanguage = task.language || 'German';\n\n  switch (settings.languageFilter) {\n    case 'none':\n      return false;\n    case 'all languages':\n      return true;\n    case 'non-German only':\n      return taskLanguage !== 'German';\n    default:\n      return false;\n  }\n\n  // Note: Per-topic overrides would be checked here if task had topicId\n  // Currently not implemented as Task interface doesn't expose topicId directly\n}\n\n/**\n * Validate task audio fields\n *\n * @param task - The task to validate\n * @throws Warning (console.warn) for inconsistencies\n */\nexport function validateTaskAudio(task: Task): void {\n  if (task.hasAudio && !task.audioUrl) {\n    console.warn(`Task ${task.id}: hasAudio is true but audioUrl is missing`);\n  }\n\n  if (task.audioUrl && !task.hasAudio) {\n    console.warn(`Task ${task.id}: audioUrl provided but hasAudio is false`);\n  }\n\n  if (task.audioUrl && !task.audioUrl.startsWith('/audio/')) {\n    console.warn(`Task ${task.id}: audioUrl must start with /audio/, got: ${task.audioUrl}`);\n  }\n\n  const validLanguages = ['German', 'Spanish', 'French', 'English', 'Italian'];\n  if (task.language && !validLanguages.includes(task.language)) {\n    console.warn(`Task ${task.id}: Unknown language: ${task.language}`);\n  }\n\n  if (task.ipa && task.language === 'German') {\n    console.warn(`Task ${task.id}: IPA notation not typically needed for German`);\n  }\n}\n","/**\n * Template Loader\n * Loads task templates from JSON files with audio configuration\n */\n\nexport interface AudioButtonConfig {\n  show: boolean;\n  field: string;\n}\n\nexport interface AudioConfig {\n  autoPlay?: {\n    onLoad?: string[];\n    onReveal?: string[];\n    onAnswer?: string[];\n  };\n  buttons?: Record<string, AudioButtonConfig>;\n}\n\nexport interface TaskTemplate {\n  id: string;\n  name: string;\n  description: string;\n  type: string;\n  schema: Record<string, unknown>;\n  audioConfig?: AudioConfig;\n  metadata?: Record<string, unknown>;\n  examples?: Array<Record<string, unknown>>;\n}\n\n// In-memory cache for loaded templates\nconst templateCache = new Map<string, TaskTemplate>();\n\n/**\n * Load a single template by ID\n */\nexport async function loadTemplate(templateId: string): Promise<TaskTemplate | null> {\n  // Check cache first\n  if (templateCache.has(templateId)) {\n    return templateCache.get(templateId)!;\n  }\n\n  try {\n    const response = await fetch(`${import.meta.env.BASE_URL}templates/${templateId}.json`);\n    if (!response.ok) {\n      console.warn(`Template ${templateId} not found`);\n      return null;\n    }\n\n    const template: TaskTemplate = await response.json();\n    templateCache.set(templateId, template);\n    return template;\n  } catch (error) {\n    console.error(`Failed to load template ${templateId}:`, error);\n    return null;\n  }\n}\n\n/**\n * Get audio configuration for a template\n */\nexport async function getAudioConfig(templateId: string): Promise<AudioConfig | null> {\n  const template = await loadTemplate(templateId);\n  return template?.audioConfig || null;\n}\n\n/**\n * Clear template cache (useful for testing)\n */\nexport function clearTemplateCache(): void {\n  templateCache.clear();\n}\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { useState, useRef, memo } from 'react';\nimport clsx from 'clsx';\nimport styles from './audio-button.module.css';\n\ninterface AudioButtonProps {\n  text: string;\n  audioUrl?: string | null;\n  className?: string;\n  disabled?: boolean;\n  size?: 'small' | 'medium' | 'large';\n}\n\n// SVG Icons\nconst VolumeIcon = ({ size }: { size: string }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    style={{ width: size, height: size }}\n  >\n    <path d=\"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\" />\n  </svg>\n);\n\nconst VolumeOffIcon = ({ size }: { size: string }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    style={{ width: size, height: size }}\n  >\n    <path d=\"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z\" />\n  </svg>\n);\n\n/**\n * Audio Button Component\n * Plays pronunciation when clicked\n * Memoized to prevent unnecessary re-renders\n */\nconst AudioButtonComponent = ({ text, audioUrl, className, disabled = false, size = 'medium' }: AudioButtonProps) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n\n  // Check if audio is available\n  const hasAudio = !!audioUrl;\n\n  const handleClick = async () => {\n    if (disabled || !hasAudio || !audioUrl) return;\n\n    setError(null);\n\n    try {\n      // Create or reuse audio element\n      if (!audioRef.current) {\n        audioRef.current = new Audio(audioUrl);\n        audioRef.current.addEventListener('ended', () => setIsPlaying(false));\n        audioRef.current.addEventListener('error', () => {\n          setError('Audio playback failed');\n          setIsPlaying(false);\n        });\n      }\n\n      // Reset to start and play\n      audioRef.current.currentTime = 0;\n      setIsPlaying(true);\n      await audioRef.current.play();\n    } catch (err) {\n      console.error('Failed to play audio:', err);\n      setError('Audio playback failed');\n      setIsPlaying(false);\n    }\n  };\n\n  const iconSizes = {\n    small: '16px',\n    medium: '20px',\n    large: '24px'\n  };\n\n  // Determine button state\n  const isDisabled = disabled || !hasAudio;\n\n  return (\n    <span\n      onClick={isDisabled ? undefined : handleClick}\n      className={clsx(\n        styles['audio-button'],\n        styles[`audio-button--${size}`],\n        isDisabled && styles['audio-button--disabled'],\n        isPlaying && styles['audio-button--playing'],\n        !isDisabled && !isPlaying && styles['audio-button--active'],\n        className\n      )}\n      title={\n        !hasAudio\n          ? 'Audio nicht verfügbar'\n          : isPlaying\n            ? 'Spielt ab...'\n            : `Aussprache abspielen: ${text}`\n      }\n      aria-label={`Spanische Aussprache für ${text} abspielen`}\n      role=\"button\"\n      tabIndex={isDisabled ? -1 : 0}\n      onKeyDown={(e) => {\n        if (!isDisabled && (e.key === 'Enter' || e.key === ' ')) {\n          e.preventDefault();\n          handleClick();\n        }\n      }}\n    >\n      {isPlaying ? (\n        <div className={clsx(styles['audio-button__icon'], styles['audio-button__icon--playing'])}>\n          <VolumeIcon size={iconSizes[size]} />\n        </div>\n      ) : !hasAudio || error ? (\n        <div className={styles['audio-button__icon']}>\n          <VolumeOffIcon size={iconSizes[size]} />\n        </div>\n      ) : (\n        <div className={styles['audio-button__icon']}>\n          <VolumeIcon size={iconSizes[size]} />\n        </div>\n      )}\n    </span>\n  );\n};\n\n// Export memoized version\nexport const AudioButton = memo(AudioButtonComponent);\n\ninterface AudioButtonInlineProps {\n  text: string;\n  className?: string;\n}\n\n/**\n * Inline Audio Button with Text\n * Shows the Spanish text with a small audio button next to it\n */\nexport function AudioButtonInline({ text, className }: AudioButtonInlineProps) {\n  return (\n    <span className={clsx(styles['audio-button-inline'], className)}>\n      <span>{text}</span>\n      <AudioButton text={text} size=\"small\" />\n    </span>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport styles from './Card.module.css';\n\nexport type CardPadding = 'small' | 'medium' | 'large';\n\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Padding size variant\n   * @default 'medium'\n   */\n  padding?: CardPadding;\n\n  /**\n   * Whether to show shadow\n   * @default true\n   */\n  shadow?: boolean;\n\n  /**\n   * Whether to show border\n   * @default true\n   */\n  border?: boolean;\n\n  /**\n   * Custom border color (overrides default)\n   */\n  borderColor?: string;\n\n  /**\n   * Background color (overrides default)\n   */\n  backgroundColor?: string;\n\n  /**\n   * Card content\n   */\n  children: React.ReactNode;\n}\n\n/**\n * Card Component\n *\n * A versatile container component with consistent styling using CSS Modules.\n * Serves as the foundation for more specialized card components.\n *\n * @example\n * ```tsx\n * <Card padding=\"medium\" shadow>\n *   <h3>Card Title</h3>\n *   <p>Card content goes here</p>\n * </Card>\n *\n * <Card padding=\"large\" border={false}>\n *   <div>Custom content</div>\n * </Card>\n * ```\n */\nexport function Card({\n  padding = 'medium',\n  shadow = true,\n  border = true,\n  borderColor,\n  backgroundColor,\n  children,\n  className,\n  style,\n  ...props\n}: CardProps) {\n  // Build inline styles for custom overrides only\n  const customStyles: React.CSSProperties = {\n    ...(backgroundColor && { backgroundColor }),\n    ...(borderColor && { borderColor }),\n    ...style,\n  };\n\n  return (\n    <div\n      {...props}\n      style={customStyles}\n      className={clsx(\n        styles.card,\n        styles[`card--padding-${padding}`],\n        shadow ? styles['card--shadow'] : styles['card--no-shadow'],\n        border ? styles['card--border'] : styles['card--no-border'],\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n\n// ============================================================================\n// EXPORTS\n// ============================================================================\n\nexport default Card;\n","/**\n * Design System Tokens\n *\n * Centralized design tokens for the learning platform.\n * These tokens ensure consistency across all UI components.\n */\n\n// ============================================================================\n// COLOR PALETTE\n// ============================================================================\n\nexport const colors = {\n  // Primary colors (Blue)\n  primary: {\n    50: '#eff6ff',\n    100: '#dbeafe',\n    200: '#bfdbfe',\n    300: '#93c5fd',\n    400: '#60a5fa',\n    500: '#3b82f6', // Main primary\n    600: '#2563eb',\n    700: '#1d4ed8',\n    800: '#1e40af',\n    900: '#1e3a8a',\n  },\n\n  // Success colors (Green)\n  success: {\n    50: '#f0fdf4',\n    100: '#dcfce7',\n    200: '#bbf7d0',\n    300: '#86efac',\n    400: '#4ade80',\n    500: '#10b981', // Main success\n    600: '#16a34a',\n    700: '#15803d',\n    800: '#166534',\n    900: '#14532d',\n  },\n\n  // Error colors (Red)\n  error: {\n    50: '#fef2f2',\n    100: '#fee2e2',\n    200: '#fecaca',\n    300: '#fca5a5',\n    400: '#f87171',\n    500: '#ef4444', // Main error\n    600: '#dc2626',\n    700: '#b91c1c',\n    800: '#991b1b',\n    900: '#7f1d1d',\n  },\n\n  // Warning colors (Amber/Orange)\n  warning: {\n    50: '#fffbeb',\n    100: '#fef3c7',\n    200: '#fde68a',\n    300: '#fcd34d',\n    400: '#fbbf24',\n    500: '#f59e0b', // Main warning\n    600: '#d97706',\n    700: '#b45309',\n    800: '#92400e',\n    900: '#78350f',\n  },\n\n  // Info colors (Purple)\n  info: {\n    50: '#faf5ff',\n    100: '#f3e8ff',\n    200: '#e9d5ff',\n    300: '#d8b4fe',\n    400: '#c084fc',\n    500: '#8b5cf6', // Main info\n    600: '#9333ea',\n    700: '#7e22ce',\n    800: '#6b21a8',\n    900: '#581c87',\n  },\n\n  // Neutral/Gray colors\n  neutral: {\n    0: '#ffffff',\n    50: '#f9fafb',\n    100: '#f3f4f6',\n    200: '#e5e7eb',\n    300: '#d1d5db',\n    400: '#9ca3af',\n    500: '#6b7280',\n    600: '#4b5563',\n    700: '#374151',\n    800: '#1f2937',\n    900: '#111827',\n    1000: '#000000',\n  },\n} as const;\n\n// Semantic color aliases for easier usage\nexport const semanticColors = {\n  // Text colors\n  text: {\n    primary: colors.neutral[900],\n    secondary: colors.neutral[600],\n    tertiary: colors.neutral[500],\n    disabled: colors.neutral[400],\n    inverse: colors.neutral[0],\n  },\n\n  // Background colors\n  background: {\n    primary: colors.neutral[0],\n    secondary: colors.neutral[50],\n    tertiary: colors.neutral[100],\n    inverse: colors.neutral[900],\n  },\n\n  // Border colors\n  border: {\n    light: colors.neutral[200],\n    base: colors.neutral[300],\n    dark: colors.neutral[400],\n  },\n\n  // Interactive states\n  interactive: {\n    primary: colors.primary[500],\n    primaryHover: colors.primary[600],\n    primaryActive: colors.primary[700],\n    primaryDisabled: colors.neutral[400],\n  },\n\n  // Feedback colors\n  feedback: {\n    success: colors.success[500],\n    successLight: colors.success[100],\n    successBorder: colors.success[300],\n    error: colors.error[500],\n    errorLight: colors.error[100],\n    errorBorder: colors.error[300],\n    warning: colors.warning[500],\n    warningLight: colors.warning[100],\n    warningBorder: colors.warning[400],\n    info: colors.info[500],\n    infoLight: colors.info[100],\n    infoBorder: colors.info[300],\n  },\n} as const;\n\n// ============================================================================\n// SPACING SCALE\n// ============================================================================\n\nexport const spacing = {\n  0: '0',\n  0.5: '0.125rem', // 2px\n  1: '0.25rem',    // 4px\n  1.5: '0.375rem', // 6px\n  2: '0.5rem',     // 8px\n  2.5: '0.625rem', // 10px\n  3: '0.75rem',    // 12px\n  3.5: '0.875rem', // 14px\n  4: '1rem',       // 16px\n  5: '1.25rem',    // 20px\n  6: '1.5rem',     // 24px\n  7: '1.75rem',    // 28px\n  8: '2rem',       // 32px\n  9: '2.25rem',    // 36px\n  10: '2.5rem',    // 40px\n  11: '2.75rem',   // 44px\n  12: '3rem',      // 48px\n  14: '3.5rem',    // 56px\n  16: '4rem',      // 64px\n  20: '5rem',      // 80px\n  24: '6rem',      // 96px\n  32: '8rem',      // 128px\n} as const;\n\n// ============================================================================\n// TYPOGRAPHY\n// ============================================================================\n\nexport const typography = {\n  // Font families\n  fontFamily: {\n    sans: 'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n    mono: 'ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\n  },\n\n  // Font sizes\n  fontSize: {\n    xs: '0.75rem',      // 12px\n    sm: '0.875rem',     // 14px\n    base: '1rem',       // 16px\n    lg: '1.125rem',     // 18px\n    xl: '1.25rem',      // 20px\n    '2xl': '1.5rem',    // 24px\n    '3xl': '1.875rem',  // 30px\n    '4xl': '2.25rem',   // 36px\n    '5xl': '3rem',      // 48px\n    '6xl': '3.75rem',   // 60px\n  },\n\n  // Font weights\n  fontWeight: {\n    light: '300',\n    normal: '400',\n    medium: '500',\n    semibold: '600',\n    bold: '700',\n    extrabold: '800',\n  },\n\n  // Line heights\n  lineHeight: {\n    none: '1',\n    tight: '1.25',\n    snug: '1.375',\n    normal: '1.5',\n    relaxed: '1.625',\n    loose: '2',\n  },\n\n  // Letter spacing\n  letterSpacing: {\n    tighter: '-0.05em',\n    tight: '-0.025em',\n    normal: '0',\n    wide: '0.025em',\n    wider: '0.05em',\n    widest: '0.1em',\n  },\n} as const;\n\n// ============================================================================\n// SHADOWS\n// ============================================================================\n\nexport const shadows = {\n  none: 'none',\n  xs: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\n  sm: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1)',\n  base: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1)',\n  md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1)',\n  lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1)',\n  xl: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1)',\n  '2xl': '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\n  inner: 'inset 0 2px 4px 0 rgba(0, 0, 0, 0.05)',\n} as const;\n\n// ============================================================================\n// BORDER RADIUS\n// ============================================================================\n\nexport const borderRadius = {\n  none: '0',\n  xs: '0.125rem',   // 2px\n  sm: '0.25rem',    // 4px\n  base: '0.375rem', // 6px\n  md: '0.5rem',     // 8px\n  lg: '0.75rem',    // 12px\n  xl: '1rem',       // 16px\n  '2xl': '1.5rem',  // 24px\n  '3xl': '2rem',    // 32px\n  full: '9999px',\n} as const;\n\n// ============================================================================\n// TRANSITIONS & ANIMATIONS\n// ============================================================================\n\nexport const transitions = {\n  // Durations\n  duration: {\n    instant: '0ms',\n    fast: '150ms',\n    base: '200ms',\n    slow: '300ms',\n    slower: '500ms',\n  },\n\n  // Timing functions\n  timing: {\n    linear: 'linear',\n    ease: 'ease',\n    easeIn: 'ease-in',\n    easeOut: 'ease-out',\n    easeInOut: 'ease-in-out',\n    spring: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  },\n\n  // Common transition presets\n  presets: {\n    fast: 'all 150ms cubic-bezier(0.4, 0, 0.2, 1)',\n    base: 'all 200ms cubic-bezier(0.4, 0, 0.2, 1)',\n    slow: 'all 300ms cubic-bezier(0.4, 0, 0.2, 1)',\n    colors: 'background-color 200ms cubic-bezier(0.4, 0, 0.2, 1), border-color 200ms cubic-bezier(0.4, 0, 0.2, 1), color 200ms cubic-bezier(0.4, 0, 0.2, 1)',\n  },\n} as const;\n\n// ============================================================================\n// BREAKPOINTS (for responsive design)\n// ============================================================================\n\nexport const breakpoints = {\n  xs: '0px',\n  sm: '640px',\n  md: '768px',\n  lg: '1024px',\n  xl: '1280px',\n  '2xl': '1536px',\n} as const;\n\n// ============================================================================\n// Z-INDEX SCALE\n// ============================================================================\n\nexport const zIndex = {\n  auto: 'auto',\n  0: '0',\n  10: '10',\n  20: '20',\n  30: '30',\n  40: '40',\n  50: '50',\n  dropdown: '1000',\n  sticky: '1020',\n  fixed: '1030',\n  modal: '1040',\n  popover: '1050',\n  tooltip: '1060',\n} as const;\n\n// ============================================================================\n// COMPONENT-SPECIFIC TOKENS\n// ============================================================================\n\nexport const components = {\n  button: {\n    // Heights\n    height: {\n      sm: spacing[8],\n      md: spacing[10],\n      lg: spacing[12],\n    },\n    // Padding\n    padding: {\n      sm: `${spacing[2]} ${spacing[3]}`,\n      md: `${spacing[2.5]} ${spacing[4]}`,\n      lg: `${spacing[3]} ${spacing[6]}`,\n    },\n    // Font sizes\n    fontSize: {\n      sm: typography.fontSize.sm,\n      md: typography.fontSize.base,\n      lg: typography.fontSize.lg,\n    },\n    // Border radius\n    borderRadius: borderRadius.md,\n  },\n\n  input: {\n    // Heights\n    height: {\n      sm: spacing[8],\n      md: spacing[10],\n      lg: spacing[12],\n    },\n    // Padding\n    padding: {\n      sm: `${spacing[1.5]} ${spacing[3]}`,\n      md: `${spacing[2]} ${spacing[3.5]}`,\n      lg: `${spacing[2.5]} ${spacing[4]}`,\n    },\n    // Border\n    borderWidth: '2px',\n    borderRadius: borderRadius.md,\n  },\n\n  card: {\n    // Padding\n    padding: {\n      sm: spacing[4],\n      md: spacing[6],\n      lg: spacing[8],\n    },\n    // Border radius\n    borderRadius: borderRadius.lg,\n    // Shadows\n    shadow: shadows.sm,\n  },\n} as const;\n\n// ============================================================================\n// UTILITY FUNCTIONS\n// ============================================================================\n\n/**\n * Get a color value from the palette\n * @example getColor('primary', 500) // returns '#3b82f6'\n */\nexport function getColor(colorName: keyof typeof colors, shade: keyof typeof colors.primary): string {\n  const colorGroup = colors[colorName];\n  if (!colorGroup || typeof colorGroup === 'string') {\n    return colors.neutral[500];\n  }\n  return (colorGroup as any)[shade] || colors.neutral[500];\n}\n\n/**\n * Get a spacing value\n * @example getSpacing(4) // returns '1rem'\n */\nexport function getSpacing(size: keyof typeof spacing): string {\n  return spacing[size];\n}\n\n/**\n * Create a transition string\n * @example createTransition('opacity', 'base') // returns 'opacity 200ms cubic-bezier(0.4, 0, 0.2, 1)'\n */\nexport function createTransition(\n  property: string,\n  speed: keyof typeof transitions.duration = 'base'\n): string {\n  return `${property} ${transitions.duration[speed]} ${transitions.timing.spring}`;\n}\n\n// ============================================================================\n// TYPE EXPORTS\n// ============================================================================\n\nexport type ColorName = keyof typeof colors;\nexport type ColorShade = keyof typeof colors.primary;\nexport type SpacingSize = keyof typeof spacing;\nexport type FontSize = keyof typeof typography.fontSize;\nexport type FontWeight = keyof typeof typography.fontWeight;\nexport type Shadow = keyof typeof shadows;\nexport type BorderRadius = keyof typeof borderRadius;\nexport type Breakpoint = keyof typeof breakpoints;\nexport type ZIndex = keyof typeof zIndex;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Card } from './Card';\nimport { semanticColors } from '@ui/design-tokens';\nimport styles from './FeedbackCard.module.css';\n\nexport type FeedbackVariant = 'success' | 'error' | 'warning' | 'info';\n\nexport interface FeedbackCardProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Visual variant determining color scheme\n   */\n  variant: FeedbackVariant;\n\n  /**\n   * Optional title/heading\n   */\n  title?: string;\n\n  /**\n   * Main message content\n   */\n  message?: string;\n\n  /**\n   * Whether the card can be dismissed\n   * @default false\n   */\n  dismissible?: boolean;\n\n  /**\n   * Callback when dismissed\n   */\n  onDismiss?: () => void;\n\n  /**\n   * Custom content (overrides message if provided)\n   */\n  children?: React.ReactNode;\n}\n\n/**\n * FeedbackCard Component\n *\n * A specialized card for displaying feedback messages (success, error, warning, info).\n * Features color-coded variants, optional icons, and dismiss functionality.\n *\n * @example\n * ```tsx\n * <FeedbackCard\n *   variant=\"success\"\n *   title=\"Success!\"\n *   message=\"Your answer is correct\"\n * />\n *\n * <FeedbackCard\n *   variant=\"error\"\n *   message=\"Incorrect answer. Try again!\"\n *   dismissible\n *   onDismiss={handleDismiss}\n * />\n *\n * <FeedbackCard variant=\"warning\">\n *   <p>Custom warning content</p>\n * </FeedbackCard>\n * ```\n */\nexport function FeedbackCard({\n  variant,\n  title,\n  message,\n  dismissible = false,\n  onDismiss,\n  children,\n  className,\n  style,\n  ...props\n}: FeedbackCardProps) {\n  const colors = React.useMemo(() => getVariantColors(variant), [variant]);\n  const icon = React.useMemo(() => getVariantIcon(variant), [variant]);\n\n  return (\n    <Card\n      {...props}\n      padding=\"medium\"\n      shadow={false}\n      border\n      borderColor={colors.border}\n      backgroundColor={colors.background}\n      style={style}\n      className={clsx(styles[`feedback--${variant}`], className)}\n      role={variant === 'error' || variant === 'warning' ? 'alert' : 'status'}\n      aria-live={variant === 'error' || variant === 'warning' ? 'assertive' : 'polite'}\n      aria-atomic=\"true\"\n    >\n      <div className={styles['feedback-content']}>\n        {/* Icon */}\n        <div className={styles['feedback-icon']} aria-hidden=\"true\">\n          {icon}\n        </div>\n\n        {/* Content */}\n        <div className={styles['feedback-text']}>\n          {title && (\n            <h4 className={styles['feedback-title']}>\n              {title}\n            </h4>\n          )}\n\n          {children ? (\n            <div className={styles['feedback-children']}>\n              {children}\n            </div>\n          ) : (\n            message && (\n              <p className={styles['feedback-message']}>\n                {message}\n              </p>\n            )\n          )}\n        </div>\n\n        {/* Dismiss Button */}\n        {dismissible && onDismiss && (\n          <button\n            onClick={onDismiss}\n            className={styles['feedback-dismiss']}\n            aria-label={`Dismiss ${variant} message`}\n          >\n            <span aria-hidden=\"true\">✕</span>\n          </button>\n        )}\n      </div>\n    </Card>\n  );\n}\n\n// ============================================================================\n// VARIANT HELPERS\n// ============================================================================\n\ninterface VariantColors {\n  background: string;\n  border: string;\n  text: string;\n}\n\nfunction getVariantColors(variant: FeedbackVariant): VariantColors {\n  switch (variant) {\n    case 'success':\n      return {\n        background: semanticColors.feedback.successLight,\n        border: semanticColors.feedback.successBorder,\n        text: semanticColors.feedback.success,\n      };\n\n    case 'error':\n      return {\n        background: semanticColors.feedback.errorLight,\n        border: semanticColors.feedback.errorBorder,\n        text: semanticColors.feedback.error,\n      };\n\n    case 'warning':\n      return {\n        background: semanticColors.feedback.warningLight,\n        border: semanticColors.feedback.warningBorder,\n        text: semanticColors.feedback.warning,\n      };\n\n    case 'info':\n      return {\n        background: semanticColors.feedback.infoLight,\n        border: semanticColors.feedback.infoBorder,\n        text: semanticColors.feedback.info,\n      };\n\n    default:\n      return {\n        background: semanticColors.feedback.infoLight,\n        border: semanticColors.feedback.infoBorder,\n        text: semanticColors.feedback.info,\n      };\n  }\n}\n\nfunction getVariantIcon(variant: FeedbackVariant): string {\n  switch (variant) {\n    case 'success':\n      return '✓';\n    case 'error':\n      return '✗';\n    case 'warning':\n      return '⚠';\n    case 'info':\n      return 'ℹ';\n    default:\n      return 'ℹ';\n  }\n}\n\n// ============================================================================\n// EXPORTS\n// ============================================================================\n\nexport default FeedbackCard;\n","import React from 'react';\nimport clsx from 'clsx';\nimport styles from './Input.module.css';\n\nexport interface InputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  /**\n   * Current input value\n   */\n  value: string;\n\n  /**\n   * Change handler\n   */\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n\n  /**\n   * Whether the input is in an error state\n   * @default false\n   */\n  error?: boolean;\n\n  /**\n   * Whether the input is in a success state\n   * @default false\n   */\n  success?: boolean;\n\n  /**\n   * Helper text displayed below the input\n   */\n  helperText?: string;\n\n  /**\n   * Whether the input should take full width of container\n   * @default false\n   */\n  fullWidth?: boolean;\n}\n\n/**\n * Input Component\n *\n * A reusable text input component with validation states and accessibility features.\n * Used in cloze deletion, text input tasks, and word scramble.\n *\n * @example\n * ```tsx\n * <Input\n *   value={answer}\n *   onChange={(e) => setAnswer(e.target.value)}\n *   placeholder=\"Enter your answer\"\n *   error={showFeedback && !isCorrect}\n *   success={showFeedback && isCorrect}\n * />\n * ```\n */\nexport function Input({\n  value,\n  onChange,\n  error = false,\n  success = false,\n  helperText,\n  fullWidth = false,\n  disabled = false,\n  className,\n  style,\n  id,\n  ...props\n}: InputProps) {\n  const helperId = helperText ? `${id || 'input'}-helper` : undefined;\n\n  return (\n    <div\n      className={clsx(\n        styles['input-wrapper'],\n        fullWidth && styles['input-wrapper--full-width']\n      )}\n    >\n      <input\n        {...props}\n        id={id}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n        style={style}\n        className={clsx(\n          styles.input,\n          fullWidth && styles['input--full-width'],\n          error && styles['input--error'],\n          success && styles['input--success'],\n          className\n        )}\n        aria-invalid={error ? \"true\" : \"false\"}\n        aria-describedby={helperId}\n      />\n\n      {helperText && (\n        <div\n          id={helperId}\n          className={clsx(\n            styles.input__helper_text,\n            error && styles['input__helper-text--error'],\n            success && styles['input__helper-text--success']\n          )}\n        >\n          {helperText}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Input;\n","import React from 'react';\nimport clsx from 'clsx';\nimport styles from './Checkbox.module.css';\n\nexport interface CheckboxProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type' | 'onChange'> {\n  /**\n   * Whether the checkbox is checked\n   */\n  checked: boolean;\n\n  /**\n   * Change handler\n   */\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n\n  /**\n   * Label content (text or React node)\n   */\n  label?: React.ReactNode;\n\n  /**\n   * Whether the checkbox is in an error state\n   * @default false\n   */\n  error?: boolean;\n\n  /**\n   * Whether the checkbox is in a success state\n   * @default false\n   */\n  success?: boolean;\n}\n\n/**\n * Checkbox Component\n *\n * A reusable checkbox component with custom styling and validation states.\n * Used in multiple-select tasks.\n *\n * @example\n * ```tsx\n * <Checkbox\n *   checked={isSelected}\n *   onChange={(e) => setIsSelected(e.target.checked)}\n *   label=\"Option A\"\n *   success={showFeedback && isCorrect}\n *   error={showFeedback && !isCorrect}\n * />\n * ```\n */\nexport function Checkbox({\n  checked,\n  onChange,\n  label,\n  error = false,\n  success = false,\n  disabled = false,\n  className,\n  style,\n  id,\n  ...props\n}: CheckboxProps) {\n  const generatedId = React.useId();\n  const checkboxId = id || `checkbox-${generatedId}`;\n\n  return (\n    <label\n      htmlFor={checkboxId}\n      style={style}\n      className={clsx(\n        styles['checkbox-container'],\n        disabled && styles['checkbox-container--disabled'],\n        className\n      )}\n    >\n      <div className={styles['checkbox-wrapper']}>\n        <input\n          {...props}\n          type=\"checkbox\"\n          id={checkboxId}\n          checked={checked}\n          onChange={onChange}\n          disabled={disabled}\n          className={clsx(\n            styles.checkbox,\n            label && styles['checkbox--with-label'],\n            error && styles['checkbox--error'],\n            success && styles['checkbox--success']\n          )}\n          aria-checked={checked}\n          aria-invalid={error}\n        />\n        <div\n          className={clsx(\n            styles.checkbox__checkmark,\n            checked && styles['checkbox__checkmark--visible']\n          )}\n        />\n      </div>\n\n      {label && (\n        <span\n          className={clsx(\n            styles.checkbox__label,\n            disabled && styles['checkbox__label--disabled']\n          )}\n        >\n          {label}\n        </span>\n      )}\n    </label>\n  );\n}\n\nexport default Checkbox;\n","import React from 'react';\nimport clsx from 'clsx';\nimport styles from './Select.module.css';\n\nexport interface SelectOption {\n  value: string;\n  label: string;\n  disabled?: boolean;\n}\n\nexport interface SelectProps {\n  /**\n   * Current selected value\n   */\n  value: string;\n\n  /**\n   * Change handler\n   */\n  onChange: (value: string) => void;\n\n  /**\n   * Array of options\n   */\n  options: SelectOption[];\n\n  /**\n   * Whether the select is disabled\n   * @default false\n   */\n  disabled?: boolean;\n\n  /**\n   * Placeholder text when no value selected\n   */\n  placeholder?: string;\n\n  /**\n   * Whether the select is in an error state\n   * @default false\n   */\n  error?: boolean;\n\n  /**\n   * Whether the select is in a success state\n   * @default false\n   */\n  success?: boolean;\n\n  /**\n   * Full width of container\n   * @default false\n   */\n  fullWidth?: boolean;\n\n  /**\n   * CSS class name\n   */\n  className?: string;\n\n  /**\n   * Custom styles\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * ID for the select element\n   */\n  id?: string;\n}\n\n/**\n * Select Component\n *\n * A reusable select dropdown component with validation states.\n * Used in matching tasks and other scenarios requiring selection.\n *\n * @example\n * ```tsx\n * <Select\n *   value={selectedOption}\n *   onChange={setSelectedOption}\n *   options={[\n *     { value: 'a', label: 'Option A' },\n *     { value: 'b', label: 'Option B' },\n *   ]}\n *   placeholder=\"Choose an option\"\n * />\n * ```\n */\nexport function Select({\n  value,\n  onChange,\n  options,\n  disabled = false,\n  placeholder,\n  error = false,\n  success = false,\n  fullWidth = false,\n  className,\n  style,\n  id,\n}: SelectProps) {\n  return (\n    <select\n      id={id}\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      disabled={disabled}\n      style={style}\n      className={clsx(\n        styles.select,\n        fullWidth && styles['select--full-width'],\n        error && styles['select--error'],\n        success && styles['select--success'],\n        className\n      )}\n      aria-invalid={error ? \"true\" : \"false\"}\n    >\n      {placeholder && (\n        <option value=\"\" disabled>\n          {placeholder}\n        </option>\n      )}\n\n      {options.map((option) => (\n        <option key={option.value} value={option.value} disabled={option.disabled}>\n          {option.label}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport default Select;\n","import React from 'react';\nimport clsx from 'clsx';\nimport styles from './Slider.module.css';\n\nexport interface SliderProps {\n  /**\n   * Current slider value\n   */\n  value: number;\n\n  /**\n   * Change handler\n   */\n  onChange: (value: number) => void;\n\n  /**\n   * Minimum value\n   */\n  min: number;\n\n  /**\n   * Maximum value\n   */\n  max: number;\n\n  /**\n   * Step increment\n   * @default 1\n   */\n  step?: number;\n\n  /**\n   * Whether the slider is disabled\n   * @default false\n   */\n  disabled?: boolean;\n\n  /**\n   * Unit to display with value (e.g., \"°C\", \"%\")\n   */\n  unit?: string;\n\n  /**\n   * Whether to show the current value\n   * @default true\n   */\n  showValue?: boolean;\n\n  /**\n   * CSS class name\n   */\n  className?: string;\n\n  /**\n   * Custom styles\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * ID for the slider element\n   */\n  id?: string;\n\n  /**\n   * Aria label for accessibility\n   */\n  'aria-label'?: string;\n}\n\n/**\n * Slider Component\n *\n * A reusable range slider component with value display and unit support.\n * Used in slider tasks for numeric input.\n *\n * @example\n * ```tsx\n * <Slider\n *   value={temperature}\n *   onChange={setTemperature}\n *   min={0}\n *   max={100}\n *   unit=\"°C\"\n *   showValue\n * />\n * ```\n */\nexport function Slider({\n  value,\n  onChange,\n  min,\n  max,\n  step = 1,\n  disabled = false,\n  unit = '',\n  showValue = true,\n  className,\n  style,\n  id,\n  'aria-label': ariaLabel,\n}: SliderProps) {\n  const percentage = ((value - min) / (max - min)) * 100;\n\n  return (\n    <div style={style} className={clsx(styles['slider-container'], className)}>\n      <div className={styles['slider-track']}>\n        <div\n          className={clsx(\n            styles['slider-fill'],\n            disabled && styles['slider-fill--disabled']\n          )}\n          style={{ width: `${percentage}%` }}\n        />\n        <div\n          className={clsx(\n            styles['slider-thumb'],\n            disabled && styles['slider-thumb--disabled']\n          )}\n          style={{ left: `calc(${percentage}% - 12px)` }}\n        />\n        <input\n          type=\"range\"\n          id={id}\n          min={min}\n          max={max}\n          step={step}\n          value={value}\n          onChange={(e) => onChange(Number(e.target.value))}\n          disabled={disabled}\n          className={styles['slider-input']}\n          aria-label={ariaLabel}\n          aria-valuenow={value}\n          aria-valuemin={min}\n          aria-valuemax={max}\n          aria-valuetext={`${value}${unit}`}\n        />\n      </div>\n\n      {showValue && (\n        <div className={styles['slider-value-display']}>\n          <span>\n            {min}\n            {unit}\n          </span>\n          <span className={styles['slider-value-display__current']}>\n            {value}\n            {unit}\n          </span>\n          <span>\n            {max}\n            {unit}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Slider;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport type { Task, PracticeSession, ClozeDeletionContent, TrueFalseContent, OrderingContent, MatchingContent, MultipleSelectContent, SliderContent, WordScrambleContent, FlashcardContent, TextInputContent } from '@core/types/services';\nimport { db } from '@storage/database';\nimport { PracticeSessionService } from '@core/services/practice-session-service';\nimport { SpacedRepetitionService } from '@core/services/spaced-repetition-service';\nimport {\n  getPracticeSessionRepository,\n  getTaskRepository,\n  getSpacedRepetitionRepository,\n} from '@storage/factory';\nimport { useAudioPlayback } from '../hooks/use-audio-playback';\nimport { useAudioSettings } from '../hooks/use-audio-settings';\nimport { isEligibleForAutoPlay } from '@core/utils/audio-helpers';\nimport { getAudioConfig, type AudioConfig } from '@storage/template-loader';\nimport { AudioButton } from './audio-button';\nimport { FeedbackCard } from './common/FeedbackCard';\nimport { Input, Checkbox, Select, Slider } from './forms';\nimport styles from './practice-session.module.css';\n\ninterface Props {\n  topicId: string;\n  learningPathIds: string[];\n  targetCount?: number;\n  includeReview?: boolean;\n  onComplete: () => void;\n  onCancel: () => void;\n}\n\nexport function PracticeSession({ topicId, learningPathIds, targetCount = 10, includeReview = true, onComplete, onCancel }: Props) {\n  const [session, setSession] = useState<PracticeSession | null>(null);\n  const [currentTask, setCurrentTask] = useState<Task | null>(null);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState<number | null>(null);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [startTime, setStartTime] = useState<number>(Date.now());\n\n  // Multiple choice state\n  const [shuffledOptions, setShuffledOptions] = useState<string[]>([]);\n  const [shuffledIndices, setShuffledIndices] = useState<number[]>([]);\n  const [correctAnswerIndex, setCorrectAnswerIndex] = useState<number>(0);\n\n  // Cloze deletion state\n  const [blankAnswers, setBlankAnswers] = useState<string[]>([]);\n\n  // True/False state\n  const [trueFalseAnswer, setTrueFalseAnswer] = useState<boolean | null>(null);\n\n  // Ordering state\n  const [orderedItems, setOrderedItems] = useState<string[]>([]);\n\n  // Matching state\n  const [matchingAnswers, setMatchingAnswers] = useState<Record<number, number>>({});\n  const [shuffledRightColumn, setShuffledRightColumn] = useState<number[]>([]);\n\n  // Multiple Select state\n  const [selectedOptions, setSelectedOptions] = useState<Set<number>>(new Set());\n\n  // Slider state\n  const [sliderValue, setSliderValue] = useState<number>(0);\n\n  // Word Scramble state\n  const [scrambleAnswer, setScrambleAnswer] = useState<string>('');\n\n  // Flashcard state\n  const [flashcardRevealed, setFlashcardRevealed] = useState<boolean>(false);\n  const [flashcardKnown, setFlashcardKnown] = useState<boolean | null>(null);\n\n  // Text Input state\n  const [textInputAnswer, setTextInputAnswer] = useState<string>('');\n\n  // Keyboard & accessibility state\n  const [optionCursor, setOptionCursor] = useState<number>(0);\n  const [showShortcutHelp, setShowShortcutHelp] = useState<boolean>(false);\n  const [hintVisible, setHintVisible] = useState<boolean>(false);\n\n  // Template audio configuration\n  const [audioConfig, setAudioConfig] = useState<AudioConfig | null>(null);\n\n  // Audio hooks\n  const { playbackState, loadAudio, togglePlayPause, replay, stop, preloadNext, unlockAutoPlay } = useAudioPlayback();\n  const { settings: audioSettings } = useAudioSettings();\n\n  const toggleMultipleSelectOption = useCallback((index: number) => {\n    if (showFeedback || currentTask?.type !== 'multiple-select') return;\n    setSelectedOptions((prev) => {\n      const updated = new Set(prev);\n      if (updated.has(index)) {\n        updated.delete(index);\n      } else {\n        updated.add(index);\n      }\n      return updated;\n    });\n  }, [showFeedback, currentTask]);\n\n  const repeatQuestionAudio = useCallback(() => {\n    if (!currentTask) return;\n    const content: any = currentTask.content;\n    const questionField = audioConfig?.buttons?.question?.field;\n    const hasAudio = Boolean(currentTask.audioUrl || (questionField && content?.[questionField]));\n    if (!hasAudio) return;\n    try {\n      unlockAutoPlay();\n      replay();\n    } catch (error) {\n      console.warn('Audio replay failed', error);\n    }\n    loadAudio(currentTask, audioSettings, true).catch((error) => {\n      console.warn('Audio reload failed', error);\n    });\n  }, [currentTask, audioSettings, loadAudio, replay, unlockAutoPlay, audioConfig]);\n\n  // Helper function to check if answer is ready to submit\n  const canSubmit = useCallback((): boolean => {\n    if (showFeedback) return false;\n\n    if (currentTask?.type === 'multiple-choice') return selectedAnswer !== null;\n    if (currentTask?.type === 'cloze-deletion') return blankAnswers.every(a => a.trim().length > 0);\n    if (currentTask?.type === 'true-false') return trueFalseAnswer !== null;\n    if (currentTask?.type === 'ordering') return orderedItems.length > 0;\n    if (currentTask?.type === 'matching') {\n      const content = currentTask.content as MatchingContent;\n      return Object.keys(matchingAnswers).length === content.pairs.length;\n    }\n    if (currentTask?.type === 'multiple-select') return selectedOptions.size > 0;\n    if (currentTask?.type === 'slider') return true; // Slider always has a value\n    if (currentTask?.type === 'word-scramble') return scrambleAnswer.trim().length > 0;\n    if (currentTask?.type === 'flashcard') return flashcardKnown !== null;\n    if (currentTask?.type === 'text-input') return textInputAnswer.trim().length > 0;\n    return false;\n  }, [showFeedback, currentTask, selectedAnswer, blankAnswers, trueFalseAnswer, orderedItems, matchingAnswers, selectedOptions, scrambleAnswer, flashcardKnown, textInputAnswer]);\n\n  const handleAnswerSubmit = useCallback(async (flashcardResult?: boolean) => {\n    if (!currentTask || !session) return;\n\n    // Unlock auto-play on first user interaction (browser requirement)\n    if (!playbackState.autoPlayUnlocked) {\n      unlockAutoPlay().catch(err => console.warn('Failed to unlock auto-play:', err));\n    }\n\n    let correct = false;\n\n    // Check answer based on task type\n    if (currentTask.type === 'multiple-choice') {\n      if (selectedAnswer === null) return;\n      correct = selectedAnswer === correctAnswerIndex;\n    } else if (currentTask.type === 'cloze-deletion') {\n      const content = currentTask.content as ClozeDeletionContent;\n      correct = content.blanks.every((blank, i) => {\n        const userAnswer = blankAnswers[i]?.trim().toLowerCase() || '';\n        const correctAnswer = blank.correctAnswer.toLowerCase();\n        const alternatives = blank.alternatives?.map(a => a.toLowerCase()) || [];\n        return userAnswer === correctAnswer || alternatives.includes(userAnswer);\n      });\n    } else if (currentTask.type === 'true-false') {\n      if (trueFalseAnswer === null) return;\n      const content = currentTask.content as TrueFalseContent;\n      correct = trueFalseAnswer === content.correctAnswer;\n    } else if (currentTask.type === 'ordering') {\n      const content = currentTask.content as OrderingContent;\n      correct = orderedItems.every((item, i) => {\n        const originalIndex = content.items.indexOf(item);\n        return content.correctOrder[i]! === originalIndex;\n      });\n    } else if (currentTask.type === 'matching') {\n      const content = currentTask.content as MatchingContent;\n      correct = content.pairs.every((_pair, i) => matchingAnswers[i] === i);\n    } else if (currentTask.type === 'multiple-select') {\n      const content = currentTask.content as MultipleSelectContent;\n      if (selectedOptions.size === 0) return;\n      // Check if all correct answers are selected and no wrong ones\n      correct = content.correctAnswers.length === selectedOptions.size &&\n        content.correctAnswers.every(ans => selectedOptions.has(ans));\n    } else if (currentTask.type === 'slider') {\n      const content = currentTask.content as SliderContent;\n      const tolerance = content.tolerance || 0;\n      correct = Math.abs(sliderValue - content.correctValue) <= tolerance;\n    } else if (currentTask.type === 'word-scramble') {\n      if (!scrambleAnswer.trim()) return;\n      const content = currentTask.content as WordScrambleContent;\n      correct = scrambleAnswer.trim().toLowerCase() === content.correctWord.toLowerCase();\n    } else if (currentTask.type === 'flashcard') {\n      const result = flashcardResult ?? flashcardKnown;\n      if (result === null || result === undefined) return;\n      correct = result;\n      // Ensure state reflects the recorded result when triggered via override\n      setFlashcardKnown(result);\n    } else if (currentTask.type === 'text-input') {\n      if (!textInputAnswer.trim()) return;\n      const content = currentTask.content as TextInputContent;\n      const caseSensitive = content.caseSensitive || false;\n      const userAnswer = caseSensitive ? textInputAnswer.trim() : textInputAnswer.trim().toLowerCase();\n      const correctAnswer = caseSensitive ? content.correctAnswer : content.correctAnswer.toLowerCase();\n      const alternatives = (content.alternatives || []).map(a => caseSensitive ? a : a.toLowerCase());\n      correct = userAnswer === correctAnswer || alternatives.includes(userAnswer);\n    }\n\n    setIsCorrect(correct);\n    setShowFeedback(true);\n\n    // Calculate time spent\n    const timeSpent = Math.round((Date.now() - startTime) / 1000);\n\n    // Record answer in session\n    const sessionService = new PracticeSessionService(\n      getPracticeSessionRepository(),\n      getTaskRepository(),\n      getSpacedRepetitionRepository()\n    );\n\n    await sessionService.recordSessionAnswer(session.id, correct, timeSpent);\n\n    // Update spaced repetition\n    const spacedRepService = new SpacedRepetitionService(\n      getSpacedRepetitionRepository(),\n      getTaskRepository()\n    );\n\n    // Convert boolean to grade (0-5 scale)\n    const grade = correct ? 4 : 2;\n    await spacedRepService.recordAnswer(currentTask.id, correct, grade);\n\n    // Update session state\n    const updatedSession = await db.practiceSessions.get(session.id);\n    if (updatedSession) {\n      setSession(updatedSession);\n    }\n  }, [currentTask, session, playbackState.autoPlayUnlocked, unlockAutoPlay, selectedAnswer, correctAnswerIndex, blankAnswers, trueFalseAnswer, orderedItems, matchingAnswers, selectedOptions, sliderValue, scrambleAnswer, flashcardKnown, textInputAnswer, startTime]);\n\n  const handleComplete = useCallback(async () => {\n    if (!session) return;\n\n    const sessionService = new PracticeSessionService(\n      getPracticeSessionRepository(),\n      getTaskRepository(),\n      getSpacedRepetitionRepository()\n    );\n\n    await sessionService.completeSession(session.id);\n\n    // Wait a bit to ensure the session is saved to the database\n    await new Promise(resolve => setTimeout(resolve, 100));\n\n    onComplete();\n  }, [session, onComplete]);\n\n  const handleNextTask = useCallback(() => {\n    setShowFeedback(false);\n    setSelectedAnswer(null);\n\n    if (session && currentTaskIndex < session.execution.taskIds.length - 1) {\n      setCurrentTaskIndex(currentTaskIndex + 1);\n    } else {\n      handleComplete();\n    }\n  }, [session, currentTaskIndex, handleComplete]);\n\n  // Initialize session\n  useEffect(() => {\n    initializeSession();\n  }, []);\n\n  // Load current task when session is first loaded\n  useEffect(() => {\n    if (session && session.execution.taskIds.length > 0 && currentTaskIndex === 0) {\n      loadCurrentTask();\n    }\n  }, [session]);\n\n  // Load current task when index changes\n  useEffect(() => {\n    if (session && session.execution.taskIds.length > 0 && currentTaskIndex > 0) {\n      loadCurrentTask();\n    }\n  }, [currentTaskIndex]);\n\n  useEffect(() => {\n    if (!currentTask) {\n      setOptionCursor(0);\n      return;\n    }\n\n    if (currentTask.type === 'multiple-choice') {\n      const total = shuffledOptions.length;\n      setOptionCursor((prev) => {\n        if (total === 0) return 0;\n        return Math.min(prev, total - 1);\n      });\n    } else if (currentTask.type === 'multiple-select') {\n      const total = (currentTask.content as MultipleSelectContent).options.length;\n      setOptionCursor((prev) => {\n        if (total === 0) return 0;\n        return Math.min(prev, total - 1);\n      });\n    } else {\n      setOptionCursor(0);\n    }\n  }, [currentTask, shuffledOptions]);\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (!currentTask) return;\n      const active = document.activeElement as HTMLElement | null;\n      const tagName = active?.tagName?.toLowerCase();\n      const isTyping = Boolean(active && (tagName === 'input' || tagName === 'textarea' || active.isContentEditable));\n      const key = event.key;\n\n      const taskType = currentTask.type as string;\n\n      const toggleHintIfAvailable = () => {\n        const hint = (currentTask.content as any)?.hint;\n        if (hint) {\n          setHintVisible((prev) => !prev);\n        }\n      };\n\n      const moveCursor = (delta: number) => {\n        if (taskType === 'multiple-choice') {\n          const total = shuffledOptions.length;\n          if (total === 0) return;\n          setOptionCursor((prev) => {\n            const next = (prev + delta + total) % total;\n            setSelectedAnswer(next);\n            return next;\n          });\n        } else if (taskType === 'multiple-select') {\n          const options = (currentTask.content as MultipleSelectContent).options;\n          if (options.length === 0) return;\n          setOptionCursor((prev) => {\n            const next = (prev + delta + options.length) % options.length;\n            return next;\n          });\n        }\n      };\n\n      const submitCurrent = () => {\n        if (taskType === 'flashcard') {\n          if (!flashcardRevealed) {\n            setFlashcardRevealed(true);\n          } else if (flashcardKnown !== null) {\n            handleNextTask();\n          }\n          return;\n        }\n\n        if (!showFeedback) {\n          if (canSubmit()) {\n            void handleAnswerSubmit();\n          }\n        } else if (taskType !== 'flashcard') {\n          handleNextTask();\n        }\n      };\n\n      if ((key === '?' || (key === '/' && event.shiftKey)) && !event.metaKey && !event.ctrlKey) {\n        event.preventDefault();\n        setShowShortcutHelp((prev) => !prev);\n        return;\n      }\n\n      if (showShortcutHelp) {\n        if (key === 'Escape' || key === '?' || (key === '/' && event.shiftKey)) {\n          event.preventDefault();\n          setShowShortcutHelp(false);\n        }\n        return;\n      }\n\n      if (/^[1-9]$/.test(key) && !isTyping) {\n        const index = Number(key) - 1;\n        if (taskType === 'multiple-choice' && index < shuffledOptions.length) {\n          event.preventDefault();\n          setOptionCursor(index);\n          setSelectedAnswer(index);\n        } else if (taskType === 'multiple-select') {\n          const options = (currentTask.content as MultipleSelectContent).options;\n          if (index < options.length) {\n            event.preventDefault();\n            setOptionCursor(index);\n            toggleMultipleSelectOption(index);\n          }\n        }\n        return;\n      }\n\n      switch (key) {\n        case 'Escape':\n          event.preventDefault();\n          if (hintVisible) {\n            setHintVisible(false);\n          } else {\n            onCancel();\n          }\n          break;\n        case 'Enter':\n          event.preventDefault();\n          submitCurrent();\n          break;\n        case ' ': {\n          if (isTyping) return;\n          if (taskType === 'multiple-choice') {\n            event.preventDefault();\n            setSelectedAnswer(optionCursor);\n          } else if (taskType === 'multiple-select') {\n            event.preventDefault();\n            toggleMultipleSelectOption(optionCursor);\n          }\n          break;\n        }\n        case 'ArrowUp':\n        case 'ArrowLeft':\n          if (isTyping) return;\n          if (taskType === 'multiple-choice' || taskType === 'multiple-select') {\n            event.preventDefault();\n            moveCursor(-1);\n          }\n          break;\n        case 'ArrowDown':\n        case 'ArrowRight':\n          if (isTyping) return;\n          if (taskType === 'multiple-choice' || taskType === 'multiple-select') {\n            event.preventDefault();\n            moveCursor(1);\n          }\n          break;\n        case 'r':\n        case 'R':\n          if (isTyping) return;\n          event.preventDefault();\n          repeatQuestionAudio();\n          break;\n        case 'h':\n        case 'H':\n          if (isTyping) return;\n          event.preventDefault();\n          toggleHintIfAvailable();\n          break;\n        case '?':\n          // Already handled above\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    currentTask,\n    shuffledOptions,\n    optionCursor,\n    showFeedback,\n    flashcardRevealed,\n    flashcardKnown,\n    hintVisible,\n  ]);\n\n  // Keyboard shortcuts for audio controls\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      // Don't trigger shortcuts if user is typing in an input\n      if (e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement) {\n        return;\n      }\n\n      // Don't trigger if no audio is loaded\n      if (!playbackState.audioUrl) {\n        return;\n      }\n\n      switch (e.key.toLowerCase()) {\n        case ' ': // Space - Toggle play/pause\n          e.preventDefault();\n          togglePlayPause().catch(console.error);\n          break;\n        case 'r': // R - Replay\n          e.preventDefault();\n          replay().catch(console.error);\n          break;\n        case 's': // S - Stop\n          e.preventDefault();\n          stop();\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [playbackState.audioUrl, togglePlayPause, replay, stop]);\n\n  // Auto-play audio when feedback is shown (after user answers)\n  useEffect(() => {\n    if (showFeedback && currentTask && isEligibleForAutoPlay(currentTask, audioSettings)) {\n      console.log('🔊 Auto-play in feedback:', currentTask.audioUrl);\n      loadAudio(currentTask, audioSettings, true).catch((error) => {\n        console.warn('Auto-play in feedback failed:', error);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showFeedback, currentTask?.id, audioSettings.autoPlayEnabled, audioSettings.languageFilter]);\n\n  // Auto-play audio on load (based on template config)\n  useEffect(() => {\n    if (!currentTask || !audioConfig || showFeedback) return;\n\n    const fieldsToPlay = audioConfig.autoPlay?.onLoad || [];\n    const content = currentTask.content as any;\n\n    // Try to auto-play immediately\n    const tryAutoPlay = async () => {\n      for (const field of fieldsToPlay) {\n        const fieldValue = content[field];\n\n        if (!fieldValue) continue;\n\n        // Handle array fields (like optionsAudio) - play first item\n        const audioFile = Array.isArray(fieldValue) ? fieldValue[0] : fieldValue;\n\n        if (audioFile) {\n          try {\n            const audio = new Audio(`${import.meta.env.BASE_URL}audio/${audioFile}`);\n            await audio.play();\n            console.log(`✅ Auto-played ${field}: ${audioFile}`);\n            break; // Only play first available audio\n          } catch (err) {\n            console.warn(`⚠️ Auto-play blocked for ${field}. User interaction required first.`, err);\n            // Try to unlock auto-play for next time\n            if (!playbackState.autoPlayUnlocked) {\n              unlockAutoPlay().catch(e => console.warn('Failed to unlock auto-play:', e));\n            }\n          }\n        }\n      }\n    };\n\n    tryAutoPlay();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentTask?.id, audioConfig]);\n\n  // Reset hint visibility when feedback is shown\n  useEffect(() => {\n    if (showFeedback) {\n      setHintVisible(false);\n    }\n  }, [showFeedback]);\n\n  // Auto-play audio on reveal/feedback (based on template config)\n  useEffect(() => {\n    if (!currentTask || !audioConfig || !showFeedback) return;\n\n    const fieldsToPlay = audioConfig.autoPlay?.onReveal || [];\n    const content = currentTask.content as any;\n\n    // Try to auto-play immediately\n    const tryAutoPlayOnReveal = async () => {\n      for (const field of fieldsToPlay) {\n        const audioFiles: string[] = [];\n\n        // Special handling for different task types\n        if (field === 'correctAnswerAudio' && currentTask.type === 'multiple-choice') {\n          // Multiple choice: play correct option audio\n          if (content.optionsAudio?.[content.correctAnswer]) {\n            audioFiles.push(content.optionsAudio[content.correctAnswer]);\n          }\n        } else if (field === 'correctAnswerAudio' && currentTask.type === 'text-input') {\n          // Text input: play correct answer audio\n          if (content.correctAnswerAudio) {\n            audioFiles.push(content.correctAnswerAudio);\n          }\n        } else if (field === 'itemsAudioInOrder' && currentTask.type === 'ordering') {\n          // Ordering: play all items in correct order\n          const itemsAudio = content.itemsAudio;\n          const correctOrder = content.correctOrder;\n          if (itemsAudio && correctOrder) {\n            for (const originalIndex of correctOrder) {\n              if (itemsAudio[originalIndex]) {\n                audioFiles.push(itemsAudio[originalIndex]);\n              }\n            }\n          }\n        } else if (field === 'blanksAudioInOrder' && currentTask.type === 'cloze-deletion') {\n          // Cloze deletion: play all blanks in order\n          const blanks = content.blanks;\n          if (blanks) {\n            for (const blank of blanks) {\n              if (blank.correctAnswerAudio) {\n                audioFiles.push(blank.correctAnswerAudio);\n              }\n            }\n          }\n        } else if (field === 'correctOptionsAudio' && currentTask.type === 'multiple-select') {\n          // Multiple select: play all correct options\n          const optionsAudio = content.optionsAudio;\n          const correctAnswers = content.correctAnswers;\n          if (optionsAudio && correctAnswers) {\n            for (const correctIndex of correctAnswers) {\n              if (optionsAudio[correctIndex]) {\n                audioFiles.push(optionsAudio[correctIndex]);\n              }\n            }\n          }\n        } else if (field === 'correctValueAudio' && currentTask.type === 'slider') {\n          // Slider: play correct value audio\n          if (content.correctValueAudio) {\n            audioFiles.push(content.correctValueAudio);\n          }\n        } else if (field === 'correctWordAudio' && currentTask.type === 'word-scramble') {\n          // Word scramble: play correct word audio\n          if (content.correctWordAudio) {\n            audioFiles.push(content.correctWordAudio);\n          }\n        } else {\n          // Generic: try to get field value\n          const fieldValue = content[field];\n          if (fieldValue) {\n            const audioFile = Array.isArray(fieldValue) ? fieldValue[0] : fieldValue;\n            if (audioFile) audioFiles.push(audioFile);\n          }\n        }\n\n        // Play all audio files sequentially\n        if (audioFiles.length > 0) {\n          for (const audioFile of audioFiles) {\n            try {\n              const audio = new Audio(`${import.meta.env.BASE_URL}audio/${audioFile}`);\n              await audio.play();\n              // Wait for audio to finish before playing next one\n              await new Promise(resolve => {\n                audio.onended = resolve;\n                // Fallback timeout in case onended doesn't fire\n                setTimeout(resolve, 5000);\n              });\n              console.log(`✅ Auto-played on reveal ${field}: ${audioFile}`);\n            } catch (err) {\n              console.warn(`⚠️ Auto-play on reveal blocked for ${audioFile}.`, err);\n              break; // Stop if one fails\n            }\n          }\n          break; // Only process first field with audio\n        }\n      }\n    };\n\n    // Small delay to ensure feedback is visible before playing\n    const timer = setTimeout(() => {\n      tryAutoPlayOnReveal();\n    }, 100);\n\n    return () => clearTimeout(timer);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showFeedback, currentTask?.id, audioConfig]);\n\n  // Helper function to check if answer is ready to submit\n\n  // Render task-specific content\n  function renderTaskContent() {\n    if (!currentTask) return null;\n\n    if (currentTask.type === 'multiple-choice') {\n      return renderMultipleChoice();\n    } else if (currentTask.type === 'cloze-deletion') {\n      return renderClozeDeletion();\n    } else if (currentTask.type === 'true-false') {\n      return renderTrueFalse();\n    } else if (currentTask.type === 'ordering') {\n      return renderOrdering();\n    } else if (currentTask.type === 'matching') {\n      return renderMatching();\n    } else if (currentTask.type === 'multiple-select') {\n      return renderMultipleSelect();\n    } else if (currentTask.type === 'slider') {\n      return renderSlider();\n    } else if (currentTask.type === 'word-scramble') {\n      return renderWordScramble();\n    } else if (currentTask.type === 'flashcard') {\n      return renderFlashcard();\n    } else if (currentTask.type === 'text-input') {\n      return renderTextInput();\n    }\n    return null;\n  }\n\n  function renderMultipleChoice() {\n    if (!currentTask || currentTask.type !== 'multiple-choice') return null;\n    const content = currentTask.content as any;\n\n    return (\n      <div className={styles['practice-session__mc-options']}>\n        {shuffledOptions.map((option, index) => {\n          const isFocused = !showFeedback && optionCursor === index;\n          const optionClasses = [\n            styles['practice-session__mc-option'],\n            showFeedback && index === correctAnswerIndex && styles['practice-session__mc-option--correct'],\n            showFeedback && index === selectedAnswer && !isCorrect && styles['practice-session__mc-option--incorrect'],\n            !showFeedback && selectedAnswer === index && styles['practice-session__mc-option--selected'],\n            isFocused && styles['practice-session__mc-option--focused'],\n            showFeedback && styles['practice-session__mc-option--disabled']\n          ].filter(Boolean).join(' ');\n\n          // Get the audio URL for this option if available\n          // Use the original index from shuffledIndices to get the correct audio\n          const originalIndex = shuffledIndices[index];\n          const optionAudioUrl = content.optionsAudio && originalIndex !== undefined && content.optionsAudio[originalIndex]\n            ? `${import.meta.env.BASE_URL}audio/${content.optionsAudio[originalIndex]}`\n            : null;\n\n          return (\n            <button\n              key={index}\n              onClick={() => {\n                if (showFeedback) return;\n                setOptionCursor(index);\n                setSelectedAnswer(index);\n              }}\n              disabled={showFeedback}\n              className={optionClasses}\n              onMouseEnter={() => setOptionCursor(index)}\n            >\n              <span>{option}</span>\n              {optionAudioUrl && (\n                <AudioButton\n                  text={option}\n                  audioUrl={optionAudioUrl}\n                  size=\"small\"\n                />\n              )}\n            </button>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderClozeDeletion() {\n    if (!currentTask || currentTask.type !== 'cloze-deletion') return null;\n    const content = currentTask.content as ClozeDeletionContent;\n\n    // Split text by {{blank}} markers\n    const parts = content.text.split(/\\{\\{blank\\}\\}/g);\n\n    return (\n      <div className={styles['practice-session__cloze-container']}>\n        <div className={styles['practice-session__cloze-text']}>\n          {parts.map((part, i) => (\n            <span key={i}>\n              {part}\n              {i < content.blanks.length && (() => {\n                const userAnswer = blankAnswers[i]?.trim().toLowerCase() || '';\n                const isCorrect = userAnswer === content.blanks[i]!.correctAnswer.toLowerCase() ||\n                  content.blanks[i]!.alternatives?.map(a => a.toLowerCase()).includes(userAnswer);\n                const hasAnswer = blankAnswers[i]?.trim() !== '';\n\n                return (\n                  <Input\n                    value={blankAnswers[i] || ''}\n                    onChange={(e) => {\n                      const newAnswers = [...blankAnswers];\n                      newAnswers[i] = e.target.value;\n                      setBlankAnswers(newAnswers);\n                    }}\n                    disabled={showFeedback}\n                    error={showFeedback && hasAnswer && !isCorrect ? true : false}\n                    success={showFeedback && isCorrect ? true : false}\n                    className={styles['practice-session__cloze-input']}\n                  />\n                );\n              })()}\n            </span>\n          ))}\n        </div>\n        {showFeedback && (\n          <div className={styles['practice-session__cloze-feedback']}>\n            <div className={styles['practice-session__cloze-feedback-title']}>\n              Richtige Antworten:\n            </div>\n            {content.blanks.map((blank, i) => {\n              const userAnswer = blankAnswers[i]?.trim().toLowerCase() || '';\n              const isCorrect = userAnswer === blank.correctAnswer.toLowerCase() ||\n                blank.alternatives?.map(a => a.toLowerCase()).includes(userAnswer);\n              const answerClass = isCorrect\n                ? styles['practice-session__cloze-answer--correct']\n                : styles['practice-session__cloze-answer--neutral'];\n              return (\n                <div key={i} className={`${styles['practice-session__cloze-answer']} ${answerClass}`}>\n                  Lücke {i + 1}: <strong className={styles['practice-session__cloze-answer-correct']}>{blank.correctAnswer}</strong>\n                  {blank.alternatives && blank.alternatives.length > 0 && (\n                    <span className={styles['practice-session__cloze-alternatives']}>\n                      {' '}(auch richtig: {blank.alternatives.join(', ')})\n                    </span>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderTrueFalse() {\n    if (!currentTask || currentTask.type !== 'true-false') return null;\n    const content = currentTask.content as TrueFalseContent;\n\n    return (\n      <div className={styles['practice-session__tf-container']}>\n        <div className={styles['practice-session__tf-statement']}>\n          {content.statement}\n        </div>\n        <div className={styles['practice-session__tf-buttons']}>\n          {[true, false].map((value) => {\n            const btnClasses = [\n              styles['practice-session__tf-button'],\n              showFeedback && value === content.correctAnswer && styles['practice-session__tf-button--correct'],\n              showFeedback && value === trueFalseAnswer && !isCorrect && styles['practice-session__tf-button--incorrect'],\n              !showFeedback && trueFalseAnswer === value && styles['practice-session__tf-button--selected'],\n              showFeedback && styles['practice-session__tf-button--disabled']\n            ].filter(Boolean).join(' ');\n\n            return (\n              <button\n                key={value.toString()}\n                onClick={() => !showFeedback && setTrueFalseAnswer(value)}\n                disabled={showFeedback}\n                className={btnClasses}\n              >\n                {value ? 'Richtig' : 'Falsch'}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  function renderOrdering() {\n    if (!currentTask || currentTask.type !== 'ordering') return null;\n    const content = currentTask.content as any;\n\n    return (\n      <div className={styles['practice-session__ordering-container']}>\n        <div className={styles['practice-session__ordering-instruction']}>\n          Ordne die Elemente in die richtige Reihenfolge\n        </div>\n        <div className={styles['practice-session__ordering-items']}>\n          {orderedItems.map((item, index) => {\n            const originalIndex = content.items.indexOf(item);\n            const isInCorrectPosition = showFeedback && content.correctOrder[index] === originalIndex;\n            const shouldBeAtPosition = showFeedback ? content.correctOrder.indexOf(originalIndex) : -1;\n\n            const itemClasses = [\n              styles['practice-session__ordering-item'],\n              showFeedback && isInCorrectPosition && styles['practice-session__ordering-item--correct']\n            ].filter(Boolean).join(' ');\n\n            // Get audio URL for this item\n            const itemAudioUrl = content.itemsAudio && content.itemsAudio[originalIndex]\n              ? `${import.meta.env.BASE_URL}audio/${content.itemsAudio[originalIndex]}`\n              : null;\n\n            return (\n              <div key={index} className={itemClasses}>\n                <div className={styles['practice-session__ordering-item-number']}>\n                  {index + 1}.\n                </div>\n                <div className={styles['practice-session__ordering-item-text']}>\n                  <span className={styles['practice-session__ordering-word']}>{item}</span>\n                  {itemAudioUrl && (\n                    <AudioButton\n                      text={item}\n                      audioUrl={itemAudioUrl}\n                      size=\"small\"\n                    />\n                  )}\n                  {showFeedback && !isInCorrectPosition && (\n                    <span className={styles['practice-session__ordering-hint']}>\n                      → Position {shouldBeAtPosition + 1}\n                    </span>\n                  )}\n                </div>\n                {!showFeedback && (\n                  <div className={styles['practice-session__ordering-controls']}>\n                    {index > 0 && (\n                      <button\n                        onClick={() => {\n                          const newItems = [...orderedItems];\n                          [newItems[index]!, newItems[index - 1]!] = [newItems[index - 1]!, newItems[index]!];\n                          setOrderedItems(newItems);\n                        }}\n                        className={styles['practice-session__ordering-btn']}\n                      >\n                        ↑\n                      </button>\n                    )}\n                    {index < orderedItems.length - 1 && (\n                      <button\n                        onClick={() => {\n                          const newItems = [...orderedItems];\n                          [newItems[index]!, newItems[index + 1]!] = [newItems[index + 1]!, newItems[index]!];\n                          setOrderedItems(newItems);\n                        }}\n                        className={styles['practice-session__ordering-btn']}\n                      >\n                        ↓\n                      </button>\n                    )}\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n        {showFeedback && !isCorrect && (\n          <div className={styles['practice-session__ordering-feedback']}>\n            <div className={styles['practice-session__ordering-feedback-title']}>\n              Richtige Reihenfolge:\n            </div>\n            {content.correctOrder.map((originalIndex: number, position: number) => (\n              <div key={position} className={styles['practice-session__ordering-feedback-item']}>\n                {position + 1}. <strong>{content.items[originalIndex]}</strong>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderMatching() {\n    if (!currentTask || currentTask.type !== 'matching') return null;\n    const content = currentTask.content as any;\n\n    return (\n      <div className={styles['practice-session__matching-container']}>\n        <div className={styles['practice-session__matching-instruction']}>\n          Ordne die passenden Paare zu\n        </div>\n        <div className={styles['practice-session__matching-grid']}>\n          {content.pairs.map((pair: any, leftIndex: number) => {\n            const isCorrect = showFeedback && matchingAnswers[leftIndex] === leftIndex;\n            const hasAnswer = matchingAnswers[leftIndex] !== undefined && matchingAnswers[leftIndex] !== null;\n\n            // Get audio URL for left item\n            const leftAudioUrl = content.leftAudio && content.leftAudio[leftIndex]\n              ? `${import.meta.env.BASE_URL}audio/${content.leftAudio[leftIndex]}`\n              : null;\n\n            return (\n              <React.Fragment key={leftIndex}>\n                <div className={styles['practice-session__matching-left-item']}>\n                  <span>{pair.left}</span>\n                  {leftAudioUrl && (\n                    <AudioButton\n                      text={pair.left}\n                      audioUrl={leftAudioUrl}\n                      size=\"small\"\n                    />\n                  )}\n                </div>\n                <Select\n                  value={matchingAnswers[leftIndex]?.toString() ?? ''}\n                  onChange={(value) => {\n                    const numValue = parseInt(value);\n                    setMatchingAnswers({ ...matchingAnswers, [leftIndex]: numValue });\n                  }}\n                  options={shuffledRightColumn.map((rightIndex) => ({\n                    value: rightIndex.toString(),\n                    label: content.pairs[rightIndex]!.right,\n                  }))}\n                  disabled={showFeedback}\n                  placeholder=\"Wähle...\"\n                  error={showFeedback && hasAnswer && !isCorrect}\n                  success={showFeedback && isCorrect}\n                  fullWidth\n                />\n              </React.Fragment>\n            );\n          })}\n        </div>\n        {showFeedback && !isCorrect && (\n          <div className={styles['practice-session__matching-feedback']}>\n            <div className={styles['practice-session__matching-feedback-title']}>\n              Richtige Zuordnungen:\n            </div>\n            {content.pairs.map((pair: any, i: number) => (\n              <div key={i} className={styles['practice-session__matching-feedback-item']}>\n                <strong>{pair.left}</strong> → <strong>{pair.right}</strong>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderMultipleSelect() {\n    if (!currentTask || currentTask.type !== 'multiple-select') return null;\n    const content = currentTask.content as MultipleSelectContent;\n\n    return (\n      <div className={styles['practice-session__ms-container']}>\n        <div className={styles['practice-session__ms-instruction']}>\n          Wähle alle zutreffenden Antworten\n        </div>\n        <div className={styles['practice-session__ms-options']}>\n          {content.options.map((option, index) => {\n            const isSelected = selectedOptions.has(index);\n            const isCorrectAnswer = content.correctAnswers.includes(index);\n            const isFocused = !showFeedback && optionCursor === index;\n            let statusIcon = '';\n\n            if (showFeedback) {\n              if (isCorrectAnswer) {\n                statusIcon = isSelected ? '✓' : '○';\n              } else if (isSelected && !isCorrectAnswer) {\n                statusIcon = '✗';\n              }\n            }\n\n            const optionClasses = [\n              styles['practice-session__ms-option'],\n              isFocused && styles['practice-session__ms-option--focused'],\n              showFeedback && isCorrectAnswer && styles['practice-session__ms-option--correct'],\n              showFeedback && isSelected && !isCorrectAnswer && styles['practice-session__ms-option--incorrect'],\n              !showFeedback && isSelected && styles['practice-session__ms-option--selected']\n            ].filter(Boolean).join(' ');\n\n            const iconClass = isCorrectAnswer\n              ? styles['practice-session__ms-status-icon--correct']\n              : styles['practice-session__ms-status-icon--incorrect'];\n\n            return (\n              <div\n                key={index}\n                className={optionClasses}\n                onMouseEnter={() => setOptionCursor(index)}\n              >\n                <Checkbox\n                  checked={isSelected}\n                  onChange={() => {\n                    toggleMultipleSelectOption(index);\n                    setOptionCursor(index);\n                  }}\n                  disabled={showFeedback}\n                  label={<span className={styles['practice-session__ms-option-label']}>{option}</span>}\n                  error={showFeedback && isSelected && !isCorrectAnswer}\n                  success={showFeedback && isCorrectAnswer && isSelected}\n                  style={{ flex: 1 }}\n                />\n                {showFeedback && statusIcon && (\n                  <span className={`${styles['practice-session__ms-status-icon']} ${iconClass}`}>\n                    {statusIcon}\n                  </span>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  function renderSlider() {\n    if (!currentTask || currentTask.type !== 'slider') return null;\n    const content = currentTask.content as SliderContent;\n    const step = content.step || 1;\n    const tolerance = content.tolerance || 0;\n    const isCorrectValue = Math.abs(sliderValue - content.correctValue) <= tolerance;\n\n    const valueClass = showFeedback\n      ? isCorrectValue\n        ? styles['practice-session__slider-value--correct']\n        : styles['practice-session__slider-value--incorrect']\n      : '';\n\n    return (\n      <div className={styles['practice-session__slider-container']}>\n        <div className={styles['practice-session__slider-value-display']}>\n          <div className={`${styles['practice-session__slider-value']} ${valueClass}`}>\n            {sliderValue}{content.unit || ''}\n          </div>\n        </div>\n\n        <div className={styles['practice-session__slider-wrapper']}>\n          <Slider\n            value={sliderValue}\n            onChange={setSliderValue}\n            min={content.min}\n            max={content.max}\n            step={step}\n            disabled={showFeedback}\n            unit={content.unit || ''}\n            showValue={false}\n          />\n        </div>\n\n        {showFeedback && (\n          <div className={styles['practice-session__slider-feedback']}>\n            <div className={styles['practice-session__slider-feedback-text']}>\n              Richtige Antwort: <strong className={styles['practice-session__slider-correct-value']}>\n                {content.correctValue}{content.unit || ''}\n              </strong>\n              {tolerance > 0 && (\n                <span className={styles['practice-session__slider-tolerance']}>\n                  {' '}(±{tolerance})\n                </span>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderWordScramble() {\n    if (!currentTask || currentTask.type !== 'word-scramble') return null;\n    const content = currentTask.content as WordScrambleContent;\n\n    const isAnswerCorrect = scrambleAnswer.trim().toLowerCase() === content.correctWord.toLowerCase();\n    const hasAnswer = scrambleAnswer.trim() !== '';\n\n    const inputClass = showFeedback\n      ? isAnswerCorrect\n        ? styles['practice-session__scramble-input--correct']\n        : hasAnswer\n        ? styles['practice-session__scramble-input--incorrect']\n        : ''\n      : '';\n\n    return (\n      <div className={styles['practice-session__scramble-container']}>\n        <div className={styles['practice-session__scramble-display']}>\n          <div className={styles['practice-session__scramble-label']}>\n            Buchstabensalat:\n          </div>\n          <div className={styles['practice-session__scramble-word']}>\n            {content.scrambledWord}\n          </div>\n          {content.showLength && (\n            <div className={styles['practice-session__scramble-length']}>\n              ({content.correctWord.length} Buchstaben)\n            </div>\n          )}\n        </div>\n\n        <div>\n          <label className={styles['practice-session__scramble-input-label']}>\n            Deine Lösung:\n          </label>\n          <input\n            type=\"text\"\n            value={scrambleAnswer}\n            onChange={(e) => setScrambleAnswer(e.target.value)}\n            disabled={showFeedback}\n            placeholder=\"Entschlüssle das Wort...\"\n            className={`${styles['practice-session__scramble-input']} ${inputClass}`}\n          />\n        </div>\n\n        {showFeedback && !isCorrect && (\n          <div className={styles['practice-session__scramble-feedback']}>\n            <div className={styles['practice-session__scramble-feedback-label']}>\n              Richtige Lösung:\n            </div>\n            <div className={styles['practice-session__scramble-feedback-word']}>\n              {content.correctWord}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderFlashcard() {\n    if (!currentTask || currentTask.type !== 'flashcard') return null;\n    const content = currentTask.content as FlashcardContent;\n\n    return (\n      <div className={styles['practice-session__flashcard-container']}>\n        {/* Flashcard */}\n        <div className={styles['practice-session__flashcard']}>\n          {/* Language indicator */}\n          <div className={styles['practice-session__flashcard-lang']}>\n            {content.frontLanguage === 'de' ? 'Deutsch' : content.frontLanguage === 'es' ? 'Español' : 'English'}\n          </div>\n\n          {/* Front side */}\n          <div className={styles['practice-session__flashcard-front']}>\n            <div>{content.front}</div>\n            {audioConfig?.buttons?.front?.show && (content as any)[audioConfig.buttons.front.field] && (\n              <AudioButton\n                text={content.front}\n                audioUrl={`${import.meta.env.BASE_URL}audio/${(content as any)[audioConfig.buttons.front.field]}`}\n                size=\"large\"\n              />\n            )}\n          </div>\n\n          {/* Back side or reveal button */}\n          {!flashcardRevealed ? (\n            <button\n              onClick={async () => {\n                setFlashcardRevealed(true);\n                // Auto-play audio when revealing (based on template config)\n                if (audioConfig && playbackState.autoPlayUnlocked) {\n                  const fieldsToPlay = audioConfig.autoPlay?.onReveal || [];\n                  for (const field of fieldsToPlay) {\n                    if ((content as any)[field]) {\n                      try {\n                        const audio = new Audio(`${import.meta.env.BASE_URL}audio/${(content as any)[field]}`);\n                        await audio.play();\n                        break; // Only play first available audio\n                      } catch (err) {\n                        console.warn(`Failed to auto-play ${field} on reveal:`, err);\n                      }\n                    }\n                  }\n                }\n              }}\n              disabled={showFeedback}\n              className={styles['practice-session__flashcard-reveal-btn']}\n            >\n              Ergebnis anzeigen\n            </button>\n          ) : (\n            <>\n              <div className={styles['practice-session__flashcard-divider']} />\n\n              {/* Language indicator for back */}\n              <div className={styles['practice-session__flashcard-lang']}>\n                {content.backLanguage === 'de' ? 'Deutsch' : content.backLanguage === 'es' ? 'Español' : 'English'}\n              </div>\n\n              {/* Answer */}\n              <div className={styles['practice-session__flashcard-back']}>\n                <div>{content.back}</div>\n                {audioConfig?.buttons?.back?.show && (content as any)[audioConfig.buttons.back.field] && (\n                  <AudioButton\n                    text={content.back}\n                    audioUrl={`${import.meta.env.BASE_URL}audio/${(content as any)[audioConfig.buttons.back.field]}`}\n                    size=\"large\"\n                  />\n                )}\n              </div>\n            </>\n          )}\n        </div>\n\n        {/* Self-assessment buttons - only shown after reveal */}\n        {flashcardRevealed && !showFeedback && (\n          <div className={styles['practice-session__flashcard-assessment']}>\n            <button\n              onClick={() => {\n                setFlashcardKnown(false);\n                handleAnswerSubmit(false);\n                // Auto-advance to next task after brief delay\n                setTimeout(() => {\n                  handleNextTask();\n                }, 300);\n              }}\n              className={`${styles['practice-session__flashcard-btn']} ${styles['practice-session__flashcard-btn--unknown']}`}\n            >\n              <span className={styles['practice-session__flashcard-icon']}>✗</span>\n              <span>Nicht gewusst</span>\n            </button>\n\n            <button\n              onClick={() => {\n                setFlashcardKnown(true);\n                handleAnswerSubmit(true);\n                // Auto-advance to next task after brief delay\n                setTimeout(() => {\n                  handleNextTask();\n                }, 300);\n              }}\n              className={`${styles['practice-session__flashcard-btn']} ${styles['practice-session__flashcard-btn--known']}`}\n            >\n              <span className={styles['practice-session__flashcard-icon']}>✓</span>\n              <span>Gewusst</span>\n            </button>\n          </div>\n        )}\n\n        {/* Explanation after answer */}\n        {showFeedback && content.explanation && (\n          <div className={styles['practice-session__flashcard-explanation']}>\n            <strong>Hinweis:</strong> {content.explanation}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderTextInput() {\n    if (!currentTask || currentTask.type !== 'text-input') return null;\n    const content = currentTask.content as any;\n\n    const correctAnswerAudioUrl = (content.correctAnswerAudio)\n      ? `${import.meta.env.BASE_URL}audio/${content.correctAnswerAudio}`\n      : currentTask.audioUrl;\n\n    return (\n      <div className={styles['practice-session__text-input-container']}>\n        <div className={styles['practice-session__text-input-wrapper']}>\n          <Input\n            value={textInputAnswer}\n            onChange={(e) => setTextInputAnswer(e.target.value)}\n            disabled={showFeedback}\n            placeholder=\"Deine Antwort...\"\n            error={showFeedback && !isCorrect}\n            success={showFeedback && isCorrect}\n            fullWidth\n            className={styles['practice-session__text-input']}\n          />\n\n          {showFeedback && !isCorrect && (\n            <div className={styles['practice-session__text-input-feedback']}>\n              <div>\n                <strong>Richtige Antwort:</strong> {content.correctAnswer}\n              </div>\n              {correctAnswerAudioUrl && <AudioButton text={content.correctAnswer} audioUrl={correctAnswerAudioUrl} size=\"small\" />}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  if (!session || !currentTask) {\n    return (\n      <div className={styles['practice-session__loading']}>\n        <p>Wird geladen...</p>\n      </div>\n    );\n  }\n\n  const progress = ((currentTaskIndex + 1) / session.execution.taskIds.length) * 100;\n  const questionHint = (currentTask.content as any)?.hint as string | undefined;\n\n  // Helper functions - defined after all hooks to avoid hook order violations\n  async function initializeSession() {\n    const sessionService = new PracticeSessionService(\n      getPracticeSessionRepository(),\n      getTaskRepository(),\n      getSpacedRepetitionRepository()\n    );\n\n    const newSession = await sessionService.createSession({\n      topicId,\n      learningPathIds,\n      targetCount,\n      includeReview,\n    });\n\n    setSession(newSession);\n  }\n\n  async function loadCurrentTask() {\n    if (!session || currentTaskIndex >= session.execution.taskIds.length) return;\n\n    const taskId = session.execution.taskIds[currentTaskIndex];\n    if (!taskId) return;\n\n    const task = await db.tasks.get(taskId);\n    if (!task) return;\n\n    setCurrentTask(task);\n    setStartTime(Date.now());\n\n    // Load audio configuration from template\n    const config = await getAudioConfig(task.templateId);\n    setAudioConfig(config);\n\n    // NOTE: Auto-play is handled in feedback section after user answers\n    // This prevents revealing the correct answer before the user responds\n\n    // Preload next task audio for better UX\n    const nextTaskIndex = currentTaskIndex + 1;\n    if (nextTaskIndex < session.execution.taskIds.length) {\n      const nextTaskId = session.execution.taskIds[nextTaskIndex];\n      if (nextTaskId) {\n        db.tasks.get(nextTaskId).then((nextTask) => {\n          if (nextTask && nextTask.audioUrl) {\n            preloadNext(nextTask);\n          }\n        }).catch((error) => {\n          console.warn('Failed to preload next task audio:', error);\n        });\n      }\n    }\n\n    // Reset all state\n    setSelectedAnswer(null);\n    setTrueFalseAnswer(null);\n    setBlankAnswers([]);\n    setOrderedItems([]);\n    setMatchingAnswers({});\n    setShuffledRightColumn([]);\n    setSelectedOptions(new Set());\n    setSliderValue(0);\n    setScrambleAnswer('');\n    setFlashcardRevealed(false);\n    setFlashcardKnown(null);\n    setTextInputAnswer('');\n    setOptionCursor(0);\n    setShowShortcutHelp(false);\n    setHintVisible(false);\n\n    // Type-specific initialization\n    if (task.type === 'multiple-choice') {\n      const content = task.content as any;\n      const originalOptions = [...content.options];\n      const originalCorrectAnswer = content.correctAnswer;\n\n      // Create array of indices and shuffle\n      const indices = originalOptions.map((_: any, i: number) => i);\n      for (let i = indices.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [indices[i]!, indices[j]!] = [indices[j]!, indices[i]!];\n      }\n\n      // Apply shuffle to options and find new position of correct answer\n      const shuffled = indices.map(i => originalOptions[i]!);\n      // Find the position where the original correct answer ended up after shuffling\n      const newCorrectIndex = indices.findIndex(originalIndex => originalIndex === originalCorrectAnswer);\n\n      setShuffledOptions(shuffled);\n      setShuffledIndices(indices);\n      setCorrectAnswerIndex(newCorrectIndex);\n    } else if (task.type === 'cloze-deletion') {\n      const content = task.content as ClozeDeletionContent;\n      setBlankAnswers(new Array(content.blanks.length).fill(''));\n    } else if (task.type === 'ordering') {\n      const content = task.content as OrderingContent;\n      // Shuffle items for ordering task\n      const shuffled = [...content.items].sort(() => Math.random() - 0.5);\n      setOrderedItems(shuffled);\n    } else if (task.type === 'matching') {\n      const content = task.content as MatchingContent;\n      // Shuffle right column for matching\n      const indices = content.pairs.map((_, i) => i);\n      for (let i = indices.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [indices[i]!, indices[j]!] = [indices[j]!, indices[i]!];\n      }\n      setShuffledRightColumn(indices);\n      setMatchingAnswers({});\n    } else if (task.type === 'multiple-select') {\n      setSelectedOptions(new Set());\n    } else if (task.type === 'slider') {\n      const content = task.content as SliderContent;\n      setSliderValue(Math.floor((content.min + content.max) / 2)); // Start in middle\n    } else if (task.type === 'word-scramble') {\n      setScrambleAnswer('');\n    }\n  }\n\n  function handleSkipTask() {\n    if (!session) return;\n\n    setShowFeedback(false);\n    setSelectedAnswer(null);\n\n    if (currentTaskIndex < session.execution.taskIds.length - 1) {\n      setCurrentTaskIndex(currentTaskIndex + 1);\n    }\n  }\n\n  // Unlock auto-play on first user interaction with the practice session\n  const handlePracticeSessionClick = () => {\n    if (!playbackState.autoPlayUnlocked) {\n      unlockAutoPlay().catch(err => console.warn('Failed to unlock auto-play on click:', err));\n    }\n  };\n\n  return (\n    <div className={styles['practice-session']} onClick={handlePracticeSessionClick}>\n      {/* Header - compact */}\n      <div className={styles['practice-session__header']}>\n        <div className={styles['practice-session__header-top']}>\n          <div className={styles['practice-session__header-left']}>\n            <h2 className={styles['practice-session__title']}>Übungssitzung</h2>\n            <span className={styles['practice-session__task-counter']}>\n              {currentTaskIndex + 1}/{session.execution.taskIds.length}\n            </span>\n            <span className={styles['practice-session__task-id']}>\n              ID: {currentTask.id}\n            </span>\n          </div>\n          <button\n            onClick={onCancel}\n            className={styles['practice-session__cancel-btn']}\n          >\n            Abbrechen\n          </button>\n        </div>\n\n        {/* Progress bar */}\n        <div className={styles['practice-session__progress-bar']}>\n          <div\n            className={styles['practice-session__progress-fill']}\n            style={{ width: `${progress}%` }}\n          />\n        </div>\n      </div>\n\n      {/* Question - main content area */}\n      <div className={styles['practice-session__question-area']}>\n        {(currentTask.type === 'multiple-choice' ||\n          currentTask.type === 'ordering' ||\n          currentTask.type === 'matching' ||\n          currentTask.type === 'multiple-select' ||\n          currentTask.type === 'slider' ||\n          currentTask.type === 'word-scramble' ||\n          currentTask.type === 'text-input') && (\n          <div className={styles['practice-session__question-header']}>\n            <h3 className={styles['practice-session__question-text']}>\n              {(currentTask.content as any).question}\n            </h3>\n            {audioConfig?.buttons?.question?.show && (currentTask.content as any)[audioConfig.buttons.question.field] && (\n              <AudioButton\n                text={(currentTask.content as any).question}\n                audioUrl={`${import.meta.env.BASE_URL}audio/${(currentTask.content as any)[audioConfig.buttons.question.field]}`}\n                size=\"small\"\n              />\n            )}\n          </div>\n        )}\n\n        {questionHint && !showFeedback && (\n          <div className={styles['practice-session__hint-controls']}>\n            <button\n              type=\"button\"\n              className={styles['practice-session__hint-button']}\n              onClick={() => setHintVisible((prev) => !prev)}\n            >\n              {hintVisible ? 'Hinweis verbergen' : 'Hinweis anzeigen'} (H)\n            </button>\n          </div>\n        )}\n\n        {questionHint && hintVisible && !showFeedback && (\n          <div className={styles['practice-session__hint']}>\n            💡 <strong>Hinweis:</strong> {questionHint}\n          </div>\n        )}\n\n        {renderTaskContent()}\n      </div>\n\n      {/* Feedback - compact */}\n      {showFeedback && (\n        <div className={styles['practice-session__feedback']}>\n          <FeedbackCard\n            variant={isCorrect ? 'success' : 'error'}\n            title={isCorrect ? 'Richtig!' : 'Nicht ganz richtig'}\n          >\n            {currentTask.content.explanation && (\n              <p style={{ margin: 0 }}>{currentTask.content.explanation}</p>\n            )}\n            {/* Audio button in feedback for language learning */}\n            {currentTask.audioUrl && currentTask.type === 'multiple-choice' && (\n              <div style={{ marginTop: '0.75rem', display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\n                <span style={{ fontSize: '0.875rem', color: 'var(--color-text-secondary)' }}>\n                  Aussprache:\n                </span>\n                <AudioButton\n                  text={(currentTask.content as any).options[(currentTask.content as any).correctAnswer]}\n                  audioUrl={currentTask.audioUrl}\n                  size=\"small\"\n                />\n              </div>\n            )}\n          </FeedbackCard>\n        </div>\n      )}\n\n      {/* Actions and Statistics - combined footer */}\n      <div className={styles['practice-session__footer']}>\n        {/* Action buttons */}\n        <div className={styles['practice-session__actions']}>\n          {!showFeedback ? (\n            <>\n              {/* Hide \"Antwort überprüfen\" for flashcards - they use self-assessment */}\n              {currentTask?.type !== 'flashcard' && (\n                <button\n                  onClick={() => handleAnswerSubmit()}\n                  disabled={!canSubmit()}\n                  className={canSubmit()\n                    ? `${styles['practice-session__btn-submit']} ${styles['practice-session__btn-submit--enabled']}`\n                    : `${styles['practice-session__btn-submit']} ${styles['practice-session__btn-submit--disabled']}`}\n                >\n                  Antwort überprüfen\n                </button>\n              )}\n              <button\n                onClick={currentTaskIndex < session.execution.taskIds.length - 1 ? handleSkipTask : handleComplete}\n                className={styles['practice-session__btn-skip']}\n              >\n                {currentTaskIndex < session.execution.taskIds.length - 1\n                  ? 'Überspringen →'\n                  : 'Sitzung beenden'}\n              </button>\n            </>\n          ) : (\n            /* Hide \"Nächste Aufgabe\" for flashcards - they auto-advance */\n            currentTask?.type !== 'flashcard' && (\n              <button\n                onClick={handleNextTask}\n                className={styles['practice-session__btn-next']}\n              >\n              {currentTaskIndex < session.execution.taskIds.length - 1\n                ? 'Nächste Aufgabe →'\n                : 'Sitzung beenden'}\n              </button>\n            )\n          )}\n        </div>\n\n        {/* Compact statistics */}\n        <div className={styles['practice-session__stats']}>\n          <div className={styles['practice-session__stat']}>\n            <div className={`${styles['practice-session__stat-value']} ${styles['practice-session__stat-value--completed']}`}>\n              {session.execution.completedCount}\n            </div>\n            <div className={styles['practice-session__stat-label']}>\n              beantwortet\n            </div>\n          </div>\n          <div className={styles['practice-session__stat']}>\n            <div className={`${styles['practice-session__stat-value']} ${styles['practice-session__stat-value--correct']}`}>\n              {session.execution.correctCount}\n            </div>\n            <div className={styles['practice-session__stat-label']}>\n              richtig\n            </div>\n          </div>\n          <div className={styles['practice-session__stat']}>\n            <div className={`${styles['practice-session__stat-value']} ${styles['practice-session__stat-value--accuracy']}`}>\n              {session.execution.completedCount > 0\n                ? Math.round((session.execution.correctCount / session.execution.completedCount) * 100)\n                : 0}%\n            </div>\n            <div className={styles['practice-session__stat-label']}>\n              genau\n            </div>\n          </div>\n      </div>\n    </div>\n\n      {showShortcutHelp && (\n        <div\n          className={styles['practice-session__shortcuts-overlay']}\n          role=\"dialog\"\n          aria-modal=\"true\"\n          aria-labelledby=\"practice-shortcuts-title\"\n        >\n          <div className={styles['practice-session__shortcuts-content']}>\n            <h2 id=\"practice-shortcuts-title\">Tastaturkürzel</h2>\n            <div className={styles['practice-session__shortcuts-groups']}>\n              <div>\n                <div className={styles['practice-session__shortcuts-group-title']}>Navigation</div>\n                <ul className={styles['practice-session__shortcuts-list']}>\n                  <li className={styles['practice-session__shortcut-item']}>\n                    <span>Escape</span>\n                    <span className={styles['practice-session__shortcut-keys']}>Esc</span>\n                  </li>\n                  <li className={styles['practice-session__shortcut-item']}>\n                    <span>Zur nächsten/vorherigen Option</span>\n                    <span className={styles['practice-session__shortcut-keys']}>← ↑ → ↓</span>\n                  </li>\n                  <li className={styles['practice-session__shortcut-item']}>\n                    <span>Option wählen / Checkbox umschalten</span>\n                    <span className={styles['practice-session__shortcut-keys']}>Leertaste</span>\n                  </li>\n                  <li className={styles['practice-session__shortcut-item']}>\n                    <span>Option direkt wählen</span>\n                    <span className={styles['practice-session__shortcut-keys']}>1–9</span>\n                  </li>\n                </ul>\n              </div>\n              <div>\n                <div className={styles['practice-session__shortcuts-group-title']}>Aktionen</div>\n                <ul className={styles['practice-session__shortcuts-list']}>\n                  <li className={styles['practice-session__shortcut-item']}>\n                    <span>Antwort überprüfen / weiter</span>\n                    <span className={styles['practice-session__shortcut-keys']}>Enter</span>\n                  </li>\n                  <li className={styles['practice-session__shortcut-item']}>\n                    <span>Frage erneut abspielen</span>\n                    <span className={styles['practice-session__shortcut-keys']}>R</span>\n                  </li>\n                  <li className={styles['practice-session__shortcut-item']}>\n                    <span>Hinweis anzeigen (falls vorhanden)</span>\n                    <span className={styles['practice-session__shortcut-keys']}>H</span>\n                  </li>\n                  <li className={styles['practice-session__shortcut-item']}>\n                    <span>Hilfe umschalten</span>\n                    <span className={styles['practice-session__shortcut-keys']}>?</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className={styles['practice-session__shortcuts-close']}>\n              <button type=\"button\" onClick={() => setShowShortcutHelp(false)}>\n                Schließen (Esc)\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Card } from './Card';\nimport { colors } from '@ui/design-tokens';\nimport styles from './StatCard.module.css';\n\nexport interface StatCardProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * The stat label/title\n   */\n  title: string;\n\n  /**\n   * The main value to display\n   */\n  value: string | number;\n\n  /**\n   * Optional subtitle/context below the value\n   */\n  subtitle?: string;\n\n  /**\n   * Accent color for visual distinction\n   * @default colors.primary[500]\n   */\n  color?: string;\n\n  /**\n   * Optional icon element\n   */\n  icon?: React.ReactNode;\n}\n\n/**\n * StatCard Component\n *\n * A specialized card for displaying statistical information on dashboards.\n * Features a title, prominent value, optional subtitle, and color accent.\n *\n * @example\n * ```tsx\n * <StatCard\n *   title=\"Total Sessions\"\n *   value=\"42\"\n *   subtitle=\"this week\"\n *   color=\"#3b82f6\"\n * />\n *\n * <StatCard\n *   title=\"Accuracy\"\n *   value=\"95%\"\n *   subtitle=\"12/13 correct\"\n *   color=\"#10b981\"\n *   icon={<CheckIcon />}\n * />\n * ```\n */\nexport function StatCard({\n  title,\n  value,\n  subtitle,\n  color = colors.primary[500],\n  icon,\n  className,\n  style,\n  ...props\n}: StatCardProps) {\n  return (\n    <Card\n      {...props}\n      padding=\"medium\"\n      shadow\n      border\n      style={{ borderLeft: `4px solid ${color}`, ...style }}\n      className={className}\n    >\n      <div className={styles['stat-card__container']}>\n        {/* Title and Icon Row */}\n        <div className={styles['stat-card__header']}>\n          <h3 className={styles['stat-card__title']}>\n            {title}\n          </h3>\n          {icon && (\n            <div className={styles['stat-card__icon']} style={{ color }}>\n              {icon}\n            </div>\n          )}\n        </div>\n\n        {/* Value */}\n        <div className={styles['stat-card__value']}>\n          {value}\n        </div>\n\n        {/* Subtitle */}\n        {subtitle && (\n          <div className={styles['stat-card__subtitle']}>\n            {subtitle}\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n}\n\n// ============================================================================\n// EXPORTS\n// ============================================================================\n\nexport default StatCard;\n","import React from 'react';\nimport clsx from 'clsx';\nimport styles from './Button.module.css';\n\nexport type ButtonVariant = 'primary' | 'secondary' | 'ghost' | 'danger';\nexport type ButtonSize = 'small' | 'medium' | 'large';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * Visual style variant of the button\n   * @default 'primary'\n   */\n  variant?: ButtonVariant;\n\n  /**\n   * Size of the button\n   * @default 'medium'\n   */\n  size?: ButtonSize;\n\n  /**\n   * Whether the button is in a loading state\n   * @default false\n   */\n  loading?: boolean;\n\n  /**\n   * Whether the button takes up the full width of its container\n   * @default false\n   */\n  fullWidth?: boolean;\n\n  /**\n   * Optional icon to display before the button text\n   */\n  startIcon?: React.ReactNode;\n\n  /**\n   * Optional icon to display after the button text\n   */\n  endIcon?: React.ReactNode;\n}\n\n/**\n * Button Component\n *\n * A reusable button component with multiple variants, sizes, and states.\n * Styled with CSS Modules for type-safe, scoped styling.\n *\n * @example\n * ```tsx\n * <Button variant=\"primary\" onClick={handleClick}>\n *   Click me\n * </Button>\n *\n * <Button variant=\"secondary\" size=\"small\" loading>\n *   Loading...\n * </Button>\n *\n * <Button variant=\"danger\" startIcon={<TrashIcon />}>\n *   Delete\n * </Button>\n * ```\n */\nexport function Button({\n  variant = 'primary',\n  size = 'medium',\n  loading = false,\n  fullWidth = false,\n  disabled = false,\n  startIcon,\n  endIcon,\n  children,\n  className,\n  ...props\n}: ButtonProps) {\n  return (\n    <button\n      {...props}\n      disabled={disabled || loading}\n      className={clsx(\n        styles.button,\n        styles[`button--${variant}`],\n        styles[`button--${size}`],\n        loading && styles['button--loading'],\n        fullWidth && styles['button--full-width'],\n        className\n      )}\n    >\n      {loading ? (\n        <>\n          <LoadingSpinner size={size} />\n          {children}\n        </>\n      ) : (\n        <>\n          {startIcon && <span className={styles.button__icon}>{startIcon}</span>}\n          {children}\n          {endIcon && <span className={styles.button__icon}>{endIcon}</span>}\n        </>\n      )}\n    </button>\n  );\n}\n\n// ============================================================================\n// LOADING SPINNER\n// ============================================================================\n\ninterface LoadingSpinnerProps {\n  size: ButtonSize;\n}\n\nfunction LoadingSpinner({ size }: LoadingSpinnerProps) {\n  const spinnerSize = size === 'small' ? '12px' : size === 'large' ? '18px' : '16px';\n\n  return (\n    <svg\n      width={spinnerSize}\n      height={spinnerSize}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={styles.button__spinner}\n    >\n      <circle\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeDasharray=\"31.4 31.4\"\n        opacity=\"0.25\"\n      />\n      <path\n        d=\"M12 2a10 10 0 0 1 10 10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n      />\n    </svg>\n  );\n}\n\n// ============================================================================\n// EXPORTS\n// ============================================================================\n\nexport default Button;\n","import type { PracticeSession } from '@core/types/services';\nimport { StatCard } from './common/StatCard';\nimport { Button } from './common/Button';\nimport { Card } from './common/Card';\nimport styles from './session-results.module.css';\n\ninterface Props {\n  session: PracticeSession;\n  onClose: () => void;\n  onStartNew: () => void;\n}\n\nexport function SessionResults({ session, onClose, onStartNew }: Props) {\n  const accuracy = session.results.accuracy;\n  const averageTime = Math.round(session.results.averageTime);\n\n  // Calculate performance rating\n  let performanceRating = '';\n  let performanceColor = '';\n  if (accuracy >= 90) {\n    performanceRating = 'Ausgezeichnet!';\n    performanceColor = 'var(--color-success)';\n  } else if (accuracy >= 75) {\n    performanceRating = 'Sehr gut!';\n    performanceColor = 'var(--color-primary)';\n  } else if (accuracy >= 60) {\n    performanceRating = 'Gut gemacht!';\n    performanceColor = 'var(--color-warning)';\n  } else {\n    performanceRating = 'Weiter üben!';\n    performanceColor = 'var(--color-error)';\n  }\n\n  // Format time\n  function formatTime(seconds: number): string {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    if (mins > 0) {\n      return `${mins}:${secs.toString().padStart(2, '0')} min`;\n    }\n    return `${secs} sek`;\n  }\n\n  return (\n    <div className={styles['session-results']}>\n      {/* Header */}\n      <div className={styles['session-results__header']}>\n        <div className={styles['session-results__emoji']}>🎉</div>\n        <h1 className={styles['session-results__title']}>Sitzung abgeschlossen!</h1>\n        <p\n          className={styles['session-results__rating']}\n          style={{ color: performanceColor }}\n        >\n          {performanceRating}\n        </p>\n      </div>\n\n      {/* Statistics Cards */}\n      <div className={styles['session-results__stats']}>\n        <StatCard\n          title=\"Aufgaben bearbeitet\"\n          value={session.execution.completedCount}\n          color=\"var(--color-primary)\"\n        />\n\n        <StatCard\n          title=\"Richtige Antworten\"\n          value={session.execution.correctCount}\n          color=\"var(--color-success)\"\n        />\n\n        <StatCard\n          title=\"Genauigkeit\"\n          value={`${Math.round(accuracy)}%`}\n          color={performanceColor}\n        />\n\n        <StatCard\n          title=\"Ø Zeit pro Aufgabe\"\n          value={formatTime(averageTime)}\n          color=\"var(--color-warning)\"\n        />\n      </div>\n\n      {/* Total Time */}\n      <Card\n        padding=\"medium\"\n        className={styles['session-results__time-card']}\n      >\n        <p className={styles['session-results__time-text']}>\n          <strong>Gesamtzeit:</strong> {formatTime(session.execution.totalTimeSpent)}\n        </p>\n      </Card>\n\n      {/* Progress Message */}\n      <Card padding=\"large\" className={styles['session-results__progress-card']}>\n        <h3 className={styles['session-results__progress-title']}>📈 Dein Fortschritt</h3>\n        <p className={styles['session-results__progress-text']}>\n          {accuracy >= 90 && 'Hervorragende Leistung! Du beherrschst dieses Thema sehr gut.'}\n          {accuracy >= 75 && accuracy < 90 && 'Sehr gute Arbeit! Du machst große Fortschritte.'}\n          {accuracy >= 60 && accuracy < 75 && 'Gute Arbeit! Weiter so, du verbesserst dich stetig.'}\n          {accuracy < 60 &&\n            'Bleib dran! Übung macht den Meister. Die nächste Sitzung wird noch besser!'}\n        </p>\n      </Card>\n\n      {/* Actions */}\n      <div className={styles['session-results__actions']}>\n        <Button onClick={onStartNew} variant=\"primary\">\n          Neue Sitzung starten\n        </Button>\n        <Button onClick={onClose} variant=\"secondary\">\n          Zurück zur Übersicht\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import styles from './MasteryBar.module.css';\n\nexport interface MasteryBarProps {\n  /**\n   * Label displayed above the progress bar\n   */\n  label: string;\n\n  /**\n   * Count value displayed\n   */\n  count: number;\n\n  /**\n   * Color of the progress bar\n   */\n  color: string;\n\n  /**\n   * Maximum count for calculating percentage\n   * If not provided, bar shows as full when count > 0\n   */\n  max?: number;\n}\n\n/**\n * Mastery Bar Component\n *\n * Displays a labeled progress indicator for mastery levels.\n * Used in the dashboard to show progress across different mastery categories.\n *\n * @example\n * ```tsx\n * <MasteryBar\n *   label=\"Gemeistert\"\n *   count={12}\n *   max={50}\n *   color={colors.success[500]}\n * />\n * ```\n */\nexport function MasteryBar({ label, count, color, max }: MasteryBarProps) {\n  const percentage = max && max > 0 ? (count / max) * 100 : count > 0 ? 100 : 0;\n\n  return (\n    <div className={styles['mastery-bar']}>\n      <div className={styles['mastery-bar__header']}>\n        <span className={styles['mastery-bar__label']}>\n          {label}\n        </span>\n        <span className={styles['mastery-bar__count']}>\n          {count}\n        </span>\n      </div>\n      <div className={styles['mastery-bar__track']}>\n        <div\n          className={styles['mastery-bar__fill']}\n          style={{\n            background: color,\n            width: `${percentage}%`,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MasteryBar;\n","import { useEffect, useState } from 'react';\nimport { db } from '@storage/database';\nimport type { PracticeSession } from '@core/types/services';\nimport { StatCard } from './common/StatCard';\nimport { Card } from './common/Card';\nimport { Button } from './common/Button';\nimport { MasteryBar } from './common/MasteryBar';\nimport { colors } from '@ui/design-tokens';\nimport styles from './dashboard.module.css';\n\ninterface DashboardStats {\n  totalSessions: number;\n  completedSessions: number;\n  totalQuestions: number;\n  correctAnswers: number;\n  accuracyRate: number;\n  averageSessionTime: number;\n  currentStreak: number;\n  totalStudyTime: number;\n  topicProgress: Array<{\n    topicId: string;\n    topicName: string;\n    sessionsCompleted: number;\n    accuracy: number;\n    tasksReviewed: number;\n  }>;\n  recentSessions: PracticeSession[];\n  upcomingReviews: number;\n  masteryLevels: {\n    mastered: number;\n    learning: number;\n    new: number;\n  };\n}\n\ninterface DashboardProps {\n  onClose: () => void;\n}\n\nexport function Dashboard({ onClose }: DashboardProps) {\n  const [stats, setStats] = useState<DashboardStats | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadDashboardStats();\n  }, []);\n\n  async function loadDashboardStats() {\n    try {\n      // Load all sessions\n      const allSessions = await db.practiceSessions.toArray();\n      const completedSessions = allSessions.filter((s) => s.execution.status === 'completed');\n\n      // Load topics for names\n      const topics = await db.topics.toArray();\n      const topicMap = new Map(topics.map((t) => [t.id, t]));\n\n      // Load spaced repetition items for mastery levels\n      const srItems = await db.spacedRepetition.toArray();\n\n      // Calculate overall stats\n      const totalQuestions = completedSessions.reduce(\n        (sum, s) => sum + (s.execution?.completedCount || 0),\n        0\n      );\n      const correctAnswers = completedSessions.reduce(\n        (sum, s) => sum + (s.execution?.correctCount || 0),\n        0\n      );\n      const accuracyRate = totalQuestions > 0 ? (correctAnswers / totalQuestions) * 100 : 0;\n\n      const totalStudyTime = completedSessions.reduce((sum, s) => {\n        if (s.execution.startedAt && s.execution.completedAt) {\n          return (\n            sum +\n            (new Date(s.execution.completedAt).getTime() -\n              new Date(s.execution.startedAt).getTime()) /\n              1000\n          );\n        }\n        return sum;\n      }, 0);\n\n      const averageSessionTime =\n        completedSessions.length > 0 ? totalStudyTime / completedSessions.length : 0;\n\n      // Calculate topic progress\n      const topicStatsMap = new Map<\n        string,\n        { sessions: number; correct: number; total: number }\n      >();\n\n      for (const session of completedSessions) {\n        const topicId = session.configuration.topicId;\n        if (!topicStatsMap.has(topicId)) {\n          topicStatsMap.set(topicId, { sessions: 0, correct: 0, total: 0 });\n        }\n        const topicStats = topicStatsMap.get(topicId)!;\n        topicStats.sessions++;\n        topicStats.correct += session.execution?.correctCount || 0;\n        topicStats.total += session.execution?.completedCount || 0;\n      }\n\n      const topicProgress = Array.from(topicStatsMap.entries()).map(\n        ([topicId, data]) => ({\n          topicId,\n          topicName: topicMap.get(topicId)?.title || topicId,\n          sessionsCompleted: data.sessions,\n          accuracy: data.total > 0 ? (data.correct / data.total) * 100 : 0,\n          tasksReviewed: data.total,\n        })\n      );\n\n      // Calculate mastery levels\n      const now = new Date();\n      const mastered = srItems.filter((item) => item.algorithm.efactor >= 2.5).length;\n      const learning = srItems.filter(\n        (item) => item.algorithm.efactor < 2.5 && item.algorithm.repetition > 0\n      ).length;\n      const newItems = srItems.filter((item) => item.algorithm.repetition === 0).length;\n\n      // Upcoming reviews\n      const upcomingReviews = srItems.filter(\n        (item) => new Date(item.schedule.nextReview) <= now\n      ).length;\n\n      // Recent sessions (last 5)\n      const recentSessions = completedSessions\n        .sort((a, b) => {\n          const aTime = a.execution.completedAt\n            ? new Date(a.execution.completedAt).getTime()\n            : 0;\n          const bTime = b.execution.completedAt\n            ? new Date(b.execution.completedAt).getTime()\n            : 0;\n          return bTime - aTime;\n        })\n        .slice(0, 5);\n\n      setStats({\n        totalSessions: allSessions.length,\n        completedSessions: completedSessions.length,\n        totalQuestions,\n        correctAnswers,\n        accuracyRate,\n        averageSessionTime,\n        currentStreak: 0, // TODO: Calculate from session dates\n        totalStudyTime,\n        topicProgress,\n        recentSessions,\n        upcomingReviews,\n        masteryLevels: {\n          mastered,\n          learning,\n          new: newItems,\n        },\n      });\n    } catch (error) {\n      console.error('Failed to load dashboard stats:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function formatTime(seconds: number): string {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    }\n    return `${minutes}m`;\n  }\n\n  function formatDate(date: Date | string): string {\n    const d = typeof date === 'string' ? new Date(date) : date;\n    return d.toLocaleDateString('de-DE', { day: '2-digit', month: '2-digit', year: 'numeric' });\n  }\n\n  if (isLoading) {\n    return (\n      <div className={styles['dashboard__empty']} style={{ textAlign: 'center' }}>\n        <h1>📊 Dashboard</h1>\n        <p>Lade Statistiken...</p>\n      </div>\n    );\n  }\n\n  if (!stats) {\n    return (\n      <div className={styles['dashboard__empty']}>\n        <Button variant=\"secondary\" onClick={onClose} className={styles['dashboard__back-button']}>\n          ← Zurück\n        </Button>\n        <h1>📊 Dashboard</h1>\n        <p>Keine Daten verfügbar.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles['dashboard']}>\n      {/* Header */}\n      <div className={styles['dashboard__header']}>\n        <Button variant=\"secondary\" onClick={onClose} className={styles['dashboard__back-button']}>\n          ← Zurück\n        </Button>\n        <h1 className={styles['dashboard__title']}>📊 Lern-Dashboard</h1>\n        <p className={styles['dashboard__subtitle']}>\n          Deine Fortschritte und Statistiken im Überblick\n        </p>\n      </div>\n\n      {/* Key Metrics */}\n      <div className={styles['dashboard__metrics']}>\n        <StatCard\n          title=\"Gesamt Sitzungen\"\n          value={stats.completedSessions.toString()}\n          subtitle={`von ${stats.totalSessions} gestartet`}\n          color={colors.primary[500]}\n        />\n        <StatCard\n          title=\"Genauigkeit\"\n          value={`${Math.round(stats.accuracyRate)}%`}\n          subtitle={`${stats.correctAnswers}/${stats.totalQuestions} richtig`}\n          color={colors.success[500]}\n        />\n        <StatCard\n          title=\"Lernzeit\"\n          value={formatTime(stats.totalStudyTime)}\n          subtitle={`Ø ${formatTime(stats.averageSessionTime)} pro Sitzung`}\n          color={colors.warning[500]}\n        />\n        <StatCard\n          title=\"Anstehende Wiederholungen\"\n          value={stats.upcomingReviews.toString()}\n          subtitle=\"bereit zum Üben\"\n          color={colors.info[500]}\n        />\n      </div>\n\n      {/* Mastery Levels */}\n      <Card padding=\"medium\" className={styles['dashboard__mastery-card']}>\n        <h2 className={styles['dashboard__mastery-title']}>🎯 Beherrschungsniveau</h2>\n        <div className={styles['dashboard__mastery-bars']}>\n          <MasteryBar\n            label=\"Gemeistert\"\n            count={stats.masteryLevels.mastered}\n            color={colors.success[500]}\n          />\n          <MasteryBar\n            label=\"In Arbeit\"\n            count={stats.masteryLevels.learning}\n            color={colors.warning[500]}\n          />\n          <MasteryBar label=\"Neu\" count={stats.masteryLevels.new} color={colors.primary[500]} />\n        </div>\n      </Card>\n\n      {/* Topic Progress */}\n      {stats.topicProgress.length > 0 && (\n        <Card padding=\"medium\" className={styles['dashboard__topic-card']}>\n          <h2 className={styles['dashboard__topic-title']}>📚 Fortschritt nach Thema</h2>\n          <div className={styles['dashboard__topic-grid']}>\n            {stats.topicProgress.map((topic) => (\n              <div key={topic.topicId} className={styles['dashboard__topic-item']}>\n                <div className={styles['dashboard__topic-header']}>\n                  <span className={styles['dashboard__topic-name']}>\n                    {topic.topicName}\n                  </span>\n                  <span className={styles['dashboard__topic-meta']}>\n                    {topic.sessionsCompleted} Sitzungen • {Math.round(topic.accuracy)}% genau\n                  </span>\n                </div>\n                <div className={styles['dashboard__topic-bar-container']}>\n                  <div\n                    className={styles['dashboard__topic-bar-fill']}\n                    style={{\n                      background:\n                        topic.accuracy >= 75\n                          ? colors.success[500]\n                          : topic.accuracy >= 50\n                          ? colors.warning[500]\n                          : colors.error[500],\n                      width: `${topic.accuracy}%`,\n                    }}\n                  />\n                </div>\n                <div className={styles['dashboard__topic-stats']}>\n                  {topic.tasksReviewed} Aufgaben bearbeitet\n                </div>\n              </div>\n            ))}\n          </div>\n        </Card>\n      )}\n\n      {/* Recent Sessions */}\n      {stats.recentSessions.length > 0 && (\n        <Card padding=\"medium\">\n          <h2 className={styles['dashboard__sessions-title']}>🕐 Letzte Sitzungen</h2>\n          <div className={styles['dashboard__sessions-list']}>\n            {stats.recentSessions.map((session) => (\n              <div\n                key={session.id}\n                className={styles['dashboard__session-item']}\n              >\n                <div className={styles['dashboard__session-left']}>\n                  <div className={styles['dashboard__session-topic']}>\n                    {session.configuration.topicId}\n                  </div>\n                  <div className={styles['dashboard__session-date']}>\n                    {session.execution.completedAt && formatDate(session.execution.completedAt)}\n                  </div>\n                </div>\n                <div className={styles['dashboard__session-right']}>\n                  <div\n                    className={styles['dashboard__session-accuracy']}\n                    style={{\n                      color:\n                        session.results.accuracy >= 75\n                          ? colors.success[500]\n                          : colors.warning[500],\n                    }}\n                  >\n                    {Math.round(session.results.accuracy)}%\n                  </div>\n                  <div className={styles['dashboard__session-stats']}>\n                    {session.execution.correctCount}/{session.execution.completedCount}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n}","import React from 'react';\n\n/**\n * Topic data for display in card\n */\nexport interface TopicCardTopic {\n  id: string;\n  name: string;\n  description: string;\n  icon?: string;\n  color?: string;\n}\n\nexport interface TopicCardProps {\n  topic: TopicCardTopic;\n  onSelect: (topicId: string) => void;\n  className?: string;\n  disabled?: boolean;\n  'data-testid'?: string;\n}\n\nexport const TopicCard: React.FC<TopicCardProps> = ({\n  topic,\n  onSelect,\n  className,\n  disabled = false,\n  'data-testid': dataTestId\n}) => {\n  const [isHovered, setIsHovered] = React.useState(false);\n\n  const cardStyle: React.CSSProperties = {\n    padding: '2rem',\n    background: 'var(--color-bg-secondary)',\n    borderRadius: '12px',\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    transition: 'transform 0.2s, box-shadow 0.2s',\n    border: '2px solid transparent',\n    borderColor: isHovered ? 'var(--color-primary)' : 'transparent',\n    transform: isHovered && !disabled ? 'translateY(-4px)' : 'translateY(0)',\n    boxShadow: isHovered && !disabled ? 'var(--shadow-lg)' : 'none',\n    opacity: disabled ? 0.5 : 1,\n  };\n\n  // Generate accessible label following German pattern\n  const ariaLabel = `Thema ${topic.name} öffnen - ${topic.description}`;\n\n  return (\n    <button\n      type=\"button\"\n      onClick={() => onSelect(topic.id)}\n      className={className}\n      data-testid={dataTestId}\n      style={cardStyle}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      disabled={disabled}\n      aria-label={ariaLabel}\n    >\n      {topic.icon && (\n        <span aria-hidden=\"true\" style={{ fontSize: '48px', display: 'block', marginBottom: '16px' }}>\n          {topic.icon}\n        </span>\n      )}\n      <h3 style={{ fontSize: '20px', fontWeight: 600, marginBottom: '8px', color: 'var(--color-text-primary)' }}>\n        {topic.name}\n      </h3>\n      <p style={{ fontSize: '14px', color: 'var(--color-text-secondary)', lineHeight: 1.5, margin: 0 }}>\n        {topic.description}\n      </p>\n    </button>\n  );\n};\n","/**\n * Application Settings Domain Model\n *\n * Centralises user preferences across the learning platform.\n */\n\nexport type ThemeMode = 'light' | 'dark' | 'system';\nexport type FontScale = 'small' | 'medium' | 'large' | 'x-large';\n\nexport interface ThemeSettings {\n  mode: ThemeMode;\n  fontScale: FontScale;\n  animationsEnabled: boolean;\n  reducedMotion: boolean;\n}\n\nexport interface AudioPreferences {\n  autoPlayEnabled: boolean;\n  autoPlayRepeats: 1 | 2 | 3;\n  autoPlayDelayMs: number;\n  soundEffectsEnabled: boolean;\n  soundEffectsVolume: number;\n  successChimeEnabled: boolean;\n  playbackRate: 0.5 | 0.75 | 1 | 1.25 | 1.5;\n}\n\nexport type LearningAlgorithm = 'sm-2' | 'fsrs' | 'neural';\n\nexport interface LearningPreferences {\n  algorithm: LearningAlgorithm;\n  dailyGoal: number;\n  sessionSize: number;\n  repeatDifficultTasks: boolean;\n  randomizeOrder: boolean;\n}\n\nexport interface NotificationPreferences {\n  dailyReminderEnabled: boolean;\n  dailyReminderTime: string;\n  dailyReminderMessage: string;\n  streakWarningEnabled: boolean;\n  weeklyReportEnabled: boolean;\n}\n\nexport type ConfettiStyle = 'standard' | 'firework' | 'emoji';\nexport type ConfettiIntensity = 'light' | 'medium' | 'strong';\n\nexport interface InteractionPreferences {\n  vibrationsEnabled: boolean;\n  vibrationOnCorrect: boolean;\n  vibrationOnIncorrect: boolean;\n  vibrationOnSessionComplete: boolean;\n  confettiEnabled: boolean;\n  confettiStyle: ConfettiStyle;\n  confettiIntensity: ConfettiIntensity;\n  wakeLockEnabled: boolean;\n  keyboardShortcutsEnabled: boolean;\n}\n\nexport type AIDepth = 'short' | 'medium' | 'detailed';\n\nexport interface AISettings {\n  explanationsEnabled: boolean;\n  explanationDepth: AIDepth;\n  includeExamples: boolean;\n  showLearningTips: boolean;\n  trainingOptIn: boolean;\n  dailyUsageLimit: number;\n  usageToday: number;\n}\n\nexport type DataStorageMode = 'local' | 'cloud';\n\nexport interface PrivacySettings {\n  dataStorageMode: DataStorageMode;\n  analyticsEnabled: boolean;\n  errorReportsEnabled: boolean;\n  betaFeaturesEnabled: boolean;\n}\n\nexport type InterfaceLanguage = 'de' | 'en' | 'es';\nexport type DateFormat = 'DD.MM.YYYY' | 'MM/DD/YYYY' | 'YYYY-MM-DD';\n\nexport interface LanguageSettings {\n  interfaceLanguage: InterfaceLanguage;\n  timezone: string;\n  dateFormat: DateFormat;\n}\n\nexport interface DatabaseMetadata {\n  lastUpdatedAt: string | null;\n  storageUsageBytes: number | null;\n}\n\nexport interface AppSettings {\n  version: number;\n  theme: ThemeSettings;\n  audio: AudioPreferences;\n  learning: LearningPreferences;\n  notifications: NotificationPreferences;\n  interaction: InteractionPreferences;\n  ai: AISettings;\n  privacy: PrivacySettings;\n  language: LanguageSettings;\n  database: DatabaseMetadata;\n  lastSavedAt: string | null;\n}\n\nfunction resolveTimezone(): string {\n  try {\n    return Intl.DateTimeFormat().resolvedOptions().timeZone ?? 'Europe/Berlin';\n  } catch {\n    return 'Europe/Berlin';\n  }\n}\n\nexport const DEFAULT_APP_SETTINGS: AppSettings = {\n  version: 1,\n  theme: {\n    mode: 'system',\n    fontScale: 'medium',\n    animationsEnabled: true,\n    reducedMotion: false,\n  },\n  audio: {\n    autoPlayEnabled: true,\n    autoPlayRepeats: 1,\n    autoPlayDelayMs: 1000,\n    soundEffectsEnabled: true,\n    soundEffectsVolume: 0.8,\n    successChimeEnabled: true,\n    playbackRate: 1,\n  },\n  learning: {\n    algorithm: 'fsrs',\n    dailyGoal: 20,\n    sessionSize: 10,\n    repeatDifficultTasks: true,\n    randomizeOrder: true,\n  },\n  notifications: {\n    dailyReminderEnabled: false,\n    dailyReminderTime: '18:00',\n    dailyReminderMessage: 'Zeit zum Lernen! 📚',\n    streakWarningEnabled: true,\n    weeklyReportEnabled: false,\n  },\n  interaction: {\n    vibrationsEnabled: true,\n    vibrationOnCorrect: true,\n    vibrationOnIncorrect: true,\n    vibrationOnSessionComplete: false,\n    confettiEnabled: true,\n    confettiStyle: 'standard',\n    confettiIntensity: 'medium',\n    wakeLockEnabled: true,\n    keyboardShortcutsEnabled: true,\n  },\n  ai: {\n    explanationsEnabled: false,\n    explanationDepth: 'medium',\n    includeExamples: true,\n    showLearningTips: true,\n    trainingOptIn: false,\n    dailyUsageLimit: 20,\n    usageToday: 0,\n  },\n  privacy: {\n    dataStorageMode: 'local',\n    analyticsEnabled: false,\n    errorReportsEnabled: false,\n    betaFeaturesEnabled: false,\n  },\n  language: {\n    interfaceLanguage: 'de',\n    timezone: resolveTimezone(),\n    dateFormat: 'DD.MM.YYYY',\n  },\n  database: {\n    lastUpdatedAt: null,\n    storageUsageBytes: null,\n  },\n  lastSavedAt: null,\n};\n\nfunction clamp(value: number, min: number, max: number): number {\n  if (Number.isNaN(value)) return min;\n  return Math.min(max, Math.max(min, value));\n}\n\nfunction isThemeMode(value: unknown): value is ThemeMode {\n  return value === 'light' || value === 'dark' || value === 'system';\n}\n\nfunction isFontScale(value: unknown): value is FontScale {\n  return value === 'small' || value === 'medium' || value === 'large' || value === 'x-large';\n}\n\nfunction isPlaybackRate(value: unknown): value is AudioPreferences['playbackRate'] {\n  return value === 0.5 || value === 0.75 || value === 1 || value === 1.25 || value === 1.5;\n}\n\nfunction isLearningAlgorithm(value: unknown): value is LearningAlgorithm {\n  return value === 'sm-2' || value === 'fsrs' || value === 'neural';\n}\n\nfunction isConfettiStyle(value: unknown): value is ConfettiStyle {\n  return value === 'standard' || value === 'firework' || value === 'emoji';\n}\n\nfunction isConfettiIntensity(value: unknown): value is ConfettiIntensity {\n  return value === 'light' || value === 'medium' || value === 'strong';\n}\n\nfunction isAIDepth(value: unknown): value is AIDepth {\n  return value === 'short' || value === 'medium' || value === 'detailed';\n}\n\nfunction isDataStorageMode(value: unknown): value is DataStorageMode {\n  return value === 'local' || value === 'cloud';\n}\n\nfunction isInterfaceLanguage(value: unknown): value is InterfaceLanguage {\n  return value === 'de' || value === 'en' || value === 'es';\n}\n\nfunction isDateFormat(value: unknown): value is DateFormat {\n  return value === 'DD.MM.YYYY' || value === 'MM/DD/YYYY' || value === 'YYYY-MM-DD';\n}\n\nfunction sanitizeThemeSettings(raw: any): ThemeSettings {\n  return {\n    mode: isThemeMode(raw?.mode) ? raw.mode : DEFAULT_APP_SETTINGS.theme.mode,\n    fontScale: isFontScale(raw?.fontScale) ? raw.fontScale : DEFAULT_APP_SETTINGS.theme.fontScale,\n    animationsEnabled: Boolean(raw?.animationsEnabled ?? DEFAULT_APP_SETTINGS.theme.animationsEnabled),\n    reducedMotion: Boolean(raw?.reducedMotion ?? DEFAULT_APP_SETTINGS.theme.reducedMotion),\n  };\n}\n\nfunction sanitizeAudioPreferences(raw: any): AudioPreferences {\n  const repeats = raw?.autoPlayRepeats;\n  const repeatsValue: 1 | 2 | 3 = repeats === 2 || repeats === 3 ? repeats : 1;\n  const delay = clamp(Number(raw?.autoPlayDelayMs ?? DEFAULT_APP_SETTINGS.audio.autoPlayDelayMs), 0, 5000);\n  const volume = clamp(Number(raw?.soundEffectsVolume ?? DEFAULT_APP_SETTINGS.audio.soundEffectsVolume), 0, 1);\n  return {\n    autoPlayEnabled: Boolean(raw?.autoPlayEnabled ?? DEFAULT_APP_SETTINGS.audio.autoPlayEnabled),\n    autoPlayRepeats: repeatsValue,\n    autoPlayDelayMs: delay,\n    soundEffectsEnabled: Boolean(raw?.soundEffectsEnabled ?? DEFAULT_APP_SETTINGS.audio.soundEffectsEnabled),\n    soundEffectsVolume: volume,\n    successChimeEnabled: Boolean(raw?.successChimeEnabled ?? DEFAULT_APP_SETTINGS.audio.successChimeEnabled),\n    playbackRate: isPlaybackRate(raw?.playbackRate) ? raw.playbackRate : DEFAULT_APP_SETTINGS.audio.playbackRate,\n  };\n}\n\nfunction sanitizeLearningPreferences(raw: any): LearningPreferences {\n  const dailyGoal = clamp(Number(raw?.dailyGoal ?? DEFAULT_APP_SETTINGS.learning.dailyGoal), 1, 200);\n  const sessionSize = clamp(Number(raw?.sessionSize ?? DEFAULT_APP_SETTINGS.learning.sessionSize), 1, 100);\n  return {\n    algorithm: isLearningAlgorithm(raw?.algorithm) ? raw.algorithm : DEFAULT_APP_SETTINGS.learning.algorithm,\n    dailyGoal,\n    sessionSize,\n    repeatDifficultTasks: Boolean(raw?.repeatDifficultTasks ?? DEFAULT_APP_SETTINGS.learning.repeatDifficultTasks),\n    randomizeOrder: Boolean(raw?.randomizeOrder ?? DEFAULT_APP_SETTINGS.learning.randomizeOrder),\n  };\n}\n\nfunction sanitizeNotificationPreferences(raw: any): NotificationPreferences {\n  const time = typeof raw?.dailyReminderTime === 'string' && /^\\d{2}:\\d{2}$/.test(raw.dailyReminderTime)\n    ? raw.dailyReminderTime\n    : DEFAULT_APP_SETTINGS.notifications.dailyReminderTime;\n  const message = typeof raw?.dailyReminderMessage === 'string' && raw.dailyReminderMessage.length <= 120\n    ? raw.dailyReminderMessage\n    : DEFAULT_APP_SETTINGS.notifications.dailyReminderMessage;\n  return {\n    dailyReminderEnabled: Boolean(raw?.dailyReminderEnabled ?? DEFAULT_APP_SETTINGS.notifications.dailyReminderEnabled),\n    dailyReminderTime: time,\n    dailyReminderMessage: message,\n    streakWarningEnabled: Boolean(raw?.streakWarningEnabled ?? DEFAULT_APP_SETTINGS.notifications.streakWarningEnabled),\n    weeklyReportEnabled: Boolean(raw?.weeklyReportEnabled ?? DEFAULT_APP_SETTINGS.notifications.weeklyReportEnabled),\n  };\n}\n\nfunction sanitizeInteractionPreferences(raw: any): InteractionPreferences {\n  return {\n    vibrationsEnabled: Boolean(raw?.vibrationsEnabled ?? DEFAULT_APP_SETTINGS.interaction.vibrationsEnabled),\n    vibrationOnCorrect: Boolean(raw?.vibrationOnCorrect ?? DEFAULT_APP_SETTINGS.interaction.vibrationOnCorrect),\n    vibrationOnIncorrect: Boolean(raw?.vibrationOnIncorrect ?? DEFAULT_APP_SETTINGS.interaction.vibrationOnIncorrect),\n    vibrationOnSessionComplete: Boolean(raw?.vibrationOnSessionComplete ?? DEFAULT_APP_SETTINGS.interaction.vibrationOnSessionComplete),\n    confettiEnabled: Boolean(raw?.confettiEnabled ?? DEFAULT_APP_SETTINGS.interaction.confettiEnabled),\n    confettiStyle: isConfettiStyle(raw?.confettiStyle) ? raw.confettiStyle : DEFAULT_APP_SETTINGS.interaction.confettiStyle,\n    confettiIntensity: isConfettiIntensity(raw?.confettiIntensity) ? raw.confettiIntensity : DEFAULT_APP_SETTINGS.interaction.confettiIntensity,\n    wakeLockEnabled: Boolean(raw?.wakeLockEnabled ?? DEFAULT_APP_SETTINGS.interaction.wakeLockEnabled),\n    keyboardShortcutsEnabled: Boolean(raw?.keyboardShortcutsEnabled ?? DEFAULT_APP_SETTINGS.interaction.keyboardShortcutsEnabled),\n  };\n}\n\nfunction sanitizeAISettings(raw: any): AISettings {\n  const dailyUsageLimit = clamp(Number(raw?.dailyUsageLimit ?? DEFAULT_APP_SETTINGS.ai.dailyUsageLimit), 0, 9999);\n  const usageToday = clamp(Number(raw?.usageToday ?? DEFAULT_APP_SETTINGS.ai.usageToday), 0, dailyUsageLimit);\n  return {\n    explanationsEnabled: Boolean(raw?.explanationsEnabled ?? DEFAULT_APP_SETTINGS.ai.explanationsEnabled),\n    explanationDepth: isAIDepth(raw?.explanationDepth) ? raw.explanationDepth : DEFAULT_APP_SETTINGS.ai.explanationDepth,\n    includeExamples: Boolean(raw?.includeExamples ?? DEFAULT_APP_SETTINGS.ai.includeExamples),\n    showLearningTips: Boolean(raw?.showLearningTips ?? DEFAULT_APP_SETTINGS.ai.showLearningTips),\n    trainingOptIn: Boolean(raw?.trainingOptIn ?? DEFAULT_APP_SETTINGS.ai.trainingOptIn),\n    dailyUsageLimit,\n    usageToday,\n  };\n}\n\nfunction sanitizePrivacySettings(raw: any): PrivacySettings {\n  return {\n    dataStorageMode: isDataStorageMode(raw?.dataStorageMode) ? raw.dataStorageMode : DEFAULT_APP_SETTINGS.privacy.dataStorageMode,\n    analyticsEnabled: Boolean(raw?.analyticsEnabled ?? DEFAULT_APP_SETTINGS.privacy.analyticsEnabled),\n    errorReportsEnabled: Boolean(raw?.errorReportsEnabled ?? DEFAULT_APP_SETTINGS.privacy.errorReportsEnabled),\n    betaFeaturesEnabled: Boolean(raw?.betaFeaturesEnabled ?? DEFAULT_APP_SETTINGS.privacy.betaFeaturesEnabled),\n  };\n}\n\nfunction sanitizeLanguageSettings(raw: any): LanguageSettings {\n  return {\n    interfaceLanguage: isInterfaceLanguage(raw?.interfaceLanguage) ? raw.interfaceLanguage : DEFAULT_APP_SETTINGS.language.interfaceLanguage,\n    timezone: typeof raw?.timezone === 'string' && raw.timezone.length > 0 ? raw.timezone : resolveTimezone(),\n    dateFormat: isDateFormat(raw?.dateFormat) ? raw.dateFormat : DEFAULT_APP_SETTINGS.language.dateFormat,\n  };\n}\n\nfunction sanitizeDatabaseMetadata(raw: any): DatabaseMetadata {\n  const lastUpdatedAt = typeof raw?.lastUpdatedAt === 'string' || raw?.lastUpdatedAt === null\n    ? raw.lastUpdatedAt\n    : DEFAULT_APP_SETTINGS.database.lastUpdatedAt;\n  const storageUsage = typeof raw?.storageUsageBytes === 'number' || raw?.storageUsageBytes === null\n    ? raw.storageUsageBytes\n    : DEFAULT_APP_SETTINGS.database.storageUsageBytes;\n  return {\n    lastUpdatedAt,\n    storageUsageBytes: storageUsage,\n  };\n}\n\nexport function validateAppSettings(raw: unknown): AppSettings {\n  if (!raw || typeof raw !== 'object') {\n    return { ...DEFAULT_APP_SETTINGS };\n  }\n\n  const candidate = raw as Partial<AppSettings>;\n  const version = typeof candidate.version === 'number' ? candidate.version : DEFAULT_APP_SETTINGS.version;\n  const lastSavedAt = typeof candidate.lastSavedAt === 'string' || candidate.lastSavedAt === null\n    ? candidate.lastSavedAt\n    : DEFAULT_APP_SETTINGS.lastSavedAt;\n\n  return {\n    version,\n    theme: sanitizeThemeSettings(candidate.theme),\n    audio: sanitizeAudioPreferences(candidate.audio),\n    learning: sanitizeLearningPreferences(candidate.learning),\n    notifications: sanitizeNotificationPreferences(candidate.notifications),\n    interaction: sanitizeInteractionPreferences(candidate.interaction),\n    ai: sanitizeAISettings(candidate.ai),\n    privacy: sanitizePrivacySettings(candidate.privacy),\n    language: sanitizeLanguageSettings(candidate.language),\n    database: sanitizeDatabaseMetadata(candidate.database),\n    lastSavedAt,\n  };\n}\n\n","import {\n  DEFAULT_APP_SETTINGS,\n  type AppSettings,\n  type ThemeMode,\n  validateAppSettings,\n} from '../entities/app-settings';\n\nconst STORAGE_KEY = 'mindforge.app-settings.v1';\n\nfunction resolveEffectiveTheme(mode: ThemeMode): 'light' | 'dark' {\n  if (mode === 'system') {\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    }\n    return 'light';\n  }\n  return mode;\n}\n\nfunction applyFontScale(scale: AppSettings['theme']['fontScale']): void {\n  if (typeof document === 'undefined') return;\n  const map: Record<AppSettings['theme']['fontScale'], string> = {\n    small: '15px',\n    medium: '16px',\n    large: '18px',\n    'x-large': '20px',\n  };\n  document.documentElement.style.fontSize = map[scale];\n}\n\nfunction applyReducedMotion(enabled: boolean): void {\n  if (typeof document === 'undefined') return;\n  document.documentElement.classList.toggle('reduced-motion', enabled);\n}\n\nfunction applyTheme(themeMode: ThemeMode): void {\n  if (typeof document === 'undefined') return;\n  const effective = resolveEffectiveTheme(themeMode);\n  document.documentElement.setAttribute('data-theme', effective);\n}\n\nexport class SettingsService {\n  private currentSettings: AppSettings = { ...DEFAULT_APP_SETTINGS };\n  private mediaQuery: MediaQueryList | null = null;\n\n  constructor() {\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      this.mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n      this.mediaQuery.addEventListener('change', this.handleSystemThemeChange);\n    }\n  }\n\n  load(): AppSettings {\n    try {\n      const raw = localStorage.getItem(STORAGE_KEY);\n      if (!raw) {\n        this.applySettings(DEFAULT_APP_SETTINGS);\n        this.currentSettings = { ...DEFAULT_APP_SETTINGS };\n        this.emitUpdate();\n        return this.currentSettings;\n      }\n      const parsed = validateAppSettings(JSON.parse(raw));\n      this.currentSettings = parsed;\n      this.applySettings(parsed);\n      this.emitUpdate();\n      return parsed;\n    } catch (error) {\n      console.warn('[Settings] Failed to load settings, resetting to defaults.', error);\n      this.currentSettings = { ...DEFAULT_APP_SETTINGS };\n      this.persist(this.currentSettings);\n      this.applySettings(this.currentSettings);\n      this.emitUpdate();\n      return this.currentSettings;\n    }\n  }\n\n  save(settings: AppSettings): AppSettings {\n    const merged = {\n      ...settings,\n      lastSavedAt: new Date().toISOString(),\n    } satisfies AppSettings;\n    this.currentSettings = merged;\n    this.persist(merged);\n    this.applySettings(merged);\n    this.emitUpdate();\n    return merged;\n  }\n\n  update(updater: (prev: AppSettings) => AppSettings): AppSettings {\n    const next = updater(this.currentSettings);\n    return this.save(validateAppSettings(next));\n  }\n\n  reset(): AppSettings {\n    const defaults = {\n      ...DEFAULT_APP_SETTINGS,\n      lastSavedAt: new Date().toISOString(),\n    };\n    this.currentSettings = defaults;\n    this.persist(defaults);\n    this.applySettings(defaults);\n    this.emitUpdate();\n    return defaults;\n  }\n\n  export(): string {\n    const payload = {\n      exportedAt: new Date().toISOString(),\n      settings: this.currentSettings,\n    };\n    return JSON.stringify(payload, null, 2);\n  }\n\n  import(json: string): AppSettings {\n    try {\n      const parsed = JSON.parse(json);\n      const candidate = parsed?.settings ?? parsed;\n      const validated = validateAppSettings(candidate);\n      return this.save(validated);\n    } catch (error) {\n      console.error('[Settings] Failed to import settings', error);\n      throw new Error('Ungültige Einstellungsdatei.');\n    }\n  }\n\n  async estimateStorageUsage(): Promise<DatabaseUsageEstimate> {\n    if (navigator.storage?.estimate) {\n      try {\n        const estimate = await navigator.storage.estimate();\n        return {\n          usage: estimate.usage ?? null,\n          quota: estimate.quota ?? null,\n        };\n      } catch (error) {\n        console.warn('[Settings] Failed to estimate storage usage', error);\n      }\n    }\n    return { usage: null, quota: null };\n  }\n\n  private persist(settings: AppSettings): void {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(settings));\n  }\n\n  private applySettings(settings: AppSettings): void {\n    applyTheme(settings.theme.mode);\n    applyFontScale(settings.theme.fontScale);\n    applyReducedMotion(settings.theme.reducedMotion || !settings.theme.animationsEnabled);\n  }\n\n  private handleSystemThemeChange = () => {\n    if (this.currentSettings.theme.mode === 'system') {\n      applyTheme('system');\n      this.emitUpdate();\n    }\n  };\n\n  private emitUpdate(): void {\n    if (typeof window === 'undefined') return;\n    const detail = { settings: this.currentSettings };\n    window.dispatchEvent(new CustomEvent('app:settings:updated', { detail }));\n  }\n\n  dispose(): void {\n    if (this.mediaQuery) {\n      this.mediaQuery.removeEventListener('change', this.handleSystemThemeChange);\n    }\n  }\n\n  getSettings(): AppSettings {\n    return this.currentSettings;\n  }\n}\n\nexport const settingsService = new SettingsService();\n\nexport interface DatabaseUsageEstimate {\n  usage: number | null;\n  quota: number | null;\n}\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport type { AppSettings } from '../../core/entities/app-settings';\nimport { validateAppSettings } from '../../core/entities/app-settings';\nimport { settingsService, type DatabaseUsageEstimate } from '../../core/services/settings-service';\n\nexport type SaveState = 'idle' | 'saving' | 'saved';\n\nexport interface UseAppSettingsReturn {\n  settings: AppSettings | null;\n  loading: boolean;\n  saveState: SaveState;\n  updateSettings: (updates: Partial<AppSettings> | ((prev: AppSettings) => AppSettings)) => void;\n  resetSettings: () => void;\n  exportSettings: () => string;\n  importSettingsFromText: (payload: string) => void;\n  storageEstimate: DatabaseUsageEstimate | null;\n  refreshStorageEstimate: () => Promise<void>;\n}\n\nconst SAVE_STATE_RESET_DELAY = 2000;\n\nexport function useAppSettings(): UseAppSettingsReturn {\n  const [settings, setSettings] = useState<AppSettings | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [saveState, setSaveState] = useState<SaveState>('idle');\n  const [storageEstimate, setStorageEstimate] = useState<DatabaseUsageEstimate | null>(null);\n  const timeoutRef = useRef<number | null>(null);\n  const settingsRef = useRef<AppSettings | null>(null);\n\n  useEffect(() => {\n    const loaded = settingsService.load();\n    settingsRef.current = loaded;\n    setSettings(loaded);\n    setLoading(false);\n    void settingsService.estimateStorageUsage().then((estimate) => {\n      setStorageEstimate(estimate);\n    });\n\n    return () => {\n      if (timeoutRef.current) {\n        window.clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  const scheduleResetSaveState = useCallback(() => {\n    if (timeoutRef.current) {\n      window.clearTimeout(timeoutRef.current);\n    }\n    timeoutRef.current = window.setTimeout(() => {\n      setSaveState('idle');\n      timeoutRef.current = null;\n    }, SAVE_STATE_RESET_DELAY);\n  }, []);\n\n  const updateSettings = useCallback<UseAppSettingsReturn['updateSettings']>((updates) => {\n    if (!settingsRef.current) return;\n    setSaveState('saving');\n\n    const next = typeof updates === 'function'\n      ? updates(settingsRef.current)\n      : { ...settingsRef.current, ...updates };\n\n    const validated = validateAppSettings(next);\n    const saved = settingsService.save(validated);\n    settingsRef.current = saved;\n    setSettings(saved);\n    setSaveState('saved');\n    scheduleResetSaveState();\n  }, [scheduleResetSaveState]);\n\n  const resetSettings = useCallback(() => {\n    setSaveState('saving');\n    const reset = settingsService.reset();\n    settingsRef.current = reset;\n    setSettings(reset);\n    setSaveState('saved');\n    scheduleResetSaveState();\n  }, [scheduleResetSaveState]);\n\n  const exportSettings = useCallback(() => {\n    return settingsService.export();\n  }, []);\n\n  const importSettingsFromText = useCallback((payload: string) => {\n    setSaveState('saving');\n    const imported = settingsService.import(payload);\n    settingsRef.current = imported;\n    setSettings(imported);\n    setSaveState('saved');\n    scheduleResetSaveState();\n  }, [scheduleResetSaveState]);\n\n  const refreshStorageEstimate = useCallback(async () => {\n    const estimate = await settingsService.estimateStorageUsage();\n    setStorageEstimate(estimate);\n  }, []);\n\n  return {\n    settings,\n    loading,\n    saveState,\n    updateSettings,\n    resetSettings,\n    exportSettings,\n    importSettingsFromText,\n    storageEstimate,\n    refreshStorageEstimate,\n  };\n}\n\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useAppSettings } from '../../hooks/use-app-settings';\nimport { useAudioSettings } from '../../hooks/use-audio-settings';\nimport type { AppSettings, ThemeMode, FontScale } from '../../../core/entities/app-settings';\nimport type { AudioSettings as LegacyAudioSettings } from '../../../core/entities/audio-settings';\nimport styles from './settings-page.module.css';\n\ninterface SettingsPageProps {\n  onClose: () => void;\n}\n\ninterface SectionDefinition {\n  id: string;\n  icon: string;\n  title: string;\n  keywords: string[];\n  content: JSX.Element;\n}\n\nfunction formatBytes(bytes: number | null): string {\n  if (bytes == null) return '–';\n  if (bytes === 0) return '0 B';\n  const units = ['B', 'KB', 'MB', 'GB'];\n  const index = Math.floor(Math.log(bytes) / Math.log(1024));\n  const value = bytes / Math.pow(1024, index);\n  return `${value.toFixed(1)} ${units[index]}`;\n}\n\nfunction formatDateTime(value: string | null): string {\n  if (!value) return 'Nie';\n  try {\n    const date = new Date(value);\n    return new Intl.DateTimeFormat('de-DE', {\n      dateStyle: 'medium',\n      timeStyle: 'short',\n    }).format(date);\n  } catch {\n    return value ?? '';\n  }\n}\n\nconst PRESETS = [\n  {\n    id: 'performance',\n    label: '⚡ Performance-Modus',\n    apply: (settings: AppSettings): AppSettings => ({\n      ...settings,\n      theme: { ...settings.theme, animationsEnabled: false, mode: 'dark' },\n      audio: { ...settings.audio, autoPlayEnabled: false },\n    }),\n  },\n  {\n    id: 'accessibility',\n    label: '♿ Barrierefreiheit',\n    apply: (settings: AppSettings): AppSettings => ({\n      ...settings,\n      theme: { ...settings.theme, fontScale: 'x-large', reducedMotion: true, animationsEnabled: false, mode: 'light' },\n    }),\n  },\n  {\n    id: 'power-saver',\n    label: '🔋 Energiesparen',\n    apply: (settings: AppSettings): AppSettings => ({\n      ...settings,\n      audio: { ...settings.audio, autoPlayEnabled: false },\n      theme: { ...settings.theme, animationsEnabled: false },\n    }),\n  },\n];\n\nexport function SettingsPage({ onClose }: SettingsPageProps) {\n  const {\n    settings,\n    loading,\n    saveState,\n    updateSettings,\n    resetSettings,\n    exportSettings,\n    importSettingsFromText,\n    storageEstimate,\n    refreshStorageEstimate,\n  } = useAppSettings();\n  const { settings: audioSettings, updateSettings: updateAudioSettings } = useAudioSettings();\n  const [searchQuery, setSearchQuery] = useState('');\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n  const [showImportError, setShowImportError] = useState<string | null>(null);\n\n  const handleThemeModeChange = (mode: ThemeMode) => {\n    updateSettings((prev) => ({\n      ...prev,\n      theme: { ...prev.theme, mode },\n    }));\n  };\n\n  const handleFontScaleChange = (fontScale: FontScale) => {\n    updateSettings((prev) => ({\n      ...prev,\n      theme: { ...prev.theme, fontScale },\n    }));\n  };\n\n  const handleAudioUpdate = (updates: Partial<AppSettings['audio']>) => {\n    updateSettings((prev) => ({\n      ...prev,\n      audio: { ...prev.audio, ...updates },\n    }));\n    if (audioSettings) {\n      const mirrored: Partial<LegacyAudioSettings> = {};\n      if (updates.autoPlayEnabled !== undefined) {\n        mirrored.autoPlayEnabled = updates.autoPlayEnabled;\n      }\n      if (Object.keys(mirrored).length > 0) {\n        updateAudioSettings(mirrored);\n      }\n    }\n  };\n\n  const handleDatabaseMetadataUpdate = useCallback((updates: Partial<AppSettings['database']>) => {\n    updateSettings((prev) => ({\n      ...prev,\n      database: { ...prev.database, ...updates },\n    }));\n  }, [updateSettings]);\n\n  useEffect(() => {\n    const listener = (event: Event) => {\n      const detail = (event as CustomEvent<{ lastUpdatedAt?: string; storageUsageBytes?: number }>).detail;\n      if (detail?.lastUpdatedAt) {\n        handleDatabaseMetadataUpdate({ lastUpdatedAt: detail.lastUpdatedAt });\n      }\n      if (typeof detail?.storageUsageBytes === 'number') {\n        handleDatabaseMetadataUpdate({ storageUsageBytes: detail.storageUsageBytes });\n      }\n      void refreshStorageEstimate();\n    };\n\n    window.addEventListener('app:database:updated', listener);\n    return () => {\n      window.removeEventListener('app:database:updated', listener);\n    };\n  }, [handleDatabaseMetadataUpdate, refreshStorageEstimate]);\n\n  if (loading || !settings) {\n    return (\n      <div className={styles.settingsPage}>\n        <p>Lade Einstellungen...</p>\n      </div>\n    );\n  }\n\n  const handlePreset = (presetId: string) => {\n    const preset = PRESETS.find((item) => item.id === presetId);\n    if (!preset) return;\n    updateSettings(() => preset.apply(settings));\n  };\n\n  const handleExport = () => {\n    const data = exportSettings();\n    const blob = new Blob([data], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `mindforge-settings-${new Date().toISOString().slice(0, 10)}.json`;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const handleImport = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      try {\n        const text = typeof reader.result === 'string' ? reader.result : '';\n        importSettingsFromText(text);\n        setShowImportError(null);\n      } catch (error) {\n        console.error(error);\n        setShowImportError('Import fehlgeschlagen. Bitte gültige JSON-Datei auswählen.');\n      }\n    };\n    reader.onerror = () => {\n      setShowImportError('Datei konnte nicht gelesen werden.');\n    };\n    reader.readAsText(file);\n    event.target.value = '';\n  };\n\n  const sections: SectionDefinition[] = (() => {\n    const databaseSection: SectionDefinition = {\n      id: 'database',\n      icon: '📦',\n      title: 'Datenbank & Speicherung',\n      keywords: ['datenbank', 'speicherung', 'backup', 'import', 'export', 'speicher'],\n      content: (\n        <div className={styles.settingGroup}>\n          <div className={styles.buttonRow}>\n            <button\n              type=\"button\"\n              onClick={() => {\n                const confirmed = confirm('Datenbank neu laden? Lernpfade werden aktualisiert.');\n                if (!confirmed) return;\n                window.dispatchEvent(new CustomEvent('app:database:reseed'));\n              }}\n            >\n              🔄 Datenbank Aktualisieren\n            </button>\n            <button\n              type=\"button\"\n              className={clsx(styles.dangerButton)}\n              onClick={() => {\n                const confirmed = confirm('⚠️ Alle Daten löschen? Dies kann nicht rückgängig gemacht werden!');\n                if (!confirmed) return;\n                window.dispatchEvent(new CustomEvent('app:database:reset'));\n              }}\n            >\n              🗑️ Alle Daten Löschen\n            </button>\n            <button type=\"button\" onClick={handleExport}>\n              📥 Daten Exportieren\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                fileInputRef.current?.click();\n              }}\n            >\n              📤 Daten Importieren\n            </button>\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              accept=\"application/json\"\n              style={{ display: 'none' }}\n              onChange={handleImport}\n            />\n          </div>\n          {showImportError && (\n            <div className={styles.infoCard} style={{ borderColor: '#f97316', color: '#b45309' }}>\n              {showImportError}\n            </div>\n          )}\n          <div className={styles.infoCard}>\n            <div className={styles.infoGrid}>\n              <div>💾 Speichernutzung: {formatBytes(storageEstimate?.usage ?? null)} / {formatBytes(storageEstimate?.quota ?? null)}</div>\n              <div>📅 Letztes Update: {formatDateTime(settings.database.lastUpdatedAt)}</div>\n            </div>\n            <button\n              type=\"button\"\n              onClick={() => {\n                void refreshStorageEstimate();\n              }}\n            >\n              Speichernutzung aktualisieren\n            </button>\n          </div>\n        </div>\n      ),\n    };\n\n    const themeSection: SectionDefinition = {\n      id: 'theme',\n      icon: '🎨',\n      title: 'Darstellung & Theme',\n      keywords: ['theme', 'dark', 'light', 'schrift', 'font', 'animation'],\n      content: (\n        <div className={styles.settingGroup}>\n          <div className={styles.settingItem}>\n            <div className={styles.settingLabel}>Theme</div>\n            <div className={styles.radioGroup}>\n              {(['light', 'dark', 'system'] as ThemeMode[]).map((mode) => (\n                <label\n                  key={mode}\n                  className={clsx(styles.radioOption, settings.theme.mode === mode && styles['radioOption--active'])}\n                >\n                  <input\n                    type=\"radio\"\n                    checked={settings.theme.mode === mode}\n                    onChange={() => handleThemeModeChange(mode)}\n                  />\n                  {mode === 'light' ? 'Hell' : mode === 'dark' ? 'Dunkel' : 'System'}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className={styles.settingItem}>\n            <div className={styles.settingLabel}>Schriftgröße</div>\n            <div className={styles.radioGroup}>\n              {(['small', 'medium', 'large', 'x-large'] as FontScale[]).map((scale) => (\n                <label\n                  key={scale}\n                  className={clsx(styles.radioOption, settings.theme.fontScale === scale && styles['radioOption--active'])}\n                >\n                  <input\n                    type=\"radio\"\n                    checked={settings.theme.fontScale === scale}\n                    onChange={() => handleFontScaleChange(scale)}\n                  />\n                  {scale === 'small'\n                    ? 'Klein'\n                    : scale === 'medium'\n                      ? 'Mittel'\n                      : scale === 'large'\n                        ? 'Groß'\n                        : 'Sehr groß'}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className={styles.toggleGroup}>\n            <label className={styles.radioOption}>\n              <input\n                type=\"checkbox\"\n                checked={settings.theme.animationsEnabled}\n                onChange={(event) =>\n                  updateSettings((prev) => ({\n                    ...prev,\n                    theme: { ...prev.theme, animationsEnabled: event.target.checked },\n                  }))\n                }\n              />\n              Animationen aktivieren\n            </label>\n            <label className={styles.radioOption}>\n              <input\n                type=\"checkbox\"\n                checked={settings.theme.reducedMotion}\n                onChange={(event) =>\n                  updateSettings((prev) => ({\n                    ...prev,\n                    theme: { ...prev.theme, reducedMotion: event.target.checked },\n                  }))\n                }\n              />\n              Reduzierte Bewegungen\n            </label>\n          </div>\n        </div>\n      ),\n    };\n\n    const audioSection: SectionDefinition = {\n      id: 'audio',\n      icon: '🔊',\n      title: 'Audio',\n      keywords: ['audio', 'autoplay', 'sound'],\n      content: (\n        <div className={styles.settingGroup}>\n          <label className={styles.radioOption}>\n            <input\n              type=\"checkbox\"\n              checked={settings.audio.autoPlayEnabled}\n              onChange={(event) => handleAudioUpdate({ autoPlayEnabled: event.target.checked })}\n            />\n            Audio automatisch abspielen (Spanisch)\n          </label>\n          <p className={styles.settingDescription}>\n            Steuert, ob Vokabelkarten automatisch die spanische Aussprache wiedergeben.\n          </p>\n        </div>\n      ),\n    };\n\n    const infoSection: SectionDefinition = {\n      id: 'info',\n      icon: 'ℹ️',\n      title: 'Info & Support',\n      keywords: ['hilfe', 'faq', 'bug', 'feature', 'support'],\n      content: (\n        <div className={styles.settingGroup}>\n          <div className={styles.infoCard}>\n            <div>Version: 1.0.0</div>\n            <div>Letzte Aktualisierung: {new Intl.DateTimeFormat('de-DE').format(new Date())}</div>\n          </div>\n          <div className={styles.buttonRow}>\n            <a className={styles.linkButton} href=\"https://github.com/trsdn/learning-platform#readme\" target=\"_blank\" rel=\"noreferrer\">\n              📖 Dokumentation\n            </a>\n            <a className={styles.linkButton} href=\"https://github.com/trsdn/learning-platform/issues/new\" target=\"_blank\" rel=\"noreferrer\">\n              🐛 Bug melden\n            </a>\n            <a className={styles.linkButton} href=\"https://github.com/trsdn/learning-platform/issues/new\" target=\"_blank\" rel=\"noreferrer\">\n              💡 Feature vorschlagen\n            </a>\n            <a className={styles.linkButton} href=\"https://github.com/trsdn/learning-platform/discussions\" target=\"_blank\" rel=\"noreferrer\">\n              ❓ Hilfe & FAQ\n            </a>\n          </div>\n          <div className={styles.settingDescription}>\n            Entwickelt von @trsdn · Open Source auf GitHub\n          </div>\n        </div>\n      ),\n    };\n\n    return [databaseSection, themeSection, audioSection, infoSection];\n  })();\n\n  const filteredSections = sections.filter((section) => {\n    if (!searchQuery) return true;\n    const target = `${section.title} ${section.keywords.join(' ')}`.toLowerCase();\n    return target.includes(searchQuery.toLowerCase());\n  });\n\n  return (\n    <div className={styles.settingsPage}>\n      <header className={styles.settingsHeader}>\n        <div className={styles.settingsTitle}>\n          <h1>⚙️ Einstellungen</h1>\n          <div className={clsx(styles.saveIndicator, saveState === 'saved' && styles['saveIndicator--saved'])}>\n            {saveState === 'saving' && 'Speichere...'}\n            {saveState === 'saved' && 'Gespeichert ✓'}\n            {saveState === 'idle' && settings.lastSavedAt && `Zuletzt gespeichert: ${formatDateTime(settings.lastSavedAt)}`}\n          </div>\n        </div>\n        <button className={styles.closeButton} type=\"button\" onClick={onClose}>\n          Schließen\n        </button>\n      </header>\n\n      <div className={styles.searchBar}>\n        <span className={styles.searchIcon}>🔍</span>\n        <input\n          className={styles.searchInput}\n          type=\"search\"\n          placeholder=\"Einstellungen durchsuchen...\"\n          value={searchQuery}\n          onChange={(event) => setSearchQuery(event.target.value)}\n        />\n      </div>\n\n      <div className={styles.presets}>\n        {PRESETS.map((preset) => (\n          <button\n            key={preset.id}\n            type=\"button\"\n            className={styles.presetButton}\n            onClick={() => handlePreset(preset.id)}\n          >\n            {preset.label}\n          </button>\n        ))}\n      </div>\n\n      <div className={styles.sections}>\n        {filteredSections.map((section) => (\n          <CollapsibleSection key={section.id} icon={section.icon} title={section.title}>\n            {section.content}\n          </CollapsibleSection>\n        ))}\n      </div>\n\n      <footer className={styles.footerActions}>\n        <button className={styles.resetButton} type=\"button\" onClick={resetSettings}>\n          Auf Standardwerte zurücksetzen\n        </button>\n        <button className={styles.closeButton} type=\"button\" onClick={onClose}>\n          Fertig\n        </button>\n      </footer>\n    </div>\n  );\n}\n\ninterface CollapsibleSectionProps {\n  icon: string;\n  title: string;\n  children: React.ReactNode;\n}\n\nfunction CollapsibleSection({ icon, title, children }: CollapsibleSectionProps) {\n  const [expanded, setExpanded] = useState(true);\n  return (\n    <section className={styles.section}>\n      <button\n        type=\"button\"\n        className={styles.sectionHeader}\n        onClick={() => setExpanded((prev) => !prev)}\n        aria-expanded={expanded}\n      >\n        <h2>\n          <span className={styles.sectionHeaderIcon}>{icon}</span>\n          {title}\n        </h2>\n        <span className={clsx(styles.sectionCaret, !expanded && styles['sectionCaret--collapsed'])}>▼</span>\n      </button>\n      {expanded && <div className={styles.sectionContent}>{children}</div>}\n    </section>\n  );\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { db } from './modules/storage/database';\nimport { seedDatabase } from './modules/storage/seed-data';\nimport type { Topic, LearningPath, PracticeSession as IPracticeSession } from './modules/core/types/services';\nimport { PracticeSession } from './modules/ui/components/practice-session';\nimport { SessionResults } from './modules/ui/components/session-results';\nimport { Dashboard } from './modules/ui/components/dashboard';\nimport { TopicCard, type TopicCardTopic } from './modules/ui/components/TopicCard';\nimport { SettingsPage } from './modules/ui/components/settings/SettingsPage';\nimport { settingsService } from '@core/services/settings-service';\nimport type { ThemeMode, AppSettings } from '@core/entities/app-settings';\nimport './modules/ui/styles/variables.css';\nimport './modules/ui/styles/global.css';\nimport './modules/ui/styles/utilities.css';\nimport './index.css';\n\n/**\n * German Learning Platform with Spaced Repetition\n */\n\nif (typeof window !== 'undefined') {\n  settingsService.load();\n}\n\nfunction App() {\n  const [topics, setTopics] = useState<Topic[]>([]);\n  const [selectedTopic, setSelectedTopic] = useState<Topic | null>(null);\n  const [learningPaths, setLearningPaths] = useState<LearningPath[]>([]);\n  const [learningPathTaskCounts, setLearningPathTaskCounts] = useState<Record<string, number>>({});\n  const [selectedLearningPath, setSelectedLearningPath] = useState<LearningPath | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [inSession, setInSession] = useState(false);\n  const [completedSession, setCompletedSession] = useState<IPracticeSession | null>(null);\n  const [showDashboard, setShowDashboard] = useState(false);\n  const [showSessionConfig, setShowSessionConfig] = useState(false);\n  const [sessionConfig, setSessionConfig] = useState({ targetCount: 10, includeReview: true });\n  const [showSettings, setShowSettings] = useState(false);\n  const [themeMode, setThemeMode] = useState<ThemeMode>('system');\n  const initStarted = useRef(false);\n\n  useEffect(() => {\n    if (!initStarted.current) {\n      initStarted.current = true;\n      initializeApp();\n    }\n  }, []);\n\n  useEffect(() => {\n    const handleReseedEvent = (_event: Event) => {\n      reseedDatabase(true).catch((error) => console.error('Reseed event failed', error));\n    };\n    const handleResetEvent = (_event: Event) => {\n      handleFullReset().catch((error) => console.error('Reset event failed', error));\n    };\n\n    window.addEventListener('app:database:reseed', handleReseedEvent);\n    window.addEventListener('app:database:reset', handleResetEvent);\n\n    return () => {\n      window.removeEventListener('app:database:reseed', handleReseedEvent);\n      window.removeEventListener('app:database:reset', handleResetEvent);\n    };\n  }, []);\n\n  useEffect(() => {\n    const handler = (event: Event) => {\n      const detail = (event as CustomEvent<{ settings: AppSettings }>).detail;\n      if (detail?.settings?.theme?.mode) {\n        setThemeMode(detail.settings.theme.mode as ThemeMode);\n      }\n    };\n    window.addEventListener('app:settings:updated', handler);\n    setThemeMode(settingsService.getSettings().theme.mode as ThemeMode);\n    return () => {\n      window.removeEventListener('app:settings:updated', handler);\n    };\n  }, []);\n\n  const cycleThemeMode = () => {\n    const order: ThemeMode[] = ['system', 'light', 'dark'];\n    const currentIndex = order.indexOf(themeMode);\n    const nextMode = (order[(currentIndex + 1) % order.length] ?? 'system') as ThemeMode;\n    const updated = settingsService.update((prev) => ({\n      ...prev,\n      theme: { ...prev.theme, mode: nextMode },\n    }));\n    setThemeMode(updated.theme.mode as ThemeMode);\n  };\n\n  const themeLabel = themeMode === 'system' ? 'System' : themeMode === 'light' ? 'Hell' : 'Dunkel';\n\n  async function initializeApp() {\n    try {\n      // Log deployment version\n      const deploymentVersion = document.querySelector('meta[name=\"deployment-version\"]')?.getAttribute('content');\n      const buildTime = document.querySelector('meta[name=\"deployment-version\"]')?.getAttribute('data-build-time');\n      console.log('🚀 Deployment Version:', deploymentVersion, 'Build Time:', buildTime);\n\n      // Database version for forced re-seeding when data schema changes\n      const DB_VERSION = '2'; // Bumped to force re-seed with language: 'Spanish'\n      const currentVersion = localStorage.getItem('dbVersion');\n\n      // Check if database has data\n      const topicCount = await db.topics.count();\n      const taskCount = await db.tasks.count();\n\n      console.log(`Database status: ${topicCount} topics, ${taskCount} tasks, version: ${currentVersion}`);\n\n      // Force re-seed if version changed or DB is empty\n      if (topicCount === 0 || taskCount === 0 || currentVersion !== DB_VERSION) {\n        if (currentVersion !== DB_VERSION) {\n          console.log(`Database version mismatch (${currentVersion} -> ${DB_VERSION}), re-seeding...`);\n        } else {\n          console.log('Database empty or incomplete, seeding...');\n        }\n        await seedDatabase(db);\n        localStorage.setItem('dbVersion', DB_VERSION);\n      } else {\n        console.log('Database already seeded, skipping seed');\n      }\n\n      // Load topics\n      const loadedTopics = await db.topics.toArray();\n      setTopics(loadedTopics);\n      setIsLoading(false);\n    } catch (error: any) {\n      console.error('Failed to initialize app:', error);\n      console.error('Error details:', {\n        name: error?.name,\n        message: error?.message,\n        failures: error?.failures,\n        stack: error?.stack,\n      });\n      setIsLoading(false);\n    }\n  }\n\n  async function selectTopic(topic: Topic) {\n    setSelectedTopic(topic);\n    const paths = await db.learningPaths.where('topicId').equals(topic.id).toArray();\n    console.log(`Loading learning paths for topic ${topic.id}:`, paths);\n\n    // Sort by createdAt (latest first)\n    paths.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n\n    // Get actual task counts from database\n    const taskCounts: Record<string, number> = {};\n    for (const path of paths) {\n      const tasks = await db.tasks.where('learningPathId').equals(path.id).toArray();\n      taskCounts[path.id] = tasks.length;\n      console.log(`Learning path \"${path.title}\" (${path.id}): ${tasks.length} tasks in DB, taskIds array length: ${path.taskIds?.length || 0}`);\n      console.log('Task IDs:', tasks.map(t => t.id));\n    }\n\n    setLearningPathTaskCounts(taskCounts);\n    setLearningPaths(paths);\n  }\n\n  function showConfigScreen(learningPath: LearningPath) {\n    setSelectedLearningPath(learningPath);\n    setShowSessionConfig(true);\n  }\n\n  function startPracticeSession() {\n    setShowSessionConfig(false);\n    setInSession(true);\n  }\n\n  function cancelSessionConfig() {\n    setShowSessionConfig(false);\n    setSelectedLearningPath(null);\n  }\n\n  async function handleSessionComplete() {\n    setInSession(false);\n    if (selectedLearningPath && selectedTopic) {\n      // Get the completed session\n      const sessions = await db.practiceSessions\n        .where('execution.status')\n        .equals('completed')\n        .reverse()\n        .limit(1)\n        .toArray();\n\n      if (sessions.length > 0 && sessions[0]) {\n        setCompletedSession(sessions[0]);\n      }\n    }\n  }\n\n  function handleSessionCancel() {\n    setInSession(false);\n    setSelectedLearningPath(null);\n  }\n\n  function handleCloseResults() {\n    setCompletedSession(null);\n  }\n\n  function handleStartNewSession() {\n    setCompletedSession(null);\n    if (selectedLearningPath) {\n      setInSession(true);\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <div style={{ padding: '2rem', fontFamily: 'system-ui, sans-serif', textAlign: 'center' }}>\n        <h1>🧠 MindForge Academy</h1>\n        <p>Wird geladen...</p>\n      </div>\n    );\n  }\n\n  // Show dashboard\n  if (showDashboard) {\n    return (\n      <div style={{ fontFamily: 'system-ui, sans-serif' }}>\n        <Dashboard onClose={() => setShowDashboard(false)} />\n      </div>\n    );\n  }\n\n  if (showSettings) {\n    return (\n      <div style={{ fontFamily: 'system-ui, sans-serif' }}>\n        <SettingsPage onClose={() => setShowSettings(false)} />\n      </div>\n    );\n  }\n\n  // Show session results\n  if (completedSession) {\n    return (\n      <div style={{ fontFamily: 'system-ui, sans-serif' }}>\n        <SessionResults\n          session={completedSession}\n          onClose={handleCloseResults}\n          onStartNew={handleStartNewSession}\n        />\n      </div>\n    );\n  }\n\n  // Show session configuration\n  if (showSessionConfig && selectedLearningPath && selectedTopic) {\n    return (\n      <div style={{ padding: '2rem', fontFamily: 'system-ui, sans-serif', maxWidth: '600px', margin: '0 auto' }}>\n        <button\n          onClick={cancelSessionConfig}\n          style={{\n            padding: '0.5rem 1rem',\n            background: 'var(--color-bg-tertiary)',\n            color: 'var(--color-text-primary)',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            marginBottom: '1rem',\n          }}\n        >\n          ← Zurück\n        </button>\n\n        <h1 style={{ marginBottom: '0.5rem' }}>Sitzung konfigurieren</h1>\n        <p style={{ color: 'var(--color-text-secondary)', marginBottom: '2rem' }}>\n          {selectedLearningPath.title}\n        </p>\n\n        <div style={{ marginBottom: '2rem' }}>\n          <label style={{ display: 'block', fontWeight: '500', marginBottom: '0.5rem' }}>\n            Anzahl der Fragen\n          </label>\n          <div style={{ display: 'flex', gap: '0.5rem', flexWrap: 'wrap' }}>\n            {[5, 10, 15, 20].map((count) => (\n              <button\n                key={count}\n                onClick={() => setSessionConfig({ ...sessionConfig, targetCount: count })}\n                style={{\n                  padding: '0.75rem 1.5rem',\n                  background: sessionConfig.targetCount === count ? 'var(--color-primary)' : 'var(--color-bg-secondary)',\n                  color: sessionConfig.targetCount === count ? 'var(--color-text-inverse)' : 'var(--color-text-primary)',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '1rem',\n                  fontWeight: '500',\n                }}\n              >\n                {count}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div style={{ marginBottom: '2rem' }}>\n          <label style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\n            <input\n              type=\"checkbox\"\n              checked={sessionConfig.includeReview}\n              onChange={(e) => setSessionConfig({ ...sessionConfig, includeReview: e.target.checked })}\n              style={{ marginRight: '0.5rem', width: '1.25rem', height: '1.25rem', cursor: 'pointer' }}\n            />\n            <span>Wiederholungsfragen einbeziehen</span>\n          </label>\n          <p style={{ fontSize: '0.875rem', color: 'var(--color-text-secondary)', marginTop: '0.5rem', marginLeft: '1.75rem' }}>\n            Fragen, die du bereits beantwortet hast und die zur Wiederholung fällig sind\n          </p>\n        </div>\n\n        <button\n          onClick={startPracticeSession}\n          style={{\n            padding: '1rem 2rem',\n            background: 'var(--color-primary)',\n            color: 'var(--color-text-inverse)',\n            border: 'none',\n            borderRadius: '8px',\n            cursor: 'pointer',\n            fontSize: '1.1rem',\n            fontWeight: '500',\n            width: '100%',\n          }}\n        >\n          Sitzung starten →\n        </button>\n      </div>\n    );\n  }\n\n  // Show practice session\n  if (inSession && selectedLearningPath && selectedTopic) {\n    return (\n      <div style={{ fontFamily: 'system-ui, sans-serif' }}>\n        <PracticeSession\n          topicId={selectedTopic.id}\n          learningPathIds={[selectedLearningPath.id]}\n          targetCount={sessionConfig.targetCount}\n          includeReview={sessionConfig.includeReview}\n          onComplete={handleSessionComplete}\n          onCancel={handleSessionCancel}\n        />\n      </div>\n    );\n  }\n\n  if (selectedTopic) {\n    return (\n      <div style={{ padding: '2rem', fontFamily: 'system-ui, sans-serif' }}>\n        <button\n          onClick={() => setSelectedTopic(null)}\n          style={{\n            padding: '0.5rem 1rem',\n            background: 'var(--color-bg-tertiary)',\n            color: 'var(--color-text-primary)',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            marginBottom: '1rem',\n          }}\n        >\n          ← Zurück zu Themen\n        </button>\n\n        <h1>📚 {selectedTopic.title}</h1>\n\n        <h2 style={{ marginTop: '2rem', marginBottom: '1rem' }}>Lernpfade</h2>\n        <div\n          style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\n            gap: '1rem',\n          }}\n        >\n          {learningPaths.map((path) => (\n            <div\n              key={path.id}\n              style={{\n                padding: '1.5rem',\n                background: 'var(--color-bg-primary)',\n                border: '2px solid var(--color-bg-tertiary)',\n                borderRadius: '8px',\n                cursor: 'pointer',\n                transition: 'all 0.2s',\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.borderColor = 'var(--color-primary)';\n                e.currentTarget.style.transform = 'translateY(-2px)';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.borderColor = 'var(--color-bg-tertiary)';\n                e.currentTarget.style.transform = 'translateY(0)';\n              }}\n            >\n              <h3 style={{ marginBottom: '0.5rem' }}>{path.title}</h3>\n              <p style={{ fontSize: '0.9rem', color: 'var(--color-text-secondary)', marginBottom: '1rem' }}>\n                {path.description}\n              </p>\n              <div style={{ fontSize: '0.85rem', color: 'var(--color-text-secondary)' }}>\n                <span style={{ marginRight: '1rem' }}>\n                  {path.difficulty === 'easy'\n                    ? '🟢 Leicht'\n                    : path.difficulty === 'medium'\n                    ? '🟡 Mittel'\n                    : '🔴 Schwer'}\n                </span>\n                <span>{learningPathTaskCounts[path.id] || path.taskIds?.length || 0} Aufgaben</span>\n              </div>\n              <button\n                onClick={() => showConfigScreen(path)}\n                style={{\n                  marginTop: '1rem',\n                  padding: '0.5rem 1rem',\n                  background: 'var(--color-primary)',\n                  color: 'var(--color-text-inverse)',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  width: '100%',\n                }}\n              >\n                Lernpfad starten →\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  async function reseedDatabase(showNotification = true) {\n    try {\n      await db.topics.clear();\n      await db.learningPaths.clear();\n      await db.tasks.clear();\n      await seedDatabase(db);\n      const loadedTopics = await db.topics.toArray();\n      setTopics(loadedTopics);\n      let storageUsageBytes: number | undefined;\n      if (navigator.storage?.estimate) {\n        try {\n          const estimate = await navigator.storage.estimate();\n          storageUsageBytes = estimate.usage ?? undefined;\n        } catch (error) {\n          console.warn('Storage estimate failed', error);\n        }\n      }\n      const detail = {\n        lastUpdatedAt: new Date().toISOString(),\n        storageUsageBytes,\n      };\n      window.dispatchEvent(new CustomEvent('app:database:updated', { detail }));\n      if (showNotification) {\n        alert('✅ Datenbank erfolgreich aktualisiert!');\n      }\n    } catch (error) {\n      console.error('Reseed failed:', error);\n      if (showNotification) {\n        alert('❌ Fehler beim Aktualisieren der Datenbank');\n      }\n    }\n  }\n\n  async function handleFullReset() {\n    try {\n      await db.delete();\n      localStorage.removeItem('dbVersion');\n      localStorage.removeItem('mindforge.app-settings.v1');\n      localStorage.removeItem('audioSettings');\n      window.location.reload();\n    } catch (error) {\n      console.error('Reset failed:', error);\n      alert('❌ Fehler beim Löschen der Daten');\n    }\n  }\n\n  // Convert Topic to TopicCardTopic\n  function topicToCardTopic(topic: Topic): TopicCardTopic {\n    const icon = topic.id === 'test' ? '🎯' : topic.id === 'mathematik' ? '🔢' : topic.id === 'spanisch' ? '🇪🇸' : '🧬';\n    const color = topic.id === 'test' ? '#fef3c7' : topic.id === 'mathematik' ? '#dbeafe' : topic.id === 'spanisch' ? '#fef3c7' : '#dcfce7';\n\n    return {\n      id: topic.id,\n      name: topic.title,\n      description: `${topic.learningPathIds.length} Lernpfade`,\n      icon,\n      color,\n    };\n  }\n\n  const deploymentVersion = document.querySelector('meta[name=\"deployment-version\"]')?.getAttribute('content') || 'unknown';\n\n  return (\n    <div style={{ padding: '2rem', fontFamily: 'system-ui, sans-serif' }}>\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '2rem' }}>\n        <div>\n          <h1>🧠 MindForge Academy</h1>\n          <p style={{ fontSize: '1.1rem', color: 'var(--color-text-secondary)', marginTop: '0.5rem' }}>\n            Erweitere dein Wissen, eine Frage nach der anderen\n          </p>\n          <p style={{ fontSize: '0.75rem', color: 'var(--color-text-tertiary, #999)', marginTop: '0.25rem' }}>\n            v{deploymentVersion}\n          </p>\n        </div>\n        <div style={{ display: 'flex', gap: '0.5rem' }}>\n          <button\n            onClick={cycleThemeMode}\n            title={`Theme wechseln (aktuell: ${themeLabel})`}\n            style={{\n              padding: '0.75rem 1.5rem',\n              background: 'var(--color-primary, #667eea)',\n              color: '#ffffff',\n              border: 'none',\n              borderRadius: '6px',\n              cursor: 'pointer',\n              fontSize: '1rem',\n              fontWeight: '500',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n            }}\n          >\n            🌓 {themeLabel}\n          </button>\n          <button\n            onClick={() => setShowDashboard(true)}\n            style={{\n              padding: '0.75rem 1.5rem',\n              background: 'var(--color-primary)',\n              color: 'var(--color-text-inverse)',\n              border: 'none',\n              borderRadius: '6px',\n              cursor: 'pointer',\n              fontSize: '1rem',\n              fontWeight: '500',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n            }}\n          >\n            📊 Dashboard\n          </button>\n          <button\n            onClick={() => setShowSettings(true)}\n            style={{\n              padding: '0.75rem 1.5rem',\n              background: 'var(--color-info)',\n              color: 'var(--color-text-inverse)',\n              border: 'none',\n              borderRadius: '6px',\n              cursor: 'pointer',\n              fontSize: '1rem',\n              fontWeight: '500',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n            }}\n          >\n            ⚙️ Einstellungen\n          </button>\n        </div>\n      </div>\n\n      <h2 style={{ marginTop: 0, marginBottom: '1rem' }}>Themen auswählen</h2>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n          gap: '1.5rem',\n        }}\n      >\n        {topics.map((topic) => (\n          <TopicCard\n            key={topic.id}\n            topic={topicToCardTopic(topic)}\n            onSelect={(topicId) => {\n              const selectedTopic = topics.find(t => t.id === topicId);\n              if (selectedTopic) selectTopic(selectedTopic);\n            }}\n            data-testid={`topic-card-${topic.id}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","LearningPlatformDB","Dexie","db","loadLearningPathsFromJSON","topics","learningPaths","tasks","learningPathFiles","topicId","files","topic","createTopicFromId","filename","path","response","data","taskIds","task","learningPath","taskData","error","config","seedDatabase","beforeTopics","beforePaths","beforeTasks","afterClear","t","lp","err","putErr","savedTopics","savedPaths","savedTasks","LearningPlatformError","message","code","context","ValidationError","NotFoundError","resource","id","PracticeSessionEntity","validStatuses","learningPathIds","configuration","isCorrect","timeSpent","result","PracticeSessionService","sessionRepository","taskRepository","spacedRepRepository","sessionId","sessionConfig","sessionEntity","updates","session","userId","limit","selectedTaskIds","remainingCount","dueItems","reviewTaskIds","item","filters","newTasks","SpacedRepetitionItemEntity","taskId","grade","efactorChange","correct","totalReviews","newSum","diff","SpacedRepetitionService","_userId","count","selectedItems","_isCorrect","srItem","newItem","srEntity","days","schedule","now","i","date","items","estimatedTime","newDate","allItems","graduated","totalInterval","sum","totalAccuracy","TopicRepository","table","query","lowerQuery","_title","_entities","_updates","_ids","LearningPathRepository","difficulty","_query","TaskRepository","learningPathId","beforeExclude","shuffled","_type","_difficulty","_tags","AnswerHistoryRepository","history","_limit","_startDate","_endDate","UserProgressRepository","progress","_id","_stats","_correct","_streakDays","PracticeSessionRepository","status","_status","_timeSpent","SpacedRepetitionRepository","_date","_algorithm","_schedule","_performance","StorageFactory","getTaskRepository","getPracticeSessionRepository","getSpacedRepetitionRepository","INITIAL_PLAYBACK_STATE","AUTO_PLAY_DELAY_MS","MAX_AUDIO_URL_LENGTH","MIN_PLAY_INTERVAL_MS","AudioService","_settings","autoPlay","nextTask","callback","newState","listener","url","createAudioService","useAudioPlayback","audioServiceRef","useRef","playbackState","setPlaybackState","useState","useEffect","service","unsubscribe","settings","DEFAULT_AUDIO_SETTINGS","validateAudioSettings","s","STORAGE_KEY","DEBOUNCE_DELAY_MS","AudioSettingsStorage","stored","parsed","current","merged","oldSettings","migrated","createAudioSettingsStorage","useAudioSettings","storageRef","setSettings","isLoaded","setIsLoaded","storage","loadedSettings","newSettings","isEligibleForAutoPlay","taskLanguage","templateCache","loadTemplate","templateId","template","getAudioConfig","r","o","clsx","VolumeIcon","size","jsx","VolumeOffIcon","AudioButtonComponent","text","audioUrl","className","disabled","isPlaying","setIsPlaying","setError","audioRef","hasAudio","handleClick","iconSizes","isDisabled","styles","AudioButton","memo","Card","padding","shadow","border","borderColor","backgroundColor","children","style","props","customStyles","colors","semanticColors","FeedbackCard","variant","title","dismissible","onDismiss","React","getVariantColors","icon","getVariantIcon","jsxs","Input","value","onChange","success","helperText","fullWidth","helperId","Checkbox","checked","label","generatedId","checkboxId","Select","options","placeholder","option","Slider","min","max","step","unit","showValue","ariaLabel","percentage","PracticeSession","targetCount","includeReview","onComplete","onCancel","setSession","currentTask","setCurrentTask","currentTaskIndex","setCurrentTaskIndex","selectedAnswer","setSelectedAnswer","showFeedback","setShowFeedback","setIsCorrect","startTime","setStartTime","shuffledOptions","setShuffledOptions","shuffledIndices","setShuffledIndices","correctAnswerIndex","setCorrectAnswerIndex","blankAnswers","setBlankAnswers","trueFalseAnswer","setTrueFalseAnswer","orderedItems","setOrderedItems","matchingAnswers","setMatchingAnswers","shuffledRightColumn","setShuffledRightColumn","selectedOptions","setSelectedOptions","sliderValue","setSliderValue","scrambleAnswer","setScrambleAnswer","flashcardRevealed","setFlashcardRevealed","flashcardKnown","setFlashcardKnown","textInputAnswer","setTextInputAnswer","optionCursor","setOptionCursor","showShortcutHelp","setShowShortcutHelp","hintVisible","setHintVisible","audioConfig","setAudioConfig","loadAudio","togglePlayPause","replay","stop","preloadNext","unlockAutoPlay","audioSettings","toggleMultipleSelectOption","useCallback","index","prev","updated","repeatQuestionAudio","content","questionField","canSubmit","handleAnswerSubmit","flashcardResult","blank","userAnswer","correctAnswer","alternatives","originalIndex","_pair","ans","tolerance","caseSensitive","spacedRepService","updatedSession","handleComplete","resolve","handleNextTask","initializeSession","loadCurrentTask","total","handleKeyDown","event","active","tagName","isTyping","key","taskType","toggleHintIfAvailable","moveCursor","delta","next","submitCurrent","handleKeyPress","fieldsToPlay","field","fieldValue","audioFile","tryAutoPlayOnReveal","audioFiles","itemsAudio","correctOrder","blanks","optionsAudio","correctAnswers","correctIndex","audio","timer","renderTaskContent","renderMultipleChoice","renderClozeDeletion","renderTrueFalse","renderOrdering","renderMatching","renderMultipleSelect","renderSlider","renderWordScramble","renderFlashcard","renderTextInput","isFocused","optionClasses","optionAudioUrl","parts","part","hasAnswer","newAnswers","answerClass","btnClasses","isInCorrectPosition","shouldBeAtPosition","itemClasses","itemAudioUrl","newItems","position","pair","leftIndex","leftAudioUrl","numValue","rightIndex","isSelected","isCorrectAnswer","statusIcon","iconClass","isCorrectValue","valueClass","isAnswerCorrect","inputClass","Fragment","correctAnswerAudioUrl","questionHint","newSession","nextTaskIndex","nextTaskId","originalOptions","originalCorrectAnswer","indices","_","j","newCorrectIndex","handleSkipTask","handlePracticeSessionClick","StatCard","subtitle","color","Button","loading","startIcon","endIcon","LoadingSpinner","spinnerSize","SessionResults","onClose","onStartNew","accuracy","averageTime","performanceRating","performanceColor","formatTime","seconds","mins","secs","MasteryBar","Dashboard","stats","setStats","isLoading","setIsLoading","loadDashboardStats","allSessions","completedSessions","topicMap","srItems","totalQuestions","accuracyRate","totalStudyTime","averageSessionTime","topicStatsMap","topicStats","topicProgress","mastered","learning","upcomingReviews","recentSessions","aTime","hours","minutes","formatDate","TopicCard","onSelect","dataTestId","isHovered","setIsHovered","cardStyle","resolveTimezone","DEFAULT_APP_SETTINGS","clamp","isThemeMode","isFontScale","isPlaybackRate","isLearningAlgorithm","isConfettiStyle","isConfettiIntensity","isAIDepth","isDataStorageMode","isInterfaceLanguage","isDateFormat","sanitizeThemeSettings","raw","sanitizeAudioPreferences","repeats","repeatsValue","delay","volume","sanitizeLearningPreferences","dailyGoal","sessionSize","sanitizeNotificationPreferences","time","sanitizeInteractionPreferences","sanitizeAISettings","dailyUsageLimit","usageToday","sanitizePrivacySettings","sanitizeLanguageSettings","sanitizeDatabaseMetadata","lastUpdatedAt","storageUsage","validateAppSettings","candidate","version","lastSavedAt","resolveEffectiveTheme","mode","applyFontScale","scale","map","applyReducedMotion","enabled","applyTheme","themeMode","effective","SettingsService","updater","defaults","payload","json","validated","estimate","detail","settingsService","SAVE_STATE_RESET_DELAY","useAppSettings","setLoading","saveState","setSaveState","storageEstimate","setStorageEstimate","timeoutRef","settingsRef","loaded","scheduleResetSaveState","updateSettings","saved","resetSettings","reset","exportSettings","importSettingsFromText","imported","refreshStorageEstimate","formatBytes","bytes","units","formatDateTime","PRESETS","SettingsPage","updateAudioSettings","searchQuery","setSearchQuery","fileInputRef","showImportError","setShowImportError","handleThemeModeChange","handleFontScaleChange","fontScale","handleAudioUpdate","mirrored","handleDatabaseMetadataUpdate","handlePreset","presetId","preset","handleExport","blob","link","handleImport","file","reader","filteredSections","databaseSection","themeSection","audioSection","infoSection","section","CollapsibleSection","expanded","setExpanded","App","setTopics","selectedTopic","setSelectedTopic","setLearningPaths","learningPathTaskCounts","setLearningPathTaskCounts","selectedLearningPath","setSelectedLearningPath","inSession","setInSession","completedSession","setCompletedSession","showDashboard","setShowDashboard","showSessionConfig","setShowSessionConfig","setSessionConfig","showSettings","setShowSettings","setThemeMode","initStarted","initializeApp","handleReseedEvent","_event","reseedDatabase","handleResetEvent","handleFullReset","handler","cycleThemeMode","order","currentIndex","nextMode","themeLabel","deploymentVersion","buildTime","DB_VERSION","currentVersion","topicCount","taskCount","loadedTopics","selectTopic","paths","taskCounts","showConfigScreen","startPracticeSession","cancelSessionConfig","handleSessionComplete","sessions","handleSessionCancel","handleCloseResults","handleStartNewSession","showNotification","storageUsageBytes","topicToCardTopic","ReactDOM"],"mappings":";;;;;;;;GASa,IAAIA,GAAEC,EAAiBC,GAAE,OAAO,IAAI,eAAe,EAAEC,GAAE,OAAO,IAAI,gBAAgB,EAAEC,GAAE,OAAO,UAAU,eAAeC,GAAEL,GAAE,mDAAmD,kBAAkBM,GAAE,CAAC,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,SAAS,EAAE,EAClP,SAASC,GAAEC,EAAEC,EAAEC,EAAE,CAAC,IAAIC,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAcJ,IAAT,SAAaG,EAAE,GAAGH,GAAYD,EAAE,MAAX,SAAiBI,EAAE,GAAGJ,EAAE,KAAcA,EAAE,MAAX,SAAiBK,EAAEL,EAAE,KAAK,IAAIE,KAAKF,EAAEL,GAAE,KAAKK,EAAEE,CAAC,GAAG,CAACL,GAAE,eAAeK,CAAC,IAAIC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,GAAGH,GAAGA,EAAE,aAAa,IAAIG,KAAKF,EAAED,EAAE,aAAaC,EAAWG,EAAED,CAAC,aAAIC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,MAAM,CAAC,SAAST,GAAE,KAAKM,EAAE,IAAIK,EAAE,IAAIC,EAAE,MAAMF,EAAE,OAAOP,GAAE,OAAO,CAAC,aAAkBF,GAAEY,GAAA,IAAYR,GAAEQ,GAAA,KAAaR,GCPxWS,GAAA,QAAiBf,0BCDfG,GAAIH,GAENgB,GAAA,WAAqBb,GAAE,WACvBa,GAAA,YAAsBb,GAAE,YCSnB,MAAMc,WAA2BC,EAAM,CAE5C,OACA,cACA,MACA,cACA,aACA,iBACA,iBAEA,aAAc,CAGZ,MADe,wBACH,EAEZ,KAAK,QAAQ,CAAC,EAAE,OAAO,CACrB,OAAQ,iCACR,cAAe,+CACf,MAAO,+FACP,cAAe,8CACf,aAAc,wDACd,iBAAkB,8EAClB,iBAAkB,gEAAA,CACnB,CACH,CACF,CAGO,MAAMC,EAAK,IAAIF,GC5BtB,eAAsBG,IAInB,CACD,MAAMC,MAAiC,IACjCC,EAAgC,CAAA,EAChCC,EAAgB,CAAA,EAGhBC,EAA8C,CAClD,WAAY,CAAC,sBAAuB,uBAAwB,sBAAuB,yBAAyB,EAC5G,SAAU,CAAC,oBAAqB,qBAAqB,EACrD,SAAU,CAAC,2BAA4B,+BAAgC,6BAA8B,2BAA4B,+BAA+B,EAChK,KAAM,CAAC,qBAAqB,CAAA,EAI9B,SAAW,CAACC,EAASC,CAAK,IAAK,OAAO,QAAQF,CAAiB,EAAG,CAEhE,GAAI,CAACH,EAAO,IAAII,CAAO,EAAG,CACxB,MAAME,EAAeC,GAAkBH,CAAO,EAC9CJ,EAAO,IAAII,EAASE,CAAK,CAC3B,CAGA,UAAWE,KAAYH,EACrB,GAAI,CAGF,MAAMI,EAAO,0CAA4BL,CAAO,IAAII,CAAQ,GACtDE,EAAW,MAAM,MAAMD,CAAI,EAEjC,GAAI,CAACC,EAAS,GAAI,CAChB,QAAQ,KAAK,kBAAkBD,CAAI,KAAKC,EAAS,MAAM,EAAE,EACzD,QACF,CAEA,MAAMC,EAAyB,MAAMD,EAAS,KAAA,EAGxCE,EAAUD,EAAK,MAAM,IAAKE,GAASA,EAAK,EAAE,EAG1CC,EAA6B,CACjC,GAAGH,EAAK,aACR,QAAAC,EACA,UAAWD,EAAK,aAAa,UAAY,IAAI,KAAKA,EAAK,aAAa,SAAS,EAAI,IAAI,KAAK,YAAY,EACtG,UAAWA,EAAK,aAAa,UAAY,IAAI,KAAKA,EAAK,aAAa,SAAS,EAAI,IAAI,KAAK,YAAY,CAAA,EAExGV,EAAc,KAAKa,CAAY,EAG/B,MAAMR,EAAQN,EAAO,IAAII,CAAO,EAC3BE,EAAM,gBAAgB,SAASQ,EAAa,EAAE,GACjDR,EAAM,gBAAgB,KAAKQ,EAAa,EAAE,EAI5C,UAAWC,KAAYJ,EAAK,MAAO,CACjC,MAAME,EAAa,CACjB,GAAGE,EACH,UAAW,IAAI,KAAK,YAAY,EAChC,UAAW,IAAI,KAAK,YAAY,CAAA,EAElCb,EAAM,KAAKW,CAAI,CACjB,CACF,OAASG,EAAO,CACd,QAAQ,MAAM,gCAAgCZ,CAAO,IAAII,CAAQ,IAAKQ,CAAK,CAC7E,CAEJ,CAEA,MAAO,CACL,OAAQ,MAAM,KAAKhB,EAAO,QAAQ,EAClC,cAAAC,EACA,MAAAC,CAAA,CAEJ,CAKA,SAASK,GAAkBH,EAAwB,CAgEjD,MAAMa,EA/D8C,CAClD,KAAM,CACJ,GAAI,OACJ,MAAO,cACP,YAAa,gDACb,SAAU,CACR,eAAgB,EAChB,gBAAiB,WACjB,cAAe,CAAA,CAAC,CAClB,EAEF,WAAY,CACV,GAAI,aACJ,MAAO,aACP,YAAa,yDACb,SAAU,CACR,eAAgB,GAChB,gBAAiB,eACjB,cAAe,CAAA,CAAC,CAClB,EAEF,SAAU,CACR,GAAI,WACJ,MAAO,WACP,YAAa,6DACb,SAAU,CACR,eAAgB,GAChB,gBAAiB,WACjB,cAAe,CAAA,CAAC,CAClB,EAEF,SAAU,CACR,GAAI,WACJ,MAAO,WACP,YAAa,uDACb,SAAU,CACR,eAAgB,GAChB,gBAAiB,WACjB,cAAe,CAAA,CAAC,CAClB,EAEF,OAAQ,CACN,GAAI,SACJ,MAAO,SACP,YAAa,wDACb,SAAU,CACR,eAAgB,GAChB,gBAAiB,eACjB,cAAe,CAAA,CAAC,CAClB,EAEF,OAAQ,CACN,GAAI,SACJ,MAAO,SACP,YAAa,yDACb,SAAU,CACR,eAAgB,GAChB,gBAAiB,eACjB,cAAe,CAAA,CAAC,CAClB,CACF,EAGyBb,CAAO,GAAK,CACrC,GAAIA,EACJ,MAAOA,EAAQ,OAAO,CAAC,EAAE,cAAgBA,EAAQ,MAAM,CAAC,EACxD,YAAa,uBAAuBA,CAAO,GAC3C,SAAU,CACR,eAAgB,GAChB,gBAAiB,WACjB,cAAe,CAAA,CAAC,CAClB,EAGF,MAAO,CACL,GAAIa,EAAO,GACX,MAAOA,EAAO,MACd,YAAaA,EAAO,YACpB,gBAAiB,CAAA,EACjB,SAAU,GACV,SAAUA,EAAO,SACjB,UAAW,IAAI,KAAK,YAAY,EAChC,UAAW,IAAI,KAAK,YAAY,CAAA,CAEpC,CC5KA,eAAsBC,GAAapB,EAAwB,CAEzD,QAAQ,IAAI,mCAAmC,EAC/C,MAAMqB,EAAe,MAAMrB,EAAG,OAAO,MAAA,EAC/BsB,EAAc,MAAMtB,EAAG,cAAc,MAAA,EACrCuB,EAAc,MAAMvB,EAAG,MAAM,MAAA,EACnC,QAAQ,IAAI,iBAAiBqB,CAAY,YAAYC,CAAW,WAAWC,CAAW,QAAQ,EAE9F,MAAMvB,EAAG,OAAO,MAAA,EAChB,MAAMA,EAAG,cAAc,MAAA,EACvB,MAAMA,EAAG,MAAM,MAAA,EAEf,MAAMwB,EAAa,MAAMxB,EAAG,MAAM,MAAA,EAClC,QAAQ,IAAI,gBAAgBwB,CAAU,kBAAkB,EAGxD,QAAQ,IAAI,8CAA8C,EAC1D,MAAMX,EAAO,MAAMZ,GAAA,EAEnB,GAAIY,EAAK,OAAO,SAAW,EACzB,MAAM,IAAI,MAAM,wCAAwC,EAG1D,QAAQ,IAAI,uBAAuBA,EAAK,OAAO,MAAM,YAAYA,EAAK,cAAc,MAAM,oBAAoBA,EAAK,MAAM,MAAM,QAAQ,EACvI,QAAQ,IAAI,UAAWA,EAAK,OAAO,IAAIY,GAAKA,EAAE,EAAE,CAAC,EACjD,QAAQ,IAAI,kBAAmBZ,EAAK,cAAc,IAAIa,GAAM,GAAGA,EAAG,EAAE,KAAKA,EAAG,SAAS,QAAU,CAAC,WAAW,CAAC,EAC5G,QAAQ,IAAI,SAAUb,EAAK,MAAM,IAAIY,GAAK,GAAGA,EAAE,EAAE,qBAAqBA,EAAE,cAAc,GAAG,CAAC,EAE1F,GAAI,CACF,MAAMzB,EAAG,OAAO,QAAQa,EAAK,MAAM,EACnC,QAAQ,IAAI,gBAAgB,CAC9B,MAAmB,CACjB,QAAQ,IAAI,6CAA6C,EACzD,MAAMb,EAAG,OAAO,QAAQa,EAAK,MAAM,EACnC,QAAQ,IAAI,kBAAkB,CAChC,CAEA,GAAI,CACF,MAAMb,EAAG,cAAc,QAAQa,EAAK,aAAa,EACjD,QAAQ,IAAI,wBAAwB,CACtC,MAAmB,CACjB,QAAQ,IAAI,qDAAqD,EACjE,MAAMb,EAAG,cAAc,QAAQa,EAAK,aAAa,EACjD,QAAQ,IAAI,0BAA0B,CACxC,CAEA,GAAI,CACF,MAAMb,EAAG,MAAM,QAAQa,EAAK,KAAK,EACjC,QAAQ,IAAI,eAAe,CAC7B,OAASc,EAAU,CACjB,QAAQ,MAAM,qCAAsCA,EAAI,OAAO,EAC/D,QAAQ,IAAI,yDAAyD,EACrE,GAAI,CACF,MAAM3B,EAAG,MAAM,QAAQa,EAAK,KAAK,EACjC,QAAQ,IAAI,8BAA8B,CAC5C,OAASe,EAAa,CACpB,QAAQ,MAAM,wBAAyBA,EAAO,OAAO,CACvD,CACF,CAEA,QAAQ,IACN,uBAAuBf,EAAK,OAAO,MAAM,YAAYA,EAAK,cAAc,MAAM,oBAAoBA,EAAK,MAAM,MAAM,QAAA,EAIrH,MAAMgB,EAAc,MAAM7B,EAAG,OAAO,MAAA,EAC9B8B,EAAa,MAAM9B,EAAG,cAAc,MAAA,EACpC+B,EAAa,MAAM/B,EAAG,MAAM,MAAA,EAClC,QAAQ,IAAI,qBAAqB6B,CAAW,YAAYC,CAAU,oBAAoBC,CAAU,QAAQ,CAC1G,CCwWO,MAAMC,WAA8B,KAAM,CAC/C,YACEC,EACOC,EACAC,EACP,CACA,MAAMF,CAAO,EAHN,KAAA,KAAAC,EACA,KAAA,QAAAC,EAGP,KAAK,KAAO,uBACd,CACF,CAEO,MAAMC,WAAwBJ,EAAsB,CACzD,YAAYC,EAAiBE,EAA+B,CAC1D,MAAMF,EAAS,mBAAoBE,CAAO,EAC1C,KAAK,KAAO,iBACd,CACF,CAEO,MAAME,WAAsBL,EAAsB,CACvD,YAAYM,EAAkBC,EAAY,CACxC,MAAM,GAAGD,CAAQ,YAAYC,CAAE,aAAc,YAAa,CAAE,SAAAD,EAAU,GAAAC,EAAI,EAC1E,KAAK,KAAO,eACd,CACF,CCzcO,MAAMC,EAAiD,CAC5D,GACA,cAOA,UASA,QAMA,UACA,UAEA,YACE3B,EAIA,CACA2B,GAAsB,SAAS3B,CAAI,EAEnC,KAAK,GAAKA,EAAK,GACf,KAAK,cAAgB,CAAE,GAAGA,EAAK,cAAe,gBAAiB,CAAC,GAAGA,EAAK,cAAc,eAAe,CAAA,EACrG,KAAK,UAAY,CACf,QAAS,CAAC,GAAGA,EAAK,UAAU,OAAO,EACnC,eAAgBA,EAAK,UAAU,eAC/B,aAAcA,EAAK,UAAU,aAC7B,OAAQA,EAAK,UAAU,OACvB,eAAgBA,EAAK,UAAU,cAAA,EAE7BA,EAAK,UAAU,YACjB,KAAK,UAAU,UAAY,IAAI,KAAKA,EAAK,UAAU,SAAS,GAE1DA,EAAK,UAAU,cACjB,KAAK,UAAU,YAAc,IAAI,KAAKA,EAAK,UAAU,WAAW,GAElE,KAAK,QAAU,CACb,GAAGA,EAAK,QACR,uBAAwB,CAAE,GAAGA,EAAK,QAAQ,sBAAA,EAC1C,iBAAkB,CAAC,GAAGA,EAAK,QAAQ,gBAAgB,CAAA,EAErD,KAAK,UAAYA,EAAK,WAAa,IAAI,KACvC,KAAK,UAAYA,EAAK,WAAa,IAAI,IACzC,CAKA,OAAO,SAASA,EAAsC,CAEpD,GAAIA,EAAK,eAAe,cAAgB,SAClCA,EAAK,cAAc,YAAc,GAAKA,EAAK,cAAc,YAAc,IACzE,MAAM,IAAIuB,GAAgB,wCAAyC,CACjE,MAAO,cACP,MAAOvB,EAAK,cAAc,WAAA,CAC3B,EAKL,GAAIA,EAAK,WAAW,SAAW,OAAW,CACxC,MAAM4B,EAAgB,CAAC,UAAW,SAAU,SAAU,YAAa,WAAW,EAC9E,GAAI,CAACA,EAAc,SAAS5B,EAAK,UAAU,MAAM,EAC/C,MAAM,IAAIuB,GAAgB,yBAA0B,CAClD,MAAO,SACP,MAAOvB,EAAK,UAAU,OACtB,YAAa4B,CAAA,CACd,CAEL,CACF,CAKA,OAAO,OACLF,EACAjC,EACAoC,EACA5B,EACAK,EAKuB,CACvB,MAAMwB,EAAkD,CACtD,QAAArC,EACA,gBAAAoC,EACA,YAAavB,EAAO,YACpB,cAAeA,EAAO,aAAA,EAExB,OAAIA,EAAO,mBACTwB,EAAc,iBAAmBxB,EAAO,kBAGnC,IAAIqB,GAAsB,CAC/B,GAAAD,EACA,cAAAI,EACA,UAAW,CACT,QAAA7B,EACA,eAAgB,EAChB,aAAc,EACd,OAAQ,UACR,eAAgB,CAAA,EAElB,QAAS,CACP,SAAU,EACV,YAAa,EACb,uBAAwB,CAAA,EACxB,iBAAkB,CAAA,CAAC,CACrB,CACD,CACH,CAKA,OAAc,CACZ,GAAI,KAAK,UAAU,SAAW,WAAa,KAAK,UAAU,SAAW,SACnE,MAAM,IAAI,MAAM,2CAA2C,EAG7D,KAAK,UAAU,OAAS,SACnB,KAAK,UAAU,YAClB,KAAK,UAAU,UAAY,IAAI,MAEjC,KAAK,cAAgB,IACvB,CAKA,OAAc,CACZ,GAAI,KAAK,UAAU,SAAW,SAC5B,MAAM,IAAI,MAAM,gCAAgC,EAGlD,KAAK,UAAU,OAAS,SACxB,KAAK,cAAgB,IACvB,CAKA,QAAe,CACb,GAAI,KAAK,UAAU,SAAW,SAC5B,MAAM,IAAI,MAAM,iCAAiC,EAGnD,KAAK,UAAU,OAAS,SACxB,KAAK,cAAgB,IACvB,CAKA,aAAa8B,EAAoBC,EAAyB,CACxD,GAAI,KAAK,UAAU,SAAW,SAC5B,MAAM,IAAI,MAAM,0CAA0C,EAG5D,KAAK,UAAU,iBACXD,GACF,KAAK,UAAU,eAEjB,KAAK,UAAU,gBAAkBC,EAGjC,KAAK,cAAA,EACL,KAAK,cAAgB,IACvB,CAKA,UAAiB,CACf,GAAI,KAAK,UAAU,SAAW,aAAe,KAAK,UAAU,SAAW,YACrE,MAAM,IAAI,MAAM,2BAA2B,EAG7C,KAAK,UAAU,OAAS,YACxB,KAAK,UAAU,YAAc,IAAI,KACjC,KAAK,cAAA,EACL,KAAK,cAAgB,IACvB,CAKA,SAAgB,CACd,GAAI,KAAK,UAAU,SAAW,aAAe,KAAK,UAAU,SAAW,YACrE,MAAM,IAAI,MAAM,2BAA2B,EAG7C,KAAK,UAAU,OAAS,YACxB,KAAK,cAAgB,IACvB,CAKQ,eAAsB,CAExB,KAAK,UAAU,eAAiB,IAClC,KAAK,QAAQ,SAAY,KAAK,UAAU,aAAe,KAAK,UAAU,eAAkB,KAItF,KAAK,UAAU,eAAiB,IAClC,KAAK,QAAQ,YAAc,KAAK,UAAU,eAAiB,KAAK,UAAU,eAE9E,CAKA,aAAsB,CACpB,OAAQ,KAAK,UAAU,eAAiB,KAAK,cAAc,YAAe,GAC5E,CAKA,YAAsB,CACpB,OAAO,KAAK,UAAU,gBAAkB,KAAK,cAAc,WAC7D,CAKA,mBAA4B,CAC1B,OAAO,KAAK,IAAI,EAAG,KAAK,cAAc,YAAc,KAAK,UAAU,cAAc,CACnF,CAKA,QAA0B,CACxB,MAAMC,EAA0B,CAC9B,GAAI,KAAK,GACT,cAAe,CACb,GAAG,KAAK,cACR,gBAAiB,CAAC,GAAG,KAAK,cAAc,eAAe,CAAA,EAEzD,UAAW,CACT,GAAG,KAAK,UACR,QAAS,CAAC,GAAG,KAAK,UAAU,OAAO,CAAA,EAErC,QAAS,CACP,GAAG,KAAK,QACR,uBAAwB,CAAE,GAAG,KAAK,QAAQ,sBAAA,EAC1C,iBAAkB,CAAC,GAAG,KAAK,QAAQ,gBAAgB,CAAA,EAErD,UAAW,KAAK,UAChB,UAAW,KAAK,SAAA,EAGlB,OAAI,KAAK,cAAc,mBACrBA,EAAO,cAAc,iBAAmB,KAAK,cAAc,kBAEzD,KAAK,UAAU,YACjBA,EAAO,UAAU,UAAY,KAAK,UAAU,WAE1C,KAAK,UAAU,cACjBA,EAAO,UAAU,YAAc,KAAK,UAAU,aAGzCA,CACT,CAKA,OAAO,SAASjC,EAA8C,CAC5D,OAAO,IAAI2B,GAAsB3B,CAAI,CACvC,CACF,CCxRO,MAAMkC,EAA0D,CACrE,YACUC,EACAC,EACAC,EACR,CAHQ,KAAA,kBAAAF,EACA,KAAA,eAAAC,EACA,KAAA,oBAAAC,CACP,CAKH,MAAM,cAAc/B,EAAwD,CAE1E,MAAML,EAAU,MAAM,KAAK,sBAAsBK,CAAM,EAGjDgC,EAAY,WAAW,KAAK,IAAA,CAAK,IAAI,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAAC,GAC5EC,EAIF,CACF,YAAajC,EAAO,YACpB,cAAeA,EAAO,aAAA,EAEpBA,EAAO,mBACTiC,EAAc,iBAAmBjC,EAAO,kBAG1C,MAAMkC,EAAgBb,GAAsB,OAC1CW,EACAhC,EAAO,QACPA,EAAO,gBACPL,EACAsC,CAAA,EAIF,OAAO,MAAM,KAAK,kBAAkB,OAAOC,EAAc,QAAQ,CACnE,CAKA,MAAM,WAAWd,EAA6C,CAC5D,OAAO,MAAM,KAAK,kBAAkB,QAAQA,CAAE,CAChD,CAKA,MAAM,cAAcA,EAAYe,EAAkD,CAChF,MAAM,KAAK,kBAAkB,OAAOf,EAAIe,CAAO,CACjD,CAKA,MAAM,gBAAgBf,EAAsC,CAC1D,MAAMgB,EAAU,MAAM,KAAK,kBAAkB,QAAQhB,CAAE,EACvD,GAAI,CAACgB,EACH,MAAM,IAAIlB,GAAc,kBAAmBE,CAAE,EAG/C,MAAMc,EAAgBb,GAAsB,SAASe,CAAO,EAC5D,OAAAF,EAAc,SAAA,EAEP,MAAM,KAAK,kBAAkB,OAAOd,EAAIc,EAAc,QAAQ,CACvE,CAKA,MAAM,aAAad,EAA2B,CAC5C,MAAMgB,EAAU,MAAM,KAAK,kBAAkB,QAAQhB,CAAE,EACvD,GAAI,CAACgB,EACH,MAAM,IAAIlB,GAAc,kBAAmBE,CAAE,EAG/C,MAAMc,EAAgBb,GAAsB,SAASe,CAAO,EAC5DF,EAAc,MAAA,EAEd,MAAM,KAAK,kBAAkB,OAAOd,EAAIc,EAAc,QAAQ,CAChE,CAKA,MAAM,cAAcd,EAA2B,CAC7C,MAAMgB,EAAU,MAAM,KAAK,kBAAkB,QAAQhB,CAAE,EACvD,GAAI,CAACgB,EACH,MAAM,IAAIlB,GAAc,kBAAmBE,CAAE,EAG/C,MAAMc,EAAgBb,GAAsB,SAASe,CAAO,EAC5DF,EAAc,OAAA,EAEd,MAAM,KAAK,kBAAkB,OAAOd,EAAIc,EAAc,QAAQ,CAChE,CAKA,MAAM,eAAed,EAA2B,CAC9C,MAAMgB,EAAU,MAAM,KAAK,kBAAkB,QAAQhB,CAAE,EACvD,GAAI,CAACgB,EACH,MAAM,IAAIlB,GAAc,kBAAmBE,CAAE,EAG/C,MAAMc,EAAgBb,GAAsB,SAASe,CAAO,EAC5DF,EAAc,QAAA,EAEd,MAAM,KAAK,kBAAkB,OAAOd,EAAIc,EAAc,QAAQ,CAChE,CAKA,MAAM,kBAAkBG,EAA4C,CAClE,OAAO,MAAM,KAAK,kBAAkB,UAAUA,CAAM,CACtD,CAKA,MAAM,kBAAkBA,EAAgBC,EAA2C,CACjF,OAAO,MAAM,KAAK,kBAAkB,UAAUD,EAAQC,CAAK,CAC7D,CAKA,MAAM,oBACJN,EACAP,EACAC,EACe,CACf,MAAMU,EAAU,MAAM,KAAK,kBAAkB,QAAQJ,CAAS,EAC9D,GAAI,CAACI,EACH,MAAM,IAAIlB,GAAc,kBAAmBc,CAAS,EAGtD,MAAME,EAAgBb,GAAsB,SAASe,CAAO,EAGxDF,EAAc,UAAU,SAAW,WACrCA,EAAc,MAAA,EAGhBA,EAAc,aAAaT,EAAWC,CAAS,EAG3CQ,EAAc,cAChBA,EAAc,SAAA,EAGhB,MAAM,KAAK,kBAAkB,OAAOF,EAAWE,EAAc,QAAQ,CACvE,CAKA,MAAc,sBAAsBlC,EAAiD,CACnF,MAAMuC,EAA4B,CAAA,EAClC,IAAIC,EAAiBxC,EAAO,YAK5B,GAHA,QAAQ,IAAI,gCAAgCA,EAAO,WAAW,mBAAmBA,EAAO,gBAAgB,KAAK,GAAG,CAAC,EAAE,EAG/GA,EAAO,eAAiBwC,EAAiB,EAAG,CAC9C,MAAMC,EAAW,MAAM,KAAK,oBAAoB,OAAO,IAAI,IAAM,EAC3DC,EAAgBD,EACnB,MAAM,EAAG,KAAK,IAAIA,EAAS,OAAQ,KAAK,KAAKzC,EAAO,YAAc,EAAG,CAAC,CAAC,EACvE,IAAK2C,GAASA,EAAK,MAAM,EAE5B,QAAQ,IAAI,uBAAuBD,EAAc,MAAM,EAAE,EACzDH,EAAgB,KAAK,GAAGG,CAAa,EACrCF,GAAkBE,EAAc,MAClC,CAGA,GAAIF,EAAiB,EAAG,CACtB,MAAMI,EAAe,CACnB,gBAAiB5C,EAAO,gBACxB,WAAYuC,CAAA,EAEVvC,EAAO,mBACT4C,EAAQ,WAAa5C,EAAO,kBAG9B,QAAQ,IAAI,cAAcwC,CAAc,2BAA4BI,CAAO,EAC3E,MAAMC,EAAW,MAAM,KAAK,eAAe,eAAeL,EAAgBI,CAAO,EACjF,QAAQ,IAAI,OAAOC,EAAS,MAAM,UAAWA,EAAS,IAAIvC,GAAKA,EAAE,EAAE,CAAC,EAEpEiC,EAAgB,KAAK,GAAGM,EAAS,IAAKjD,GAASA,EAAK,EAAE,CAAC,CACzD,CAEA,eAAQ,IAAI,yBAAyB2C,EAAgB,MAAM,EAAE,EACtDA,CACT,CACF,CClNO,MAAMO,EAA2D,CACtE,GACA,OACA,UAKA,SAMA,YAMA,SAKA,UACA,UAEA,YACEpD,EAIA,CACAoD,GAA2B,SAASpD,CAAI,EAExC,KAAK,GAAKA,EAAK,GACf,KAAK,OAASA,EAAK,OACnB,KAAK,UAAY,CAAE,GAAGA,EAAK,SAAA,EAC3B,KAAK,SAAW,CAAE,GAAGA,EAAK,SAAU,WAAY,IAAI,KAAKA,EAAK,SAAS,UAAU,CAAA,EAC7EA,EAAK,SAAS,eAChB,KAAK,SAAS,aAAe,IAAI,KAAKA,EAAK,SAAS,YAAY,GAElE,KAAK,YAAc,CAAE,GAAGA,EAAK,WAAA,EAC7B,KAAK,SAAW,CAAE,GAAGA,EAAK,SAAU,WAAY,IAAI,KAAKA,EAAK,SAAS,UAAU,CAAA,EACjF,KAAK,UAAYA,EAAK,WAAa,IAAI,KACvC,KAAK,UAAYA,EAAK,WAAa,IAAI,IACzC,CAKA,OAAO,SAASA,EAA2C,CAEzD,GAAIA,EAAK,WAAW,UAAY,SAC1BA,EAAK,UAAU,QAAU,KAAOA,EAAK,UAAU,QAAU,KAC3D,MAAM,IAAIuB,GAAgB,sCAAuC,CAC/D,MAAO,UACP,MAAOvB,EAAK,UAAU,OAAA,CACvB,EAKL,GAAIA,EAAK,WAAW,WAAa,SAC3BA,EAAK,UAAU,SAAW,GAAKA,EAAK,UAAU,SAAW,KAC3D,MAAM,IAAIuB,GAAgB,0CAA2C,CACnE,MAAO,WACP,MAAOvB,EAAK,UAAU,QAAA,CACvB,EAKL,GAAIA,EAAK,aAAa,YAAc,SAC9BA,EAAK,YAAY,UAAY,GAAKA,EAAK,YAAY,UAAY,GACjE,MAAM,IAAIuB,GAAgB,gCAAiC,CACzD,MAAO,YACP,MAAOvB,EAAK,YAAY,SAAA,CACzB,EAKL,GAAIA,EAAK,aAAa,kBAAoB,SACpCA,EAAK,YAAY,gBAAkB,GAAKA,EAAK,YAAY,gBAAkB,KAC7E,MAAM,IAAIuB,GAAgB,6CAA8C,CACtE,MAAO,kBACP,MAAOvB,EAAK,YAAY,eAAA,CACzB,CAGP,CAKA,OAAO,UAAUqD,EAAgB3B,EAAwC,CACvE,OAAO,IAAI0B,GAA2B,CACpC,GAAA1B,EACA,OAAA2B,EACA,UAAW,CACT,SAAU,EACV,WAAY,EACZ,QAAS,GAAA,EAEX,SAAU,CACR,WAAY,IAAI,KAAK,KAAK,MAAQ,GAAK,GAAK,GAAK,GAAI,EACrD,aAAc,EACd,mBAAoB,CAAA,EAEtB,YAAa,CACX,gBAAiB,EACjB,YAAa,EACb,iBAAkB,EAClB,UAAW,CAAA,EAEb,SAAU,CACR,eAAgB,KAChB,UAAW,GACX,WAAY,CAAA,CACd,CACD,CACH,CAOA,aAAaC,EAAetB,EAAyB,CACnD,GAAIsB,EAAQ,GAAKA,EAAQ,EACvB,MAAM,IAAI/B,GAAgB,gCAAiC,CACzD,MAAO,QACP,MAAO+B,CAAA,CACR,EAaH,GATA,KAAK,YAAY,UAAYA,EAC7B,KAAK,sBAAsBA,GAAS,CAAC,EACrC,KAAK,kBAAkBtB,CAAS,EAGhC,KAAK,SAAS,eACd,KAAK,SAAS,aAAe,IAAI,KAG7BsB,EAAQ,EAEV,KAAK,UAAU,WAAa,EAC5B,KAAK,UAAU,SAAW,EAC1B,KAAK,SAAS,mBAAqB,EACnC,KAAK,SAAS,aACd,KAAK,SAAS,UAAY,OACrB,CAEL,KAAK,SAAS,qBAId,MAAMC,EAAgB,IAAO,EAAID,IAAU,KAAQ,EAAIA,GAAS,KAChE,KAAK,UAAU,QAAU,KAAK,IAAI,IAAK,KAAK,UAAU,QAAUC,CAAa,EAC7E,KAAK,UAAU,QAAU,KAAK,IAAI,IAAK,KAAK,UAAU,OAAO,EAGzD,KAAK,UAAU,aAAe,EAChC,KAAK,UAAU,SAAW,EACjB,KAAK,UAAU,aAAe,EACvC,KAAK,UAAU,SAAW,EAE1B,KAAK,UAAU,SAAW,KAAK,MAAM,KAAK,UAAU,SAAW,KAAK,UAAU,OAAO,EAIvF,KAAK,UAAU,SAAW,KAAK,IAAI,IAAK,KAAK,UAAU,QAAQ,EAE/D,KAAK,UAAU,aAGX,KAAK,UAAU,YAAc,IAC/B,KAAK,SAAS,UAAY,GAE9B,CAGA,KAAK,SAAS,WAAa,IAAI,KAC7B,KAAK,MAAQ,KAAK,UAAU,SAAW,GAAK,GAAK,GAAK,GAAA,EAGxD,KAAK,cAAgB,IACvB,CAKQ,sBAAsBC,EAAwB,CACpD,MAAMC,EAAe,KAAK,SAAS,aAE7BC,EADc,KAAK,YAAY,gBAAkB,KAAQD,EAAe,IACjDD,EAAU,EAAI,GAC3C,KAAK,YAAY,gBAAmBE,EAASD,EAAgB,GAC/D,CAKQ,kBAAkBzB,EAAyB,CACjD,MAAMyB,EAAe,KAAK,SAAS,aAE7BC,EADa,KAAK,YAAY,aAAeD,EAAe,GACtCzB,EAC5B,KAAK,YAAY,YAAc0B,EAASD,CAC1C,CAKA,OAAiB,CACf,OAAO,KAAK,SAAS,WAAW,QAAA,GAAa,KAAK,IAAA,CACpD,CAKA,iBAA0B,CACxB,MAAME,EAAO,KAAK,SAAS,WAAW,QAAA,EAAY,KAAK,IAAA,EACvD,OAAO,KAAK,KAAKA,GAAQ,GAAK,GAAK,GAAK,IAAK,CAC/C,CAKA,QAA+B,CAC7B,MAAM1B,EAA+B,CACnC,GAAI,KAAK,GACT,OAAQ,KAAK,OACb,UAAW,CAAE,GAAG,KAAK,SAAA,EACrB,SAAU,CACR,WAAY,KAAK,SAAS,WAC1B,aAAc,KAAK,SAAS,aAC5B,mBAAoB,KAAK,SAAS,kBAAA,EAEpC,YAAa,CAAE,GAAG,KAAK,WAAA,EACvB,SAAU,CACR,WAAY,KAAK,SAAS,WAC1B,UAAW,KAAK,SAAS,UACzB,WAAY,KAAK,SAAS,UAAA,EAE5B,UAAW,KAAK,UAChB,UAAW,KAAK,SAAA,EAGlB,OAAI,KAAK,SAAS,eAChBA,EAAO,SAAS,aAAe,KAAK,SAAS,cAGxCA,CACT,CAKA,OAAO,SAASjC,EAAwD,CACtE,OAAO,IAAIoD,GAA2BpD,CAAI,CAC5C,CACF,CChQO,MAAM4D,EAA4D,CACvE,YACUvB,EACAD,EACR,CAFQ,KAAA,oBAAAC,EACA,KAAA,eAAAD,CACP,CAKH,MAAM,aAAayB,EAAiBC,EAAgC,CAelE,MAAMC,GAbW,MAAM,KAAK,oBAAoB,OAAO,IAAI,IAAM,GAGpC,KAAK,CAACvF,EAAGE,IAEhCA,EAAE,SAAS,aAAeF,EAAE,SAAS,WAChCE,EAAE,SAAS,WAAaF,EAAE,SAAS,WAGrCA,EAAE,SAAS,WAAW,QAAA,EAAYE,EAAE,SAAS,WAAW,QAAA,CAChE,EAGiC,MAAM,EAAGoF,CAAK,EAG1CvE,EAAgB,CAAA,EACtB,UAAW0D,KAAQc,EAAe,CAChC,MAAM7D,EAAO,MAAM,KAAK,eAAe,QAAQ+C,EAAK,MAAM,EACtD/C,GACFX,EAAM,KAAKW,CAAI,CAEnB,CAEA,OAAOX,CACT,CAKA,MAAM,aAAa8D,EAAgBW,EAAqBV,EAA8B,CAEpF,GAAIA,EAAQ,GAAKA,EAAQ,EACvB,MAAM,IAAI,MAAM,+BAA+B,EAIjD,IAAIW,EAAS,MAAM,KAAK,oBAAoB,YAAYZ,CAAM,EAE9D,GAAI,CAACY,EAAQ,CAEX,MAAMC,EAAUd,GAA2B,UACzCC,EACA,MAAMA,CAAM,IAAI,KAAK,KAAK,EAAA,EAE5BY,EAAS,MAAM,KAAK,oBAAoB,OAAOC,EAAQ,QAAQ,CACjE,CAGA,MAAMC,EAAWf,GAA2B,SAASa,CAAM,EAC3DE,EAAS,aAAab,EAAO,CAAC,EAG9B,MAAM,KAAK,oBAAoB,OAAOW,EAAO,GAAIE,EAAS,QAAQ,CACpE,CAKA,MAAM,kBAAkBd,EAAsD,CAC5E,OAAO,MAAM,KAAK,oBAAoB,YAAYA,CAAM,CAC1D,CAKA,MAAM,YAAYQ,EAAkC,CAClD,MAAMd,EAAW,MAAM,KAAK,oBAAoB,OAAO,IAAI,IAAM,EAE3DxD,EAAgB,CAAA,EACtB,UAAW0D,KAAQF,EAAU,CAC3B,MAAM7C,EAAO,MAAM,KAAK,eAAe,QAAQ+C,EAAK,MAAM,EACtD/C,GACFX,EAAM,KAAKW,CAAI,CAEnB,CAEA,OAAOX,CACT,CAKA,MAAM,kBAAkBsE,EAAiBO,EAAyC,CAChF,MAAMC,EAA6B,CAAA,EAC7BC,MAAU,KAEhB,QAASC,EAAI,EAAGA,EAAIH,EAAMG,IAAK,CAC7B,MAAMC,EAAO,IAAI,KAAKF,CAAG,EACzBE,EAAK,QAAQA,EAAK,QAAA,EAAYD,CAAC,EAC/BC,EAAK,SAAS,GAAI,GAAI,GAAI,GAAG,EAE7B,MAAMC,EAAQ,MAAM,KAAK,oBAAoB,oBAAoBD,CAAI,EAErE,IAAIE,EAAgB,EACpB,UAAWzB,KAAQwB,EAEjBC,GAAiBzB,EAAK,YAAY,aAAe,IAGnDoB,EAAS,KAAK,CACZ,KAAAG,EACA,UAAWC,EAAM,OACjB,cAAe,KAAK,MAAMC,EAAgB,GAAI,CAAA,CAC/C,CACH,CAEA,OAAOL,CACT,CAKA,MAAM,eAAehB,EAAgBsB,EAA8B,CACjE,MAAMV,EAAS,MAAM,KAAK,oBAAoB,YAAYZ,CAAM,EAEhE,GAAI,CAACY,EACH,MAAM,IAAIzC,GAAc,uBAAwB6B,CAAM,EAIxD,MAAM,KAAK,oBAAoB,eAAeY,EAAO,GAAI,CACvD,GAAGA,EAAO,SACV,WAAYU,CAAA,CACb,CACH,CAKA,MAAM,cAAcd,EAMjB,CAGD,MAAMe,EAAW,MAAM,KAAK,oBAAoB,OAAA,EAC1C7B,EAAW,MAAM,KAAK,oBAAoB,OAAO,IAAI,IAAM,EAE3D8B,EAAYD,EAAS,OAAQ3B,GAASA,EAAK,SAAS,SAAS,EAAE,OAC/D6B,EAAgBF,EAAS,OAAO,CAACG,EAAK9B,IAAS8B,EAAM9B,EAAK,UAAU,SAAU,CAAC,EAC/E+B,EAAgBJ,EAAS,OAAO,CAACG,EAAK9B,IAAS8B,EAAM9B,EAAK,YAAY,gBAAiB,CAAC,EAE9F,MAAO,CACL,WAAY2B,EAAS,OACrB,SAAU7B,EAAS,OACnB,UAAA8B,EACA,gBAAiBD,EAAS,OAAS,EAAIE,EAAgBF,EAAS,OAAS,EACzE,gBAAiBA,EAAS,OAAS,EAAII,EAAgBJ,EAAS,OAAS,CAAA,CAE7E,CACF,CCtJO,MAAMK,EAAqD,CAChE,YAAoBC,EAA6B,CAA7B,KAAA,MAAAA,CAA8B,CAElD,MAAM,OAAOvF,EAA8B,CACzC,aAAM,KAAK,MAAM,IAAIA,CAAK,EACnBA,CACT,CAEA,MAAM,QAAQ+B,EAAmC,CAC/C,OAAQ,MAAM,KAAK,MAAM,IAAIA,CAAE,GAAM,IACvC,CAEA,MAAM,QAA2B,CAC/B,OAAO,MAAM,KAAK,MAAM,QAAA,CAC1B,CAEA,MAAM,OAAOA,EAAYe,EAAyC,CAChE,aAAM,KAAK,MAAM,OAAOf,EAAIe,CAAO,EAC3B,MAAM,KAAK,MAAM,IAAIf,CAAE,CACjC,CAEA,MAAM,OAAOA,EAA2B,CACtC,MAAM,KAAK,MAAM,OAAOA,CAAE,CAC5B,CAEA,MAAM,WAA8B,CAClC,OAAO,MAAM,KAAK,MAAM,MAAM,UAAU,EAAE,OAAO,CAAC,EAAE,QAAA,CACtD,CAEA,MAAM,OAAOyD,EAAiC,CAC5C,MAAMC,EAAaD,EAAM,YAAA,EACzB,OAAO,MAAM,KAAK,MACf,OAAQvE,GAAMA,EAAE,MAAM,YAAA,EAAc,SAASwE,CAAU,CAAC,EACxD,QAAA,CACL,CAGA,MAAM,WAAWC,EAAuC,CACtD,OAAO,IACT,CACA,MAAM,WAAWC,EAAoC,CACnD,MAAO,CAAA,CACT,CACA,MAAM,WAAWC,EAAgC,CAAC,CAClD,MAAM,WAAWC,EAA+B,CAAC,CACjD,MAAM,OAAyB,CAC7B,OAAO,MAAM,KAAK,MAAM,MAAA,CAC1B,CACA,MAAM,OAAO9D,EAA8B,CACzC,MAAO,CAAC,CAAE,MAAM,KAAK,MAAM,IAAIA,CAAE,CACnC,CACF,CAKO,MAAM+D,EAAmE,CAC9E,YAAoBP,EAAoC,CAApC,KAAA,MAAAA,CAAqC,CAEzD,MAAM,OAAOpF,EAA2C,CACtD,aAAM,KAAK,MAAM,IAAIA,CAAI,EAClBA,CACT,CAEA,MAAM,QAAQ4B,EAA0C,CACtD,OAAQ,MAAM,KAAK,MAAM,IAAIA,CAAE,GAAM,IACvC,CAEA,MAAM,QAAkC,CACtC,OAAO,MAAM,KAAK,MAAM,QAAA,CAC1B,CAEA,MAAM,OAAOA,EAAYe,EAAuD,CAC9E,aAAM,KAAK,MAAM,OAAOf,EAAIe,CAAO,EAC3B,MAAM,KAAK,MAAM,IAAIf,CAAE,CACjC,CAEA,MAAM,OAAOA,EAA2B,CACtC,MAAM,KAAK,MAAM,OAAOA,CAAE,CAC5B,CAEA,MAAM,aAAajC,EAA0C,CAC3D,OAAO,MAAM,KAAK,MAAM,MAAM,SAAS,EAAE,OAAOA,CAAO,EAAE,QAAA,CAC3D,CAEA,MAAM,gBAAgBiG,EAAiE,CACrF,OAAO,MAAM,KAAK,MAAM,MAAM,YAAY,EAAE,OAAOA,CAAU,EAAE,QAAA,CACjE,CAEA,MAAM,WAAqC,CACzC,OAAO,MAAM,KAAK,MAAM,MAAM,UAAU,EAAE,OAAO,CAAC,EAAE,QAAA,CACtD,CAGA,MAAM,cAAcC,EAAyC,CAC3D,MAAO,CAAA,CACT,CACA,MAAM,WAAWL,EAA2C,CAC1D,MAAO,CAAA,CACT,CACA,MAAM,WAAWC,EAAgC,CAAC,CAClD,MAAM,WAAWC,EAA+B,CAAC,CACjD,MAAM,OAAyB,CAC7B,OAAO,MAAM,KAAK,MAAM,MAAA,CAC1B,CACA,MAAM,OAAO9D,EAA8B,CACzC,MAAO,CAAC,CAAE,MAAM,KAAK,MAAM,IAAIA,CAAE,CACnC,CACF,CAKO,MAAMkE,EAAmD,CAC9D,YAAoBV,EAA4B,CAA5B,KAAA,MAAAA,CAA6B,CAEjD,MAAM,OAAOhF,EAA2B,CACtC,aAAM,KAAK,MAAM,IAAIA,CAAI,EAClBA,CACT,CAEA,MAAM,QAAQwB,EAAkC,CAC9C,OAAQ,MAAM,KAAK,MAAM,IAAIA,CAAE,GAAM,IACvC,CAEA,MAAM,QAA0B,CAC9B,OAAO,MAAM,KAAK,MAAM,QAAA,CAC1B,CAEA,MAAM,OAAOA,EAAYe,EAAuC,CAC9D,aAAM,KAAK,MAAM,OAAOf,EAAIe,CAAO,EAC3B,MAAM,KAAK,MAAM,IAAIf,CAAE,CACjC,CAEA,MAAM,OAAOA,EAA2B,CACtC,MAAM,KAAK,MAAM,OAAOA,CAAE,CAC5B,CAEA,MAAM,oBAAoBmE,EAAyC,CACjE,OAAO,MAAM,KAAK,MAAM,MAAM,gBAAgB,EAAE,OAAOA,CAAc,EAAE,QAAA,CACzE,CAEA,MAAM,eACJ/B,EACAZ,EAKiB,CACjB,QAAQ,IAAI,iDAAiDY,CAAK,aAAcZ,CAAO,EAEvF,IAAI3D,EAaJ,GAZI2D,GAAS,iBACX3D,EAAQ,MAAM,KAAK,MAChB,MAAM,gBAAgB,EACtB,MAAM2D,EAAQ,eAAe,EAC7B,QAAA,EACH,QAAQ,IAAI,0BAA0B3D,EAAM,MAAM,6BAA8B2D,EAAQ,eAAe,EACvG,QAAQ,IAAI,6BAA8B3D,EAAM,IAAIqB,GAAKA,EAAE,EAAE,CAAC,IAE9DrB,EAAQ,MAAM,KAAK,MAAM,QAAA,EACzB,QAAQ,IAAI,0BAA0BA,EAAM,MAAM,oBAAoB,GAGpE2D,GAAS,WAAY,CACvB,MAAM4C,EAAgBvG,EAAM,OAC5BA,EAAQA,EAAM,OAAQqB,GAAM,CAACsC,EAAQ,WAAY,SAAStC,EAAE,EAAE,CAAC,EAC/D,QAAQ,IAAI,yCAAyCkF,CAAa,OAAOvG,EAAM,MAAM,QAAQ,CAC/F,CAGA,MAAMwG,EAAWxG,EAAM,KAAK,IAAM,KAAK,OAAA,EAAW,EAAG,EAG/C0C,EAAiB,CAAA,EACvB,GAAI8D,EAAS,SAAW,EACtB,eAAQ,IAAI,sCAAsC,EAC3C9D,EAGT,QAASsC,EAAI,EAAGA,EAAIT,EAAOS,IAAK,CAC9B,MAAMrE,EAAO6F,EAASxB,EAAIwB,EAAS,MAAM,EACrC7F,GACF+B,EAAO,KAAK/B,CAAI,CAEpB,CAEA,eAAQ,IAAI,8BAA8B+B,EAAO,MAAM,WAAW8D,EAAS,MAAM,8BAA8BjC,CAAK,GAAG,EAChH7B,CACT,CAGA,MAAM,qBAAqBuD,EAAiC,CAC1D,MAAO,CAAA,CACT,CACA,MAAM,UAAUQ,EAAgC,CAC9C,MAAO,CAAA,CACT,CACA,MAAM,gBAAgBC,EAA0D,CAC9E,MAAO,CAAA,CACT,CACA,MAAM,UAAUC,EAAkC,CAChD,MAAO,CAAA,CACT,CACA,MAAM,OAAOP,EAA8B,CACzC,MAAO,CAAA,CACT,CACA,MAAM,WAAWL,EAAmC,CAClD,MAAO,CAAA,CACT,CACA,MAAM,WAAWC,EAAgC,CAAC,CAClD,MAAM,WAAWC,EAA+B,CAAC,CACjD,MAAM,OAAyB,CAC7B,OAAO,MAAM,KAAK,MAAM,MAAA,CAC1B,CACA,MAAM,OAAO9D,EAA8B,CACzC,MAAO,CAAC,CAAE,MAAM,KAAK,MAAM,IAAIA,CAAE,CACnC,CACF,CAKO,MAAMyE,EAAqE,CAChF,YAAoBjB,EAAqC,CAArC,KAAA,MAAAA,CAAsC,CAE1D,MAAM,OAAOkB,EAAgD,CAC3D,aAAM,KAAK,MAAM,IAAIA,CAAO,EACrBA,CACT,CAEA,MAAM,QAAQ1E,EAA2C,CACvD,OAAQ,MAAM,KAAK,MAAM,IAAIA,CAAE,GAAM,IACvC,CAEA,MAAM,QAAmC,CACvC,OAAO,MAAM,KAAK,MAAM,QAAA,CAC1B,CAEA,MAAM,OAAOA,EAAYe,EAAyD,CAChF,aAAM,KAAK,MAAM,OAAOf,EAAIe,CAAO,EAC3B,MAAM,KAAK,MAAM,IAAIf,CAAE,CACjC,CAEA,MAAM,OAAOA,EAA2B,CACtC,MAAM,KAAK,MAAM,OAAOA,CAAE,CAC5B,CAEA,MAAM,YAAY2B,EAA0C,CAC1D,OAAO,MAAM,KAAK,MAAM,MAAM,QAAQ,EAAE,OAAOA,CAAM,EAAE,QAAA,CACzD,CAEA,MAAM,eAAef,EAA6C,CAChE,OAAO,MAAM,KAAK,MAAM,MAAM,WAAW,EAAE,OAAOA,CAAS,EAAE,QAAA,CAC/D,CAGA,MAAM,YAAYuB,EAAiBwC,EAA2C,CAC5E,MAAO,CAAA,CACT,CACA,MAAM,eAAeC,EAAkBC,EAA0C,CAC/E,MAAO,CAAA,CACT,CACA,MAAM,kBAAkBlD,EAA0C,CAChE,OAAO,MAAM,KAAK,MAAM,MAAM,QAAQ,EAAE,OAAOA,CAAM,EAAE,OAAQxE,GAAMA,EAAE,SAAS,EAAE,QAAA,CACpF,CACA,MAAM,oBAAoBwE,EAA0C,CAClE,OAAO,MAAM,KAAK,MAAM,MAAM,QAAQ,EAAE,OAAOA,CAAM,EAAE,OAAQxE,GAAM,CAACA,EAAE,SAAS,EAAE,QAAA,CACrF,CACA,MAAM,qBAAqBgF,EAAiByC,EAAkBC,EAAiC,CAC7F,MAAO,EACT,CACA,MAAM,WAAWjB,EAA4C,CAC3D,MAAO,CAAA,CACT,CACA,MAAM,WAAWC,EAAgC,CAAC,CAClD,MAAM,WAAWC,EAA+B,CAAC,CACjD,MAAM,OAAyB,CAC7B,OAAO,MAAM,KAAK,MAAM,MAAA,CAC1B,CACA,MAAM,OAAO9D,EAA8B,CACzC,MAAO,CAAC,CAAE,MAAM,KAAK,MAAM,IAAIA,CAAE,CACnC,CACF,CAKO,MAAM8E,EAAmE,CAC9E,YAAoBtB,EAAoC,CAApC,KAAA,MAAAA,CAAqC,CAEzD,MAAM,OAAOuB,EAA+C,CAC1D,aAAM,KAAK,MAAM,IAAIA,CAAQ,EACtBA,CACT,CAEA,MAAM,QAAQ/E,EAA0C,CACtD,OAAQ,MAAM,KAAK,MAAM,IAAIA,CAAE,GAAM,IACvC,CAEA,MAAM,QAAkC,CACtC,OAAO,MAAM,KAAK,MAAM,QAAA,CAC1B,CAEA,MAAM,OAAOA,EAAYe,EAAuD,CAC9E,aAAM,KAAK,MAAM,OAAOf,EAAIe,CAAO,EAC3B,MAAM,KAAK,MAAM,IAAIf,CAAE,CACjC,CAEA,MAAM,OAAOA,EAA2B,CACtC,MAAM,KAAK,MAAM,OAAOA,CAAE,CAC5B,CAEA,MAAM,aAAajC,EAA+C,CAEhE,OADgB,MAAM,KAAK,MAAM,MAAM,SAAS,EAAE,OAAOA,CAAO,EAAE,QAAA,GACnD,CAAC,GAAK,IACvB,CAEA,MAAM,oBAAoBoG,EAAsD,CAE9E,OADgB,MAAM,KAAK,MAAM,MAAM,gBAAgB,EAAE,OAAOA,CAAc,EAAE,QAAA,GACjE,CAAC,GAAK,IACvB,CAGA,MAAM,YAAYhC,EAA0C,CAC1D,MAAO,CAAA,CACT,CACA,MAAM,iBAAiB6C,EAAaC,EAA4B,CAAC,CACjE,MAAM,mBAAmBD,EAAaE,EAAkC,CAAC,CACzE,MAAM,aAAaF,EAAaG,EAAoC,CAAC,CACrE,MAAM,WAAWvB,EAA2C,CAC1D,MAAO,CAAA,CACT,CACA,MAAM,WAAWC,EAAgC,CAAC,CAClD,MAAM,WAAWC,EAA+B,CAAC,CACjD,MAAM,OAAyB,CAC7B,OAAO,MAAM,KAAK,MAAM,MAAA,CAC1B,CACA,MAAM,OAAO9D,EAA8B,CACzC,MAAO,CAAC,CAAE,MAAM,KAAK,MAAM,IAAIA,CAAE,CACnC,CACF,CAKO,MAAMoF,EAAyE,CACpF,YAAoB5B,EAAuC,CAAvC,KAAA,MAAAA,CAAwC,CAE5D,MAAM,OAAOxC,EAAoD,CAC/D,aAAM,KAAK,MAAM,IAAIA,CAAO,EACrBA,CACT,CAEA,MAAM,QAAQhB,EAA6C,CACzD,OAAQ,MAAM,KAAK,MAAM,IAAIA,CAAE,GAAM,IACvC,CAEA,MAAM,QAAqC,CACzC,OAAO,MAAM,KAAK,MAAM,QAAA,CAC1B,CAEA,MAAM,OAAOA,EAAYe,EAA6D,CACpF,aAAM,KAAK,MAAM,OAAOf,EAAIe,CAAO,EAC3B,MAAM,KAAK,MAAM,IAAIf,CAAE,CACjC,CAEA,MAAM,OAAOA,EAA2B,CACtC,MAAM,KAAK,MAAM,OAAOA,CAAE,CAC5B,CAEA,MAAM,UAAUmC,EAA6C,CAC3D,OAAO,MAAM,KAAK,MACf,MAAM,kBAAkB,EACxB,MAAM,CAAC,UAAW,SAAU,QAAQ,CAAC,EACrC,QAAA,CACL,CAEA,MAAM,UAAUA,EAAiBjB,EAA2C,CAC1E,OAAO,MAAM,KAAK,MAAM,QAAQ,WAAW,EAAE,QAAA,EAAU,MAAMA,CAAK,EAAE,QAAA,CACtE,CAEA,MAAM,YAAYmE,EAAyC,CACzD,OAAO,MAAM,KAAK,MAAM,MAAM,kBAAkB,EAAE,OAAOA,CAAM,EAAE,QAAA,CACnE,CAGA,MAAM,YAAYlD,EAA6C,CAC7D,MAAO,CAAA,CACT,CACA,MAAM,eAAeyC,EAAkBC,EAA4C,CACjF,MAAO,CAAA,CACT,CACA,MAAM,aAAaG,EAAaM,EAA6B,CAAC,CAC9D,MAAM,kBAAkBN,EAAaE,EAAmBK,EAAmC,CAAC,CAC5F,MAAM,WAAW3B,EAA8C,CAC7D,MAAO,CAAA,CACT,CACA,MAAM,WAAWC,EAAgC,CAAC,CAClD,MAAM,WAAWC,EAA+B,CAAC,CACjD,MAAM,OAAyB,CAC7B,OAAO,MAAM,KAAK,MAAM,MAAA,CAC1B,CACA,MAAM,OAAO9D,EAA8B,CACzC,MAAO,CAAC,CAAE,MAAM,KAAK,MAAM,IAAIA,CAAE,CACnC,CACF,CAKO,MAAMwF,EAA2E,CACtF,YAAoBhC,EAA4C,CAA5C,KAAA,MAAAA,CAA6C,CAEjE,MAAM,OAAOjC,EAA2D,CACtE,aAAM,KAAK,MAAM,IAAIA,CAAI,EAClBA,CACT,CAEA,MAAM,QAAQvB,EAAkD,CAC9D,OAAQ,MAAM,KAAK,MAAM,IAAIA,CAAE,GAAM,IACvC,CAEA,MAAM,QAA0C,CAC9C,OAAO,MAAM,KAAK,MAAM,QAAA,CAC1B,CAEA,MAAM,OAAOA,EAAYe,EAAuE,CAC9F,aAAM,KAAK,MAAM,OAAOf,EAAIe,CAAO,EAC3B,MAAM,KAAK,MAAM,IAAIf,CAAE,CACjC,CAEA,MAAM,OAAOA,EAA2B,CACtC,MAAM,KAAK,MAAM,OAAOA,CAAE,CAC5B,CAEA,MAAM,YAAY2B,EAAsD,CAEtE,OADc,MAAM,KAAK,MAAM,MAAM,QAAQ,EAAE,OAAOA,CAAM,EAAE,QAAA,GACjD,CAAC,GAAK,IACrB,CAEA,MAAM,OAAOmB,EAA6C,CACxD,OAAO,MAAM,KAAK,MAAM,MAAM,qBAAqB,EAAE,aAAaA,CAAI,EAAE,QAAA,CAC1E,CAGA,MAAM,oBAAoB2C,EAA8C,CACtE,MAAO,CAAA,CACT,CACA,MAAM,oBAAoBT,EAAaU,EAAgC,CAAC,CACxE,MAAM,eAAeV,EAAaW,EAA+B,CAAC,CAClE,MAAM,kBAAkBX,EAAaY,EAAkC,CAAC,CACxE,MAAM,kBAAkBhB,EAAkBC,EAAgC,CACxE,MAAO,CAAA,CACT,CACA,MAAM,WAAWjB,EAAmD,CAClE,MAAO,CAAA,CACT,CACA,MAAM,WAAWC,EAAgC,CAAC,CAClD,MAAM,WAAWC,EAA+B,CAAC,CACjD,MAAM,OAAyB,CAC7B,OAAO,MAAM,KAAK,MAAM,MAAA,CAC1B,CACA,MAAM,OAAO9D,EAA8B,CACzC,MAAO,CAAC,CAAE,MAAM,KAAK,MAAM,IAAIA,CAAE,CACnC,CACF,CCxdO,MAAM6F,EAAe,CAC1B,OAAe,UACf,OAAe,iBACf,OAAe,SACf,OAAe,kBACf,OAAe,iBACf,OAAe,oBACf,OAAe,qBAKf,OAAO,oBAA0B,CAC/B,OAAK,KAAK,YACR,KAAK,UAAY,IAAItC,GAAgB9F,EAAG,MAAM,GAEzC,KAAK,SACd,CAKA,OAAO,2BAAiC,CACtC,OAAK,KAAK,mBACR,KAAK,iBAAmB,IAAIsG,GAAuBtG,EAAG,aAAa,GAE9D,KAAK,gBACd,CAKA,OAAO,mBAAyB,CAC9B,OAAK,KAAK,WACR,KAAK,SAAW,IAAIyG,GAAezG,EAAG,KAAK,GAEtC,KAAK,QACd,CAKA,OAAO,4BAAkC,CACvC,OAAK,KAAK,oBACR,KAAK,kBAAoB,IAAIgH,GAAwBhH,EAAG,aAAa,GAEhE,KAAK,iBACd,CAKA,OAAO,2BAAiC,CACtC,OAAK,KAAK,mBACR,KAAK,iBAAmB,IAAIqH,GAAuBrH,EAAG,YAAY,GAE7D,KAAK,gBACd,CAKA,OAAO,8BAAoC,CACzC,OAAK,KAAK,sBACR,KAAK,oBAAsB,IAAI2H,GAA0B3H,EAAG,gBAAgB,GAEvE,KAAK,mBACd,CAKA,OAAO,+BAAqC,CAC1C,OAAK,KAAK,uBACR,KAAK,qBAAuB,IAAI+H,GAA2B/H,EAAG,gBAAgB,GAEzE,KAAK,oBACd,CAKA,OAAO,OAAc,CACnB,KAAK,UAAY,KACjB,KAAK,iBAAmB,KACxB,KAAK,SAAW,KAChB,KAAK,kBAAoB,KACzB,KAAK,iBAAmB,KACxB,KAAK,oBAAsB,KAC3B,KAAK,qBAAuB,IAC9B,CACF,CAOO,MAAMqI,GAAoB,IAAMD,GAAe,kBAAA,EAGzCE,GAA+B,IAAMF,GAAe,6BAAA,EACpDG,GAAgC,IAAMH,GAAe,8BAAA,EC/ErDI,GAAwC,CACnD,SAAU,KACV,OAAQ,UACR,YAAa,EACb,SAAU,EACV,iBAAkB,GAClB,iBAAkB,KAClB,MAAO,IACT,ECtCMC,GAAqB,IACrBC,GAAuB,KACvBC,GAAuB,IAwB7B,MAAMC,EAAsC,CAClC,MAAiC,KACjC,MAAuB,CAAE,GAAGJ,EAAA,EAC5B,mBAA0D,IAC1D,eAA0C,KAC1C,cAA+B,KAC/B,aAAuB,EAE/B,MAAM,YAA4B,CAEhC,KAAK,SAAS,CAAE,GAAGA,GAAwB,CAC7C,CAEA,MAAM,UAAUzH,EAAY8H,EAA0BC,EAAkC,CAKtF,GAHA,KAAK,KAAA,EACL,KAAK,mBAAA,EAED,CAAC/H,EAAK,SACR,MAAM,IAAI,MAAM,iCAAiC,EAKnD,GAAI,CADiB,KAAK,iBAAiBA,EAAK,QAAQ,EAEtD,MAAM,IAAI,MAAM,mBAAmB,EAIrC,KAAK,MAAQ,IAAI,MAAMA,EAAK,QAAQ,EAGpC,KAAK,SAAS,CACZ,SAAUA,EAAK,SACf,OAAQ,UACR,YAAa,EACb,SAAU,EACV,iBAAkB,KAAK,MAAM,iBAC7B,iBAAkB,KAAK,MAAM,iBAC7B,MAAO,IAAA,CACR,EAGD,KAAK,MAAM,iBAAiB,iBAAkB,IAAM,CAC9C,KAAK,OACP,KAAK,SAAS,CACZ,GAAG,KAAK,MACR,SAAU,KAAK,MAAM,SACrB,OAAQ,SAAA,CACT,CAEL,CAAC,EAED,KAAK,MAAM,iBAAiB,aAAc,IAAM,CAC1C,KAAK,OAAS,KAAK,MAAM,SAAW,WACtC,KAAK,SAAS,CACZ,GAAG,KAAK,MACR,YAAa,KAAK,MAAM,WAAA,CACzB,CAEL,CAAC,EAED,KAAK,MAAM,iBAAiB,QAAS,IAAM,CACzC,KAAK,SAAS,CACZ,GAAG,KAAK,MACR,OAAQ,UACR,YAAa,CAAA,CACd,CACH,CAAC,EAED,KAAK,MAAM,iBAAiB,QAAUtB,GAAM,CAC1C,KAAK,SAAS,CACZ,GAAG,KAAK,MACR,OAAQ,QACR,MAAO,yBAAyBA,EAAE,SAAW,eAAe,EAAA,CAC7D,CACH,CAAC,EAGD,KAAK,MAAM,KAAA,EAGPqJ,GAAY,KAAK,MAAM,mBACzB,KAAK,cAAgB,OAAO,WAAW,SAAY,CACjD,GAAI,CACF,MAAM,KAAK,KAAA,CACb,OAAS5H,EAAO,CACd,QAAQ,MAAM,oBAAqBA,CAAK,CAC1C,CACF,EAAGuH,EAAkB,EAEzB,CAEA,MAAM,MAAsB,CAC1B,GAAI,CAAC,KAAK,MACR,MAAM,IAAI,MAAM,iBAAiB,EAInC,MAAMtD,EAAM,KAAK,IAAA,EAEjB,GAD0BA,EAAM,KAAK,aACbwD,GAAsB,CAC5C,QAAQ,KAAK,iDAAiD,EAC9D,MACF,CACA,KAAK,aAAexD,EAEpB,GAAI,CACF,MAAM,KAAK,MAAM,KAAA,EACjB,KAAK,SAAS,CACZ,GAAG,KAAK,MACR,OAAQ,SAAA,CACT,CACH,OAASjE,EAAY,CACnB,MAAIA,EAAM,OAAS,mBACjB,KAAK,SAAS,CACZ,GAAG,KAAK,MACR,OAAQ,QACR,MAAO,6DAAA,CACR,EAEGA,CACR,CACF,CAEA,OAAc,CACP,KAAK,QAIV,KAAK,MAAM,MAAA,EACX,KAAK,SAAS,CACZ,GAAG,KAAK,MACR,OAAQ,SACR,YAAa,KAAK,MAAM,WAAA,CACzB,EACH,CAEA,MAAa,CACN,KAAK,QAIV,KAAK,MAAM,MAAA,EACX,KAAK,MAAM,YAAc,EACzB,KAAK,SAAS,CACZ,GAAG,KAAK,MACR,OAAQ,UACR,YAAa,CAAA,CACd,EACH,CAEA,MAAM,QAAwB,CAC5B,GAAI,CAAC,KAAK,MACR,MAAM,IAAI,MAAM,iBAAiB,EAGnC,KAAK,MAAM,YAAc,EACzB,MAAM,KAAK,KAAA,CACb,CAEA,MAAM,iBAAiC,CACjC,KAAK,MAAM,SAAW,UACxB,KAAK,MAAA,GACI,KAAK,MAAM,SAAW,UAAY,KAAK,MAAM,SAAW,YACjE,MAAM,KAAK,KAAA,CAEf,CAEA,YAAY6H,EAAsB,CAC3BA,EAAS,WAKd,KAAK,eAAiB,IAAI,MAAMA,EAAS,QAAQ,EACjD,KAAK,eAAe,QAAU,OAE9B,KAAK,SAAS,CACZ,GAAG,KAAK,MACR,iBAAkBA,EAAS,QAAA,CAC5B,EACH,CAEA,MAAM,yBAA4C,CAGhD,OAAO,KAAK,MAAM,gBACpB,CAEA,MAAM,gBAAmC,CAGvC,YAAK,SAAS,CACZ,GAAG,KAAK,MACR,iBAAkB,EAAA,CACnB,EAEM,EACT,CAEA,kBAAkC,CAChC,MAAO,CAAE,GAAG,KAAK,KAAA,CACnB,CAEA,cAAcC,EAAsD,CAClE,YAAK,eAAe,IAAIA,CAAQ,EAGzB,IAAM,CACX,KAAK,eAAe,OAAOA,CAAQ,CACrC,CACF,CAEA,SAAgB,CACd,KAAK,mBAAA,EAED,KAAK,QACP,KAAK,MAAM,MAAA,EACX,KAAK,MAAM,IAAM,GACjB,KAAK,MAAQ,MAGX,KAAK,iBACP,KAAK,eAAe,IAAM,GAC1B,KAAK,eAAiB,MAGxB,KAAK,SAAS,CACZ,GAAGR,EAAA,CACJ,EAED,KAAK,eAAe,MAAA,CACtB,CAIQ,SAASS,EAA+B,CAC9C,KAAK,MAAQA,EAGb,KAAK,eAAe,QAASC,GAAa,CACxCA,EAASD,CAAQ,CACnB,CAAC,CACH,CAEQ,oBAA2B,CAC7B,KAAK,gBAAkB,OACzB,OAAO,aAAa,KAAK,aAAa,EACtC,KAAK,cAAgB,KAEzB,CAMQ,iBAAiBE,EAAsB,CAE7C,OAAIA,EAAI,OAAST,IACf,QAAQ,KAAK,kCAAkC,EACxC,IAILS,EAAI,WAAW,SAAS,GAAKA,EAAI,SAAS,SAAS,GAAKA,EAAI,WAAW,aAAa,EAC/E,IAGT,QAAQ,KAAK,2DAA4DA,CAAG,EACrE,GACT,CACF,CAKO,SAASC,IAAoC,CAClD,OAAO,IAAIR,EACb,CClRO,SAASS,IAA2C,CACzD,MAAMC,EAAkBC,EAAAA,OAA6B,IAAI,EACnD,CAACC,EAAeC,CAAgB,EAAIC,WAAwB,CAChE,SAAU,KACV,OAAQ,UACR,YAAa,EACb,SAAU,EACV,iBAAkB,GAClB,iBAAkB,KAClB,MAAO,IAAA,CACR,EAGDC,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAUR,GAAA,EAChBE,EAAgB,QAAUM,EAG1BA,EAAQ,WAAA,EAAa,MAAO1I,GAAU,CACpC,QAAQ,MAAM,sCAAuCA,CAAK,CAC5D,CAAC,EAGD,MAAM2I,EAAcD,EAAQ,cAAeX,GAAa,CACtDQ,EAAiBR,CAAQ,CAC3B,CAAC,EAGD,MAAO,IAAM,CAEXW,EAAQ,KAAA,EAGRC,EAAA,EAGAD,EAAQ,QAAA,EAGRN,EAAgB,QAAU,IAC5B,CACF,EAAG,CAAA,CAAE,EAyDE,CACL,cAAAE,EACA,UAxDgB,MAAOzI,EAAY+I,EAAyBhB,IAAsB,CAClF,GAAI,CAACQ,EAAgB,QACnB,MAAM,IAAI,MAAM,+BAA+B,EAEjD,MAAMA,EAAgB,QAAQ,UAAUvI,EAAM+I,EAAUhB,CAAQ,CAClE,EAoDE,KAlDW,SAAY,CACvB,GAAI,CAACQ,EAAgB,QACnB,MAAM,IAAI,MAAM,+BAA+B,EAEjD,MAAMA,EAAgB,QAAQ,KAAA,CAChC,EA8CE,MA5CY,IAAM,CAClBA,EAAgB,SAAS,MAAA,CAC3B,EA2CE,KAzCW,IAAM,CACjBA,EAAgB,SAAS,KAAA,CAC3B,EAwCE,OAtCa,SAAY,CACzB,GAAI,CAACA,EAAgB,QACnB,MAAM,IAAI,MAAM,+BAA+B,EAEjD,MAAMA,EAAgB,QAAQ,OAAA,CAChC,EAkCE,gBAhCsB,SAAY,CAClC,GAAI,CAACA,EAAgB,QACnB,MAAM,IAAI,MAAM,+BAA+B,EAEjD,MAAMA,EAAgB,QAAQ,gBAAA,CAChC,EA4BE,YA1BmBP,GAAmB,CACtCO,EAAgB,SAAS,YAAYP,CAAQ,CAC/C,EAyBE,wBAvB8B,SACzBO,EAAgB,QAGdA,EAAgB,QAAQ,wBAAA,EAFtB,GAsBT,eAjBqB,SAChBA,EAAgB,QAGdA,EAAgB,QAAQ,eAAA,EAFtB,EAeT,CAEJ,CCrHO,MAAMS,GAAwC,CACnD,QAAS,EACT,gBAAiB,GACjB,eAAgB,kBAChB,kBAAmB,CAAA,EACnB,kBAAmB,EACrB,EAMO,SAASC,GAAsBF,EAAkC,CACtE,MAAMG,EAAIH,EAEV,GAAI,OAAOG,EAAE,iBAAoB,UAC/B,MAAM,IAAI,MAAM,iCAAiC,EAInD,GAAI,CADmC,CAAC,kBAAmB,gBAAiB,MAAM,EAChE,SAASA,EAAE,cAAgC,EAC3D,MAAM,IAAI,MAAM,iCAAiCA,EAAE,cAAc,EAAE,EAGrE,GAAIA,EAAE,mBAAqB,OAAOA,EAAE,mBAAsB,SACxD,MAAM,IAAI,MAAM,kCAAkC,EAGpD,GAAI,OAAOA,EAAE,mBAAsB,UACjC,MAAM,IAAI,MAAM,mCAAmC,EAGrD,GAAI,OAAOA,EAAE,SAAY,UAAYA,EAAE,QAAU,EAC/C,MAAM,IAAI,MAAM,kCAAkC,EAGpD,OAAOA,CACT,CChEA,MAAMC,GAAc,gBACdC,GAAoB,IA4B1B,MAAMC,EAAsD,CAClD,UAA2B,KAEnC,MAAsB,CACpB,GAAI,CACF,MAAMC,EAAS,aAAa,QAAQH,EAAW,EAE/C,GAAI,CAACG,EACH,MAAO,CAAE,GAAGN,EAAA,EAGd,MAAMO,EAAS,KAAK,MAAMD,CAAM,EAGhC,OAAIC,EAAO,UAAYP,GAAuB,QACrC,KAAK,QAAQO,CAAM,EAIrBN,GAAsBM,CAAM,CACrC,OAASpJ,EAAO,CACd,eAAQ,MAAM,iDAAkDA,CAAK,EAC9D,CAAE,GAAG6I,EAAA,CACd,CACF,CAEA,KAAKD,EAA+B,CAClC,GAAI,CACFE,GAAsBF,CAAQ,EAG1B,KAAK,YAAc,MACrB,OAAO,aAAa,KAAK,SAAS,EAKlB,OAAQ,WAAmB,UAAa,YACzC,OAAQ,WAAmB,IAAO,WAIjD,aAAa,QAAQI,GAAa,KAAK,UAAUJ,CAAQ,CAAC,EAG1D,KAAK,UAAY,OAAO,WAAW,IAAM,CACvC,aAAa,QAAQI,GAAa,KAAK,UAAUJ,CAAQ,CAAC,EAC1D,KAAK,UAAY,IACnB,EAAGK,EAAiB,CAExB,OAASjJ,EAAO,CACd,cAAQ,MAAM,iCAAkCA,CAAK,EAC/CA,CACR,CACF,CAGA,OAAOoC,EAAuC,CAC5C,MAAMiH,EAAU,KAAK,KAAA,EACfC,EAAwB,CAC5B,GAAGD,EACH,GAAGjH,EAEH,QAASA,EAAQ,SAAWiH,EAAQ,QAEpC,kBAAmB,CACjB,GAAGA,EAAQ,kBACX,GAAIjH,EAAQ,mBAAqB,CAAA,CAAC,CACpC,EAGF,KAAK,KAAKkH,CAAM,CAClB,CAEA,OAAc,CACZ,aAAa,WAAWN,EAAW,CACrC,CAEA,QAAkB,CAChB,OAAO,aAAa,QAAQA,EAAW,IAAM,IAC/C,CAEA,QAAQO,EAAiC,CAIvC,MAAMC,EAA0B,CAC9B,QAAS,EAET,gBAAiBD,EAAY,UAAY,EAAI,GAAQA,EAAY,iBAAmBV,GAAuB,gBAC3G,eAAgBU,EAAY,gBAAkBV,GAAuB,eACrE,kBAAmBU,EAAY,mBAAqB,CAAA,EACpD,kBAAmBA,EAAY,mBAAqBV,GAAuB,iBAAA,EAG7E,GAAI,CACF,OAAAC,GAAsBU,CAAQ,EAE9B,KAAK,KAAKA,CAAQ,EACXA,CACT,OAASxJ,EAAO,CACd,eAAQ,MAAM,oCAAqCA,CAAK,EACjD,CAAE,GAAG6I,EAAA,CACd,CACF,CACF,CAKO,SAASY,IAAoD,CAClE,OAAO,IAAIP,EACb,CCjHO,SAASQ,IAA2C,CACzD,MAAMC,EAAatB,EAAAA,OAAqC,IAAI,EACtD,CAACO,EAAUgB,CAAW,EAAIpB,EAAAA,SAA+B,IAAI,EAC7D,CAACqB,EAAUC,CAAW,EAAItB,EAAAA,SAAS,EAAK,EAG9CC,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMsB,EAAUN,GAAA,EAChBE,EAAW,QAAUI,EAGrB,MAAMC,EAAiBD,EAAQ,KAAA,EAC/BH,EAAYI,CAAc,EAC1BF,EAAY,EAAI,CAClB,EAAG,CAAA,CAAE,EA+BE,CACL,SAAUlB,GAAY,CACpB,QAAS,EACT,gBAAiB,GACjB,eAAgB,kBAChB,kBAAmB,CAAA,EACnB,kBAAmB,EAAA,EAErB,eApCsBxG,GAAoC,CAC1D,GAAI,CAACuH,EAAW,SAAW,CAACf,EAAU,CACpC,QAAQ,KAAK,+BAA+B,EAC5C,MACF,CAGAe,EAAW,QAAQ,OAAOvH,CAAO,EAGjC,MAAM6H,EAAcN,EAAW,QAAQ,KAAA,EACvCC,EAAYK,CAAW,CACzB,EAyBE,cAtBoB,IAAM,CAC1B,GAAI,CAACN,EAAW,QAAS,CACvB,QAAQ,KAAK,+BAA+B,EAC5C,MACF,CAEAA,EAAW,QAAQ,MAAA,EAGnB,MAAMM,EAAcN,EAAW,QAAQ,KAAA,EACvCC,EAAYK,CAAW,CACzB,EAYE,SAAAJ,CAAA,CAEJ,CC9EO,SAASK,GAAsBrK,EAAY+I,EAAkC,CAOlF,GALI,CAAC/I,EAAK,UAAY,CAACA,EAAK,UAKxB,CAAC+I,EAAS,gBACZ,MAAO,GAIT,MAAMuB,EAAetK,EAAK,UAAY,SAEtC,OAAQ+I,EAAS,eAAA,CACf,IAAK,OACH,MAAO,GACT,IAAK,gBACH,MAAO,GACT,IAAK,kBACH,OAAOuB,IAAiB,SAC1B,QACE,MAAO,EAAA,CAKb,CChBA,MAAMC,OAAoB,IAK1B,eAAsBC,GAAaC,EAAkD,CAEnF,GAAIF,GAAc,IAAIE,CAAU,EAC9B,OAAOF,GAAc,IAAIE,CAAU,EAGrC,GAAI,CACF,MAAM5K,EAAW,MAAM,MAAM,qCAAwC4K,CAAU,OAAO,EACtF,GAAI,CAAC5K,EAAS,GACZ,eAAQ,KAAK,YAAY4K,CAAU,YAAY,EACxC,KAGT,MAAMC,EAAyB,MAAM7K,EAAS,KAAA,EAC9C,OAAA0K,GAAc,IAAIE,EAAYC,CAAQ,EAC/BA,CACT,OAASvK,EAAO,CACd,eAAQ,MAAM,2BAA2BsK,CAAU,IAAKtK,CAAK,EACtD,IACT,CACF,CAKA,eAAsBwK,GAAeF,EAAiD,CAEpF,OADiB,MAAMD,GAAaC,CAAU,IAC7B,aAAe,IAClC,CChEA,SAASG,GAAElM,EAAE,CAAC,IAAIgC,EAAE7C,EAAE,EAAE,GAAG,GAAa,OAAOa,GAAjB,UAA8B,OAAOA,GAAjB,SAAmB,GAAGA,UAAoB,OAAOA,GAAjB,SAAmB,GAAG,MAAM,QAAQA,CAAC,EAAE,CAAC,IAAImM,EAAEnM,EAAE,OAAO,IAAIgC,EAAE,EAAEA,EAAEmK,EAAEnK,IAAIhC,EAAEgC,CAAC,IAAI7C,EAAE+M,GAAElM,EAAEgC,CAAC,CAAC,KAAK,IAAI,GAAG,KAAK,GAAG7C,EAAE,KAAM,KAAIA,KAAKa,EAAEA,EAAEb,CAAC,IAAI,IAAI,GAAG,KAAK,GAAGA,GAAG,OAAO,CAAC,CAAQ,SAASiN,GAAM,CAAC,QAAQpM,EAAEgC,EAAE7C,EAAE,EAAE,EAAE,GAAGgN,EAAE,UAAU,OAAOhN,EAAEgN,EAAEhN,KAAKa,EAAE,UAAUb,CAAC,KAAK6C,EAAEkK,GAAElM,CAAC,KAAK,IAAI,GAAG,KAAK,GAAGgC,GAAG,OAAO,CAAC,klBCazWqK,GAAa,CAAC,CAAE,KAAAC,CAAA,IACpBC,EAAAA,IAAC,MAAA,CACC,MAAM,6BACN,QAAQ,YACR,KAAK,eACL,MAAO,CAAE,MAAOD,EAAM,OAAQA,CAAA,EAE9B,SAAAC,EAAAA,IAAC,OAAA,CAAK,EAAE,6LAAA,CAA8L,CAAA,CACxM,EAGIC,GAAgB,CAAC,CAAE,KAAAF,CAAA,IACvBC,EAAAA,IAAC,MAAA,CACC,MAAM,6BACN,QAAQ,YACR,KAAK,eACL,MAAO,CAAE,MAAOD,EAAM,OAAQA,CAAA,EAE9B,SAAAC,EAAAA,IAAC,OAAA,CAAK,EAAE,iWAAA,CAAkW,CAAA,CAC5W,EAQIE,GAAuB,CAAC,CAAE,KAAAC,EAAM,SAAAC,EAAU,UAAAC,EAAW,SAAAC,EAAW,GAAO,KAAAP,EAAO,YAAiC,CACnH,KAAM,CAACQ,EAAWC,CAAY,EAAI9C,EAAAA,SAAS,EAAK,EAC1C,CAACxI,EAAOuL,CAAQ,EAAI/C,EAAAA,SAAwB,IAAI,EAChDgD,EAAWnD,EAAAA,OAAgC,IAAI,EAG/CoD,EAAW,CAAC,CAACP,EAEbQ,EAAc,SAAY,CAC9B,GAAI,EAAAN,GAAY,CAACK,GAAY,CAACP,GAE9B,CAAAK,EAAS,IAAI,EAEb,GAAI,CAEGC,EAAS,UACZA,EAAS,QAAU,IAAI,MAAMN,CAAQ,EACrCM,EAAS,QAAQ,iBAAiB,QAAS,IAAMF,EAAa,EAAK,CAAC,EACpEE,EAAS,QAAQ,iBAAiB,QAAS,IAAM,CAC/CD,EAAS,uBAAuB,EAChCD,EAAa,EAAK,CACpB,CAAC,GAIHE,EAAS,QAAQ,YAAc,EAC/BF,EAAa,EAAI,EACjB,MAAME,EAAS,QAAQ,KAAA,CACzB,OAAS/K,EAAK,CACZ,QAAQ,MAAM,wBAAyBA,CAAG,EAC1C8K,EAAS,uBAAuB,EAChCD,EAAa,EAAK,CACpB,EACF,EAEMK,EAAY,CAChB,MAAO,OACP,OAAQ,OACR,MAAO,MAAA,EAIHC,EAAaR,GAAY,CAACK,EAEhC,OACEX,EAAAA,IAAC,OAAA,CACC,QAASc,EAAa,OAAYF,EAClC,UAAWf,EACTkB,GAAO,cAAc,EACrBA,GAAO,iBAAiBhB,CAAI,EAAE,EAC9Be,GAAcC,GAAO,wBAAwB,EAC7CR,GAAaQ,GAAO,uBAAuB,EAC3C,CAACD,GAAc,CAACP,GAAaQ,GAAO,sBAAsB,EAC1DV,CAAA,EAEF,MACGM,EAEGJ,EACE,eACA,yBAAyBJ,CAAI,GAH/B,wBAKN,aAAY,4BAA4BA,CAAI,aAC5C,KAAK,SACL,SAAUW,EAAa,GAAK,EAC5B,UAAYrN,GAAM,CACZ,CAACqN,IAAerN,EAAE,MAAQ,SAAWA,EAAE,MAAQ,OACjDA,EAAE,eAAA,EACFmN,EAAA,EAEJ,EAEC,SAAAL,QACE,MAAA,CAAI,UAAWV,EAAKkB,GAAO,oBAAoB,EAAGA,GAAO,6BAA6B,CAAC,EACtF,SAAAf,EAAAA,IAACF,GAAA,CAAW,KAAMe,EAAUd,CAAI,EAAG,CAAA,CACrC,EACE,CAACY,GAAYzL,EACf8K,EAAAA,IAAC,OAAI,UAAWe,GAAO,oBAAoB,EACzC,SAAAf,EAAAA,IAACC,IAAc,KAAMY,EAAUd,CAAI,EAAG,CAAA,CACxC,QAEC,MAAA,CAAI,UAAWgB,GAAO,oBAAoB,EACzC,SAAAf,EAAAA,IAACF,IAAW,KAAMe,EAAUd,CAAI,CAAA,CAAG,CAAA,CACrC,CAAA,CAAA,CAIR,EAGaiB,GAAcC,EAAAA,KAAKf,EAAoB,kXCvE7C,SAASgB,GAAK,CACnB,QAAAC,EAAU,SACV,OAAAC,EAAS,GACT,OAAAC,EAAS,GACT,YAAAC,EACA,gBAAAC,EACA,SAAAC,EACA,UAAAnB,EACA,MAAAoB,EACA,GAAGC,CACL,EAAc,CAEZ,MAAMC,EAAoC,CACxC,GAAIJ,GAAmB,CAAE,gBAAAA,CAAA,EACzB,GAAID,GAAe,CAAE,YAAAA,CAAA,EACrB,GAAGG,CAAA,EAGL,OACEzB,EAAAA,IAAC,MAAA,CACE,GAAG0B,EACJ,MAAOC,EACP,UAAW9B,EACTkB,GAAO,KACPA,GAAO,iBAAiBI,CAAO,EAAE,EACjCC,EAASL,GAAO,cAAc,EAAIA,GAAO,iBAAiB,EAC1DM,EAASN,GAAO,cAAc,EAAIA,GAAO,iBAAiB,EAC1DV,CAAA,EAGD,SAAAmB,CAAA,CAAA,CAGP,CCjFO,MAAMI,EAAS,CAEpB,QAAS,CAMP,IAAK,SAKP,EAGA,QAAS,CAEP,IAAK,UAEL,IAAK,UAEL,IAAK,SAKP,EAGA,MAAO,CAEL,IAAK,UAEL,IAAK,UAEL,IAAK,SAKP,EAGA,QAAS,CAEP,IAAK,UAGL,IAAK,UACL,IAAK,SAKP,EAGA,KAAM,CAEJ,IAAK,UAEL,IAAK,UAEL,IAAK,SAKP,CAiBF,EAGaC,EAAiB,CAkC5B,SAAU,CACR,QAASD,EAAO,QAAQ,GAAG,EAC3B,aAAcA,EAAO,QAAQ,GAAG,EAChC,cAAeA,EAAO,QAAQ,GAAG,EACjC,MAAOA,EAAO,MAAM,GAAG,EACvB,WAAYA,EAAO,MAAM,GAAG,EAC5B,YAAaA,EAAO,MAAM,GAAG,EAC7B,QAASA,EAAO,QAAQ,GAAG,EAC3B,aAAcA,EAAO,QAAQ,GAAG,EAChC,cAAeA,EAAO,QAAQ,GAAG,EACjC,KAAMA,EAAO,KAAK,GAAG,EACrB,UAAWA,EAAO,KAAK,GAAG,EAC1B,WAAYA,EAAO,KAAK,GAAG,CAAA,CAE/B,sgBCjFO,SAASE,GAAa,CAC3B,QAAAC,EACA,MAAAC,EACA,QAAA/L,EACA,YAAAgM,EAAc,GACd,UAAAC,EACA,SAAAV,EACA,UAAAnB,EACA,MAAAoB,EACA,GAAGC,CACL,EAAsB,CACpB,MAAME,EAASO,GAAM,QAAQ,IAAMC,GAAiBL,CAAO,EAAG,CAACA,CAAO,CAAC,EACjEM,EAAOF,GAAM,QAAQ,IAAMG,GAAeP,CAAO,EAAG,CAACA,CAAO,CAAC,EAEnE,OACE/B,EAAAA,IAACkB,GAAA,CACE,GAAGQ,EACJ,QAAQ,SACR,OAAQ,GACR,OAAM,GACN,YAAaE,EAAO,OACpB,gBAAiBA,EAAO,WACxB,MAAAH,EACA,UAAW5B,EAAKkB,GAAO,aAAagB,CAAO,EAAE,EAAG1B,CAAS,EACzD,KAAM0B,IAAY,SAAWA,IAAY,UAAY,QAAU,SAC/D,YAAWA,IAAY,SAAWA,IAAY,UAAY,YAAc,SACxE,cAAY,OAEZ,SAAAQ,EAAAA,KAAC,MAAA,CAAI,UAAWxB,GAAO,kBAAkB,EAEvC,SAAA,CAAAf,EAAAA,IAAC,OAAI,UAAWe,GAAO,eAAe,EAAG,cAAY,OAClD,SAAAsB,EACH,EAGAE,EAAAA,KAAC,MAAA,CAAI,UAAWxB,GAAO,eAAe,EACnC,SAAA,CAAAiB,SACE,KAAA,CAAG,UAAWjB,GAAO,gBAAgB,EACnC,SAAAiB,EACH,EAGDR,EACCxB,EAAAA,IAAC,MAAA,CAAI,UAAWe,GAAO,mBAAmB,EACvC,SAAAS,CAAA,CACH,EAEAvL,SACG,IAAA,CAAE,UAAW8K,GAAO,kBAAkB,EACpC,SAAA9K,CAAA,CACH,CAAA,EAGN,EAGCgM,GAAeC,GACdlC,EAAAA,IAAC,SAAA,CACC,QAASkC,EACT,UAAWnB,GAAO,kBAAkB,EACpC,aAAY,WAAWgB,CAAO,WAE9B,SAAA/B,EAAAA,IAAC,OAAA,CAAK,cAAY,OAAO,SAAA,GAAA,CAAC,CAAA,CAAA,CAC5B,CAAA,CAEJ,CAAA,CAAA,CAGN,CAYA,SAASoC,GAAiBL,EAAyC,CACjE,OAAQA,EAAA,CACN,IAAK,UACH,MAAO,CACL,WAAYF,EAAe,SAAS,aACpC,OAAQA,EAAe,SAAS,cAChC,KAAMA,EAAe,SAAS,OAAA,EAGlC,IAAK,QACH,MAAO,CACL,WAAYA,EAAe,SAAS,WACpC,OAAQA,EAAe,SAAS,YAChC,KAAMA,EAAe,SAAS,KAAA,EAGlC,IAAK,UACH,MAAO,CACL,WAAYA,EAAe,SAAS,aACpC,OAAQA,EAAe,SAAS,cAChC,KAAMA,EAAe,SAAS,OAAA,EAGlC,IAAK,OACH,MAAO,CACL,WAAYA,EAAe,SAAS,UACpC,OAAQA,EAAe,SAAS,WAChC,KAAMA,EAAe,SAAS,IAAA,EAGlC,QACE,MAAO,CACL,WAAYA,EAAe,SAAS,UACpC,OAAQA,EAAe,SAAS,WAChC,KAAMA,EAAe,SAAS,IAAA,CAChC,CAEN,CAEA,SAASS,GAAeP,EAAkC,CACxD,OAAQA,EAAA,CACN,IAAK,UACH,MAAO,IACT,IAAK,QACH,MAAO,IACT,IAAK,UACH,MAAO,IACT,IAAK,OACH,MAAO,IACT,QACE,MAAO,GAAA,CAEb,iaC/IO,SAASS,GAAM,CACpB,MAAAC,EACA,SAAAC,EACA,MAAAxN,EAAQ,GACR,QAAAyN,EAAU,GACV,WAAAC,EACA,UAAAC,EAAY,GACZ,SAAAvC,EAAW,GACX,UAAAD,EACA,MAAAoB,EACA,GAAAlL,EACA,GAAGmL,CACL,EAAe,CACb,MAAMoB,EAAWF,EAAa,GAAGrM,GAAM,OAAO,UAAY,OAE1D,OACEgM,EAAAA,KAAC,MAAA,CACC,UAAW1C,EACTkB,GAAO,eAAe,EACtB8B,GAAa9B,GAAO,2BAA2B,CAAA,EAGjD,SAAA,CAAAf,EAAAA,IAAC,QAAA,CACE,GAAG0B,EACJ,GAAAnL,EACA,KAAK,OACL,MAAAkM,EACA,SAAAC,EACA,SAAApC,EACA,MAAAmB,EACA,UAAW5B,EACTkB,GAAO,MACP8B,GAAa9B,GAAO,mBAAmB,EACvC7L,GAAS6L,GAAO,cAAc,EAC9B4B,GAAW5B,GAAO,gBAAgB,EAClCV,CAAA,EAEF,eAAcnL,EAAQ,OAAS,QAC/B,mBAAkB4N,CAAA,CAAA,EAGnBF,GACC5C,EAAAA,IAAC,MAAA,CACC,GAAI8C,EACJ,UAAWjD,EACTkB,GAAO,mBACP7L,GAAS6L,GAAO,2BAA2B,EAC3C4B,GAAW5B,GAAO,6BAA6B,CAAA,EAGhD,SAAA6B,CAAA,CAAA,CACH,CAAA,CAAA,CAIR,0mBC7DO,SAASG,GAAS,CACvB,QAAAC,EACA,SAAAN,EACA,MAAAO,EACA,MAAA/N,EAAQ,GACR,QAAAyN,EAAU,GACV,SAAArC,EAAW,GACX,UAAAD,EACA,MAAAoB,EACA,GAAAlL,EACA,GAAGmL,CACL,EAAkB,CAChB,MAAMwB,EAAcf,GAAM,MAAA,EACpBgB,EAAa5M,GAAM,YAAY2M,CAAW,GAEhD,OACEX,EAAAA,KAAC,QAAA,CACC,QAASY,EACT,MAAA1B,EACA,UAAW5B,EACTkB,GAAO,oBAAoB,EAC3BT,GAAYS,GAAO,8BAA8B,EACjDV,CAAA,EAGF,SAAA,CAAAkC,EAAAA,KAAC,MAAA,CAAI,UAAWxB,GAAO,kBAAkB,EACvC,SAAA,CAAAf,EAAAA,IAAC,QAAA,CACE,GAAG0B,EACJ,KAAK,WACL,GAAIyB,EACJ,QAAAH,EACA,SAAAN,EACA,SAAApC,EACA,UAAWT,EACTkB,GAAO,SACPkC,GAASlC,GAAO,sBAAsB,EACtC7L,GAAS6L,GAAO,iBAAiB,EACjC4B,GAAW5B,GAAO,mBAAmB,CAAA,EAEvC,eAAciC,EACd,eAAc9N,CAAA,CAAA,EAEhB8K,EAAAA,IAAC,MAAA,CACC,UAAWH,EACTkB,GAAO,oBACPiC,GAAWjC,GAAO,8BAA8B,CAAA,CAClD,CAAA,CACF,EACF,EAECkC,GACCjD,EAAAA,IAAC,OAAA,CACC,UAAWH,EACTkB,GAAO,gBACPT,GAAYS,GAAO,2BAA2B,CAAA,EAG/C,SAAAkC,CAAA,CAAA,CACH,CAAA,CAAA,CAIR,uLCtBO,SAASG,GAAO,CACrB,MAAAX,EACA,SAAAC,EACA,QAAAW,EACA,SAAA/C,EAAW,GACX,YAAAgD,EACA,MAAApO,EAAQ,GACR,QAAAyN,EAAU,GACV,UAAAE,EAAY,GACZ,UAAAxC,EACA,MAAAoB,EACA,GAAAlL,CACF,EAAgB,CACd,OACEgM,EAAAA,KAAC,SAAA,CACC,GAAAhM,EACA,MAAAkM,EACA,SAAWhP,GAAMiP,EAASjP,EAAE,OAAO,KAAK,EACxC,SAAA6M,EACA,MAAAmB,EACA,UAAW5B,EACTkB,GAAO,OACP8B,GAAa9B,GAAO,oBAAoB,EACxC7L,GAAS6L,GAAO,eAAe,EAC/B4B,GAAW5B,GAAO,iBAAiB,EACnCV,CAAA,EAEF,eAAcnL,EAAQ,OAAS,QAE9B,SAAA,CAAAoO,SACE,SAAA,CAAO,MAAM,GAAG,SAAQ,GACtB,SAAAA,EACH,EAGDD,EAAQ,IAAKE,GACZvD,EAAAA,IAAC,UAA0B,MAAOuD,EAAO,MAAO,SAAUA,EAAO,SAC9D,SAAAA,EAAO,KAAA,EADGA,EAAO,KAEpB,CACD,CAAA,CAAA,CAAA,CAGP,idC7CO,SAASC,GAAO,CACrB,MAAAf,EACA,SAAAC,EACA,IAAAe,EACA,IAAAC,EACA,KAAAC,EAAO,EACP,SAAArD,EAAW,GACX,KAAAsD,EAAO,GACP,UAAAC,EAAY,GACZ,UAAAxD,EACA,MAAAoB,EACA,GAAAlL,EACA,aAAcuN,CAChB,EAAgB,CACd,MAAMC,GAAetB,EAAQgB,IAAQC,EAAMD,GAAQ,IAEnD,OACElB,OAAC,OAAI,MAAAd,EAAc,UAAW5B,EAAKkB,GAAO,kBAAkB,EAAGV,CAAS,EACtE,SAAA,CAAAkC,EAAAA,KAAC,MAAA,CAAI,UAAWxB,GAAO,cAAc,EACnC,SAAA,CAAAf,EAAAA,IAAC,MAAA,CACC,UAAWH,EACTkB,GAAO,aAAa,EACpBT,GAAYS,GAAO,uBAAuB,CAAA,EAE5C,MAAO,CAAE,MAAO,GAAGgD,CAAU,GAAA,CAAI,CAAA,EAEnC/D,EAAAA,IAAC,MAAA,CACC,UAAWH,EACTkB,GAAO,cAAc,EACrBT,GAAYS,GAAO,wBAAwB,CAAA,EAE7C,MAAO,CAAE,KAAM,QAAQgD,CAAU,WAAA,CAAY,CAAA,EAE/C/D,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAAzJ,EACA,IAAAkN,EACA,IAAAC,EACA,KAAAC,EACA,MAAAlB,EACA,SAAWhP,GAAMiP,EAAS,OAAOjP,EAAE,OAAO,KAAK,CAAC,EAChD,SAAA6M,EACA,UAAWS,GAAO,cAAc,EAChC,aAAY+C,EACZ,gBAAerB,EACf,gBAAegB,EACf,gBAAeC,EACf,iBAAgB,GAAGjB,CAAK,GAAGmB,CAAI,EAAA,CAAA,CACjC,EACF,EAECC,GACCtB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,GAAO,sBAAsB,EAC3C,SAAA,CAAAwB,OAAC,OAAA,CACE,SAAA,CAAAkB,EACAG,CAAA,EACH,EACArB,EAAAA,KAAC,OAAA,CAAK,UAAWxB,GAAO,+BAA+B,EACpD,SAAA,CAAA0B,EACAmB,CAAA,EACH,SACC,OAAA,CACE,SAAA,CAAAF,EACAE,CAAA,CAAA,CACH,CAAA,CAAA,CACF,CAAA,EAEJ,CAEJ,stWChIO,SAASI,GAAgB,CAAE,QAAA1P,EAAS,gBAAAoC,EAAiB,YAAAuN,EAAc,GAAI,cAAAC,EAAgB,GAAM,WAAAC,EAAY,SAAAC,GAAmB,CACjI,KAAM,CAAC7M,EAAS8M,CAAU,EAAI3G,EAAAA,SAAiC,IAAI,EAC7D,CAAC4G,EAAaC,CAAc,EAAI7G,EAAAA,SAAsB,IAAI,EAC1D,CAAC8G,EAAkBC,CAAmB,EAAI/G,EAAAA,SAAS,CAAC,EACpD,CAACgH,EAAgBC,CAAiB,EAAIjH,EAAAA,SAAwB,IAAI,EAClE,CAACkH,EAAcC,CAAe,EAAInH,EAAAA,SAAS,EAAK,EAChD,CAAC9G,EAAWkO,CAAY,EAAIpH,EAAAA,SAAS,EAAK,EAC1C,CAACqH,EAAWC,EAAY,EAAItH,EAAAA,SAAiB,KAAK,KAAK,EAGvD,CAACuH,EAAiBC,EAAkB,EAAIxH,EAAAA,SAAmB,CAAA,CAAE,EAC7D,CAACyH,GAAiBC,EAAkB,EAAI1H,EAAAA,SAAmB,CAAA,CAAE,EAC7D,CAAC2H,GAAoBC,EAAqB,EAAI5H,EAAAA,SAAiB,CAAC,EAGhE,CAAC6H,EAAcC,CAAe,EAAI9H,EAAAA,SAAmB,CAAA,CAAE,EAGvD,CAAC+H,EAAiBC,CAAkB,EAAIhI,EAAAA,SAAyB,IAAI,EAGrE,CAACiI,EAAcC,EAAe,EAAIlI,EAAAA,SAAmB,CAAA,CAAE,EAGvD,CAACmI,GAAiBC,EAAkB,EAAIpI,EAAAA,SAAiC,CAAA,CAAE,EAC3E,CAACqI,GAAqBC,EAAsB,EAAItI,EAAAA,SAAmB,CAAA,CAAE,EAGrE,CAACuI,GAAiBC,EAAkB,EAAIxI,EAAAA,SAAsB,IAAI,GAAK,EAGvE,CAACyI,GAAaC,EAAc,EAAI1I,EAAAA,SAAiB,CAAC,EAGlD,CAAC2I,GAAgBC,EAAiB,EAAI5I,EAAAA,SAAiB,EAAE,EAGzD,CAAC6I,EAAmBC,CAAoB,EAAI9I,EAAAA,SAAkB,EAAK,EACnE,CAAC+I,EAAgBC,CAAiB,EAAIhJ,EAAAA,SAAyB,IAAI,EAGnE,CAACiJ,EAAiBC,EAAkB,EAAIlJ,EAAAA,SAAiB,EAAE,EAG3D,CAACmJ,GAAcC,CAAe,EAAIpJ,EAAAA,SAAiB,CAAC,EACpD,CAACqJ,GAAkBC,EAAmB,EAAItJ,EAAAA,SAAkB,EAAK,EACjE,CAACuJ,GAAaC,EAAc,EAAIxJ,EAAAA,SAAkB,EAAK,EAGvD,CAACyJ,EAAaC,EAAc,EAAI1J,EAAAA,SAA6B,IAAI,EAGjE,CAAE,cAAAF,GAAe,UAAA6J,GAAW,gBAAAC,GAAiB,OAAAC,GAAQ,KAAAC,GAAM,YAAAC,GAAa,eAAAC,EAAA,EAAmBrK,GAAA,EAC3F,CAAE,SAAUsK,EAAA,EAAkB/I,GAAA,EAE9BgJ,GAA6BC,cAAaC,GAAkB,CAC5DlD,GAAgBN,GAAa,OAAS,mBAC1C4B,GAAoB6B,GAAS,CAC3B,MAAMC,EAAU,IAAI,IAAID,CAAI,EAC5B,OAAIC,EAAQ,IAAIF,CAAK,EACnBE,EAAQ,OAAOF,CAAK,EAEpBE,EAAQ,IAAIF,CAAK,EAEZE,CACT,CAAC,CACH,EAAG,CAACpD,EAAcN,CAAW,CAAC,EAExB2D,GAAsBJ,EAAAA,YAAY,IAAM,CAC5C,GAAI,CAACvD,EAAa,OAClB,MAAM4D,EAAe5D,EAAY,QAC3B6D,EAAgBhB,GAAa,SAAS,UAAU,MAEtD,GADyB7C,EAAY,UAAa6D,GAAiBD,IAAUC,CAAa,EAE1F,IAAI,CACFT,GAAA,EACAH,GAAA,CACF,OAASrS,EAAO,CACd,QAAQ,KAAK,sBAAuBA,CAAK,CAC3C,CACAmS,GAAU/C,EAAaqD,GAAe,EAAI,EAAE,MAAOzS,GAAU,CAC3D,QAAQ,KAAK,sBAAuBA,CAAK,CAC3C,CAAC,EACH,EAAG,CAACoP,EAAaqD,GAAeN,GAAWE,GAAQG,GAAgBP,CAAW,CAAC,EAGzEiB,GAAYP,EAAAA,YAAY,IAAe,CAC3C,GAAIjD,EAAc,MAAO,GAEzB,GAAIN,GAAa,OAAS,kBAAmB,OAAOI,IAAmB,KACvE,GAAIJ,GAAa,OAAS,iBAAkB,OAAOiB,EAAa,MAAMlS,GAAKA,EAAE,OAAO,OAAS,CAAC,EAC9F,GAAIiR,GAAa,OAAS,aAAc,OAAOmB,IAAoB,KACnE,GAAInB,GAAa,OAAS,WAAY,OAAOqB,EAAa,OAAS,EACnE,GAAIrB,GAAa,OAAS,WAAY,CACpC,MAAM4D,EAAU5D,EAAY,QAC5B,OAAO,OAAO,KAAKuB,EAAe,EAAE,SAAWqC,EAAQ,MAAM,MAC/D,CACA,OAAI5D,GAAa,OAAS,kBAA0B2B,GAAgB,KAAO,EACvE3B,GAAa,OAAS,SAAiB,GACvCA,GAAa,OAAS,gBAAwB+B,GAAe,KAAA,EAAO,OAAS,EAC7E/B,GAAa,OAAS,YAAoBmC,IAAmB,KAC7DnC,GAAa,OAAS,aAAqBqC,EAAgB,KAAA,EAAO,OAAS,EACxE,EACT,EAAG,CAAC/B,EAAcN,EAAaI,EAAgBa,EAAcE,EAAiBE,EAAcE,GAAiBI,GAAiBI,GAAgBI,EAAgBE,CAAe,CAAC,EAExK0B,GAAqBR,cAAY,MAAOS,GAA8B,CAC1E,GAAI,CAAChE,GAAe,CAAC/M,EAAS,OAGzBiG,GAAc,kBACjBkK,GAAA,EAAiB,MAAM/R,GAAO,QAAQ,KAAK,8BAA+BA,CAAG,CAAC,EAGhF,IAAI0C,EAAU,GAGd,GAAIiM,EAAY,OAAS,kBAAmB,CAC1C,GAAII,IAAmB,KAAM,OAC7BrM,EAAUqM,IAAmBW,EAC/B,SAAWf,EAAY,OAAS,iBAE9BjM,EADgBiM,EAAY,QACV,OAAO,MAAM,CAACiE,EAAOnP,IAAM,CAC3C,MAAMoP,EAAajD,EAAanM,CAAC,GAAG,KAAA,EAAO,eAAiB,GACtDqP,EAAgBF,EAAM,cAAc,YAAA,EACpCG,GAAeH,EAAM,cAAc,QAASlV,GAAE,YAAA,CAAa,GAAK,CAAA,EACtE,OAAOmV,IAAeC,GAAiBC,GAAa,SAASF,CAAU,CACzE,CAAC,UACQlE,EAAY,OAAS,aAAc,CAC5C,GAAImB,IAAoB,KAAM,OAC9B,MAAMyC,EAAU5D,EAAY,QAC5BjM,EAAUoN,IAAoByC,EAAQ,aACxC,SAAW5D,EAAY,OAAS,WAAY,CAC1C,MAAM4D,EAAU5D,EAAY,QAC5BjM,EAAUsN,EAAa,MAAM,CAAC7N,EAAMsB,IAAM,CACxC,MAAMuP,EAAgBT,EAAQ,MAAM,QAAQpQ,CAAI,EAChD,OAAOoQ,EAAQ,aAAa9O,CAAC,IAAOuP,CACtC,CAAC,CACH,SAAWrE,EAAY,OAAS,WAE9BjM,EADgBiM,EAAY,QACV,MAAM,MAAM,CAACsE,EAAOxP,IAAMyM,GAAgBzM,CAAC,IAAMA,CAAC,UAC3DkL,EAAY,OAAS,kBAAmB,CACjD,MAAM4D,EAAU5D,EAAY,QAC5B,GAAI2B,GAAgB,OAAS,EAAG,OAEhC5N,EAAU6P,EAAQ,eAAe,SAAWjC,GAAgB,MAC1DiC,EAAQ,eAAe,MAAMW,GAAO5C,GAAgB,IAAI4C,CAAG,CAAC,CAChE,SAAWvE,EAAY,OAAS,SAAU,CACxC,MAAM4D,EAAU5D,EAAY,QACtBwE,EAAYZ,EAAQ,WAAa,EACvC7P,EAAU,KAAK,IAAI8N,GAAc+B,EAAQ,YAAY,GAAKY,CAC5D,SAAWxE,EAAY,OAAS,gBAAiB,CAC/C,GAAI,CAAC+B,GAAe,OAAQ,OAC5B,MAAM6B,EAAU5D,EAAY,QAC5BjM,EAAUgO,GAAe,KAAA,EAAO,gBAAkB6B,EAAQ,YAAY,YAAA,CACxE,SAAW5D,EAAY,OAAS,YAAa,CAC3C,MAAMxN,EAASwR,GAAmB7B,EAClC,GAAI3P,GAAW,KAA8B,OAC7CuB,EAAUvB,EAEV4P,EAAkB5P,CAAM,CAC1B,SAAWwN,EAAY,OAAS,aAAc,CAC5C,GAAI,CAACqC,EAAgB,OAAQ,OAC7B,MAAMuB,EAAU5D,EAAY,QACtByE,EAAgBb,EAAQ,eAAiB,GACzCM,EAAaO,EAAgBpC,EAAgB,KAAA,EAASA,EAAgB,KAAA,EAAO,YAAA,EAC7E8B,EAAgBM,EAAgBb,EAAQ,cAAgBA,EAAQ,cAAc,YAAA,EAC9EQ,GAAgBR,EAAQ,cAAgB,CAAA,GAAI,IAAI7U,IAAK0V,EAAgB1V,GAAIA,GAAE,YAAA,CAAa,EAC9FgF,EAAUmQ,IAAeC,GAAiBC,EAAa,SAASF,CAAU,CAC5E,CAEA1D,EAAazM,CAAO,EACpBwM,EAAgB,EAAI,EAGpB,MAAMhO,EAAY,KAAK,OAAO,KAAK,IAAA,EAAQkO,GAAa,GAAI,EAS5D,MANuB,IAAIhO,GACzBuF,GAAA,EACAD,GAAA,EACAE,GAAA,CAA8B,EAGX,oBAAoBhF,EAAQ,GAAIc,EAASxB,CAAS,EAGvE,MAAMmS,EAAmB,IAAIvQ,GAC3B8D,GAAA,EACAF,GAAA,CAAkB,EAIdlE,EAAQE,EAAU,EAAI,EAC5B,MAAM2Q,EAAiB,aAAa1E,EAAY,GAAIjM,EAASF,CAAK,EAGlE,MAAM8Q,EAAiB,MAAMjV,EAAG,iBAAiB,IAAIuD,EAAQ,EAAE,EAC3D0R,GACF5E,EAAW4E,CAAc,CAE7B,EAAG,CAAC3E,EAAa/M,EAASiG,GAAc,iBAAkBkK,GAAgBhD,EAAgBW,GAAoBE,EAAcE,EAAiBE,EAAcE,GAAiBI,GAAiBE,GAAaE,GAAgBI,EAAgBE,EAAiB5B,CAAS,CAAC,EAE/PmE,GAAiBrB,EAAAA,YAAY,SAAY,CAC7C,GAAI,CAACtQ,EAAS,OAQd,MANuB,IAAIR,GACzBuF,GAAA,EACAD,GAAA,EACAE,GAAA,CAA8B,EAGX,gBAAgBhF,EAAQ,EAAE,EAG/C,MAAM,IAAI,QAAQ4R,GAAW,WAAWA,EAAS,GAAG,CAAC,EAErDhF,EAAA,CACF,EAAG,CAAC5M,EAAS4M,CAAU,CAAC,EAElBiF,GAAiBvB,EAAAA,YAAY,IAAM,CACvChD,EAAgB,EAAK,EACrBF,EAAkB,IAAI,EAElBpN,GAAWiN,EAAmBjN,EAAQ,UAAU,QAAQ,OAAS,EACnEkN,EAAoBD,EAAmB,CAAC,EAExC0E,GAAA,CAEJ,EAAG,CAAC3R,EAASiN,EAAkB0E,EAAc,CAAC,EAG9CvL,EAAAA,UAAU,IAAM,CACd0L,GAAA,CACF,EAAG,CAAA,CAAE,EAGL1L,EAAAA,UAAU,IAAM,CACVpG,GAAWA,EAAQ,UAAU,QAAQ,OAAS,GAAKiN,IAAqB,GAC1E8E,GAAA,CAEJ,EAAG,CAAC/R,CAAO,CAAC,EAGZoG,EAAAA,UAAU,IAAM,CACVpG,GAAWA,EAAQ,UAAU,QAAQ,OAAS,GAAKiN,EAAmB,GACxE8E,GAAA,CAEJ,EAAG,CAAC9E,CAAgB,CAAC,EAErB7G,EAAAA,UAAU,IAAM,CACd,GAAI,CAAC2G,EAAa,CAChBwC,EAAgB,CAAC,EACjB,MACF,CAEA,GAAIxC,EAAY,OAAS,kBAAmB,CAC1C,MAAMiF,EAAQtE,EAAgB,OAC9B6B,EAAiBiB,GACXwB,IAAU,EAAU,EACjB,KAAK,IAAIxB,EAAMwB,EAAQ,CAAC,CAChC,CACH,SAAWjF,EAAY,OAAS,kBAAmB,CACjD,MAAMiF,EAASjF,EAAY,QAAkC,QAAQ,OACrEwC,EAAiBiB,GACXwB,IAAU,EAAU,EACjB,KAAK,IAAIxB,EAAMwB,EAAQ,CAAC,CAChC,CACH,MACEzC,EAAgB,CAAC,CAErB,EAAG,CAACxC,EAAaW,CAAe,CAAC,EAEjCtH,EAAAA,UAAU,IAAM,CACd,MAAM6L,EAAiBC,GAAyB,CAC9C,GAAI,CAACnF,EAAa,OAClB,MAAMoF,EAAS,SAAS,cAClBC,EAAUD,GAAQ,SAAS,YAAA,EAC3BE,EAAW,GAAQF,IAAWC,IAAY,SAAWA,IAAY,YAAcD,EAAO,oBACtFG,EAAMJ,EAAM,IAEZK,EAAWxF,EAAY,KAEvByF,EAAwB,IAAM,CACpBzF,EAAY,SAAiB,MAEzC4C,GAAgBa,GAAS,CAACA,CAAI,CAElC,EAEMiC,EAAcC,GAAkB,CACpC,GAAIH,IAAa,kBAAmB,CAClC,MAAMP,EAAQtE,EAAgB,OAC9B,GAAIsE,IAAU,EAAG,OACjBzC,EAAiBiB,IAAS,CACxB,MAAMmC,IAAQnC,GAAOkC,EAAQV,GAASA,EACtC,OAAA5E,EAAkBuF,EAAI,EACfA,EACT,CAAC,CACH,SAAWJ,IAAa,kBAAmB,CACzC,MAAMzG,EAAWiB,EAAY,QAAkC,QAC/D,GAAIjB,EAAQ,SAAW,EAAG,OAC1ByD,EAAiBiB,KACDA,GAAOkC,EAAQ5G,EAAQ,QAAUA,EAAQ,MAExD,CACH,CACF,EAEM8G,EAAgB,IAAM,CAC1B,GAAIL,IAAa,YAAa,CACvBvD,EAEME,IAAmB,MAC5B2C,GAAA,EAFA5C,EAAqB,EAAI,EAI3B,MACF,CAEK5B,EAIMkF,IAAa,aACtBV,GAAA,EAJIhB,MACGC,GAAA,CAKX,EAEA,IAAKwB,IAAQ,KAAQA,IAAQ,KAAOJ,EAAM,WAAc,CAACA,EAAM,SAAW,CAACA,EAAM,QAAS,CACxFA,EAAM,eAAA,EACNzC,GAAqBe,GAAS,CAACA,CAAI,EACnC,MACF,CAEA,GAAIhB,GAAkB,EAChB8C,IAAQ,UAAYA,IAAQ,KAAQA,IAAQ,KAAOJ,EAAM,YAC3DA,EAAM,eAAA,EACNzC,GAAoB,EAAK,GAE3B,MACF,CAEA,GAAI,UAAU,KAAK6C,CAAG,GAAK,CAACD,EAAU,CACpC,MAAM9B,EAAQ,OAAO+B,CAAG,EAAI,EAC5B,GAAIC,IAAa,mBAAqBhC,EAAQ7C,EAAgB,OAC5DwE,EAAM,eAAA,EACN3C,EAAgBgB,CAAK,EACrBnD,EAAkBmD,CAAK,UACdgC,IAAa,kBAAmB,CACzC,MAAMzG,EAAWiB,EAAY,QAAkC,QAC3DwD,EAAQzE,EAAQ,SAClBoG,EAAM,eAAA,EACN3C,EAAgBgB,CAAK,EACrBF,GAA2BE,CAAK,EAEpC,CACA,MACF,CAEA,OAAQ+B,EAAA,CACN,IAAK,SACHJ,EAAM,eAAA,EACFxC,GACFC,GAAe,EAAK,EAEpB9C,EAAA,EAEF,MACF,IAAK,QACHqF,EAAM,eAAA,EACNU,EAAA,EACA,MACF,IAAK,IAAK,CACR,GAAIP,EAAU,OACVE,IAAa,mBACfL,EAAM,eAAA,EACN9E,EAAkBkC,EAAY,GACrBiD,IAAa,oBACtBL,EAAM,eAAA,EACN7B,GAA2Bf,EAAY,GAEzC,KACF,CACA,IAAK,UACL,IAAK,YACH,GAAI+C,EAAU,QACVE,IAAa,mBAAqBA,IAAa,qBACjDL,EAAM,eAAA,EACNO,EAAW,EAAE,GAEf,MACF,IAAK,YACL,IAAK,aACH,GAAIJ,EAAU,QACVE,IAAa,mBAAqBA,IAAa,qBACjDL,EAAM,eAAA,EACNO,EAAW,CAAC,GAEd,MACF,IAAK,IACL,IAAK,IACH,GAAIJ,EAAU,OACdH,EAAM,eAAA,EACNxB,GAAA,EACA,MACF,IAAK,IACL,IAAK,IACH,GAAI2B,EAAU,OACdH,EAAM,eAAA,EACNM,EAAA,EACA,KAKA,CAEN,EAEA,cAAO,iBAAiB,UAAWP,CAAa,EACzC,IAAM,OAAO,oBAAoB,UAAWA,CAAa,CAElE,EAAG,CACDlF,EACAW,EACA4B,GACAjC,EACA2B,EACAE,EACAQ,EAAA,CACD,EAGDtJ,EAAAA,UAAU,IAAM,CACd,MAAMyM,EAAkB3W,GAAqB,CAE3C,GAAI,EAAAA,EAAE,kBAAkB,kBAAoBA,EAAE,kBAAkB,sBAK3D+J,GAAc,SAInB,OAAQ/J,EAAE,IAAI,YAAA,EAAY,CACxB,IAAK,IACHA,EAAE,eAAA,EACF6T,KAAkB,MAAM,QAAQ,KAAK,EACrC,MACF,IAAK,IACH7T,EAAE,eAAA,EACF8T,KAAS,MAAM,QAAQ,KAAK,EAC5B,MACF,IAAK,IACH9T,EAAE,eAAA,EACF+T,GAAA,EACA,KAAA,CAEN,EAEA,cAAO,iBAAiB,UAAW4C,CAAc,EAC1C,IAAM,OAAO,oBAAoB,UAAWA,CAAc,CACnE,EAAG,CAAC5M,GAAc,SAAU8J,GAAiBC,GAAQC,EAAI,CAAC,EAG1D7J,EAAAA,UAAU,IAAM,CACViH,GAAgBN,GAAelF,GAAsBkF,EAAaqD,EAAa,IACjF,QAAQ,IAAI,4BAA6BrD,EAAY,QAAQ,EAC7D+C,GAAU/C,EAAaqD,GAAe,EAAI,EAAE,MAAOzS,GAAU,CAC3D,QAAQ,KAAK,gCAAiCA,CAAK,CACrD,CAAC,EAGL,EAAG,CAAC0P,EAAcN,GAAa,GAAIqD,GAAc,gBAAiBA,GAAc,cAAc,CAAC,EAG/FhK,EAAAA,UAAU,IAAM,CACd,GAAI,CAAC2G,GAAe,CAAC6C,GAAevC,EAAc,OAElD,MAAMyF,EAAelD,EAAY,UAAU,QAAU,CAAA,EAC/Ce,EAAU5D,EAAY,SAGR,SAAY,CAC9B,UAAWgG,KAASD,EAAc,CAChC,MAAME,EAAarC,EAAQoC,CAAK,EAEhC,GAAI,CAACC,EAAY,SAGjB,MAAMC,EAAY,MAAM,QAAQD,CAAU,EAAIA,EAAW,CAAC,EAAIA,EAE9D,GAAIC,EACF,GAAI,CAEF,MADc,IAAI,MAAM,iCAAoCA,CAAS,EAAE,EAC3D,KAAA,EACZ,QAAQ,IAAI,iBAAiBF,CAAK,KAAKE,CAAS,EAAE,EAClD,KACF,OAAS7U,EAAK,CACZ,QAAQ,KAAK,4BAA4B2U,CAAK,qCAAsC3U,CAAG,EAElF6H,GAAc,kBACjBkK,GAAA,EAAiB,MAAMjU,GAAK,QAAQ,KAAK,8BAA+BA,CAAC,CAAC,CAE9E,CAEJ,CACF,GAEA,CAEF,EAAG,CAAC6Q,GAAa,GAAI6C,CAAW,CAAC,EAGjCxJ,EAAAA,UAAU,IAAM,CACViH,GACFsC,GAAe,EAAK,CAExB,EAAG,CAACtC,CAAY,CAAC,EAGjBjH,EAAAA,UAAU,IAAM,CACd,GAAI,CAAC2G,GAAe,CAAC6C,GAAe,CAACvC,EAAc,OAEnD,MAAMyF,EAAelD,EAAY,UAAU,UAAY,CAAA,EACjDe,EAAU5D,EAAY,QAGtBmG,EAAsB,SAAY,CACtC,UAAWH,KAASD,EAAc,CAChC,MAAMK,EAAuB,CAAA,EAG7B,GAAIJ,IAAU,sBAAwBhG,EAAY,OAAS,kBAErD4D,EAAQ,eAAeA,EAAQ,aAAa,GAC9CwC,EAAW,KAAKxC,EAAQ,aAAaA,EAAQ,aAAa,CAAC,UAEpDoC,IAAU,sBAAwBhG,EAAY,OAAS,aAE5D4D,EAAQ,oBACVwC,EAAW,KAAKxC,EAAQ,kBAAkB,UAEnCoC,IAAU,qBAAuBhG,EAAY,OAAS,WAAY,CAE3E,MAAMqG,EAAazC,EAAQ,WACrB0C,EAAe1C,EAAQ,aAC7B,GAAIyC,GAAcC,EAChB,UAAWjC,KAAiBiC,EACtBD,EAAWhC,CAAa,GAC1B+B,EAAW,KAAKC,EAAWhC,CAAa,CAAC,CAIjD,SAAW2B,IAAU,sBAAwBhG,EAAY,OAAS,iBAAkB,CAElF,MAAMuG,EAAS3C,EAAQ,OACvB,GAAI2C,EACF,UAAWtC,KAASsC,EACdtC,EAAM,oBACRmC,EAAW,KAAKnC,EAAM,kBAAkB,CAIhD,SAAW+B,IAAU,uBAAyBhG,EAAY,OAAS,kBAAmB,CAEpF,MAAMwG,EAAe5C,EAAQ,aACvB6C,EAAiB7C,EAAQ,eAC/B,GAAI4C,GAAgBC,EAClB,UAAWC,KAAgBD,EACrBD,EAAaE,CAAY,GAC3BN,EAAW,KAAKI,EAAaE,CAAY,CAAC,CAIlD,SAAWV,IAAU,qBAAuBhG,EAAY,OAAS,SAE3D4D,EAAQ,mBACVwC,EAAW,KAAKxC,EAAQ,iBAAiB,UAElCoC,IAAU,oBAAsBhG,EAAY,OAAS,gBAE1D4D,EAAQ,kBACVwC,EAAW,KAAKxC,EAAQ,gBAAgB,MAErC,CAEL,MAAMqC,EAAarC,EAAQoC,CAAK,EAChC,GAAIC,EAAY,CACd,MAAMC,EAAY,MAAM,QAAQD,CAAU,EAAIA,EAAW,CAAC,EAAIA,EAC1DC,GAAWE,EAAW,KAAKF,CAAS,CAC1C,CACF,CAGA,GAAIE,EAAW,OAAS,EAAG,CACzB,UAAWF,KAAaE,EACtB,GAAI,CACF,MAAMO,EAAQ,IAAI,MAAM,iCAAoCT,CAAS,EAAE,EACvE,MAAMS,EAAM,KAAA,EAEZ,MAAM,IAAI,QAAQ9B,GAAW,CAC3B8B,EAAM,QAAU9B,EAEhB,WAAWA,EAAS,GAAI,CAC1B,CAAC,EACD,QAAQ,IAAI,2BAA2BmB,CAAK,KAAKE,CAAS,EAAE,CAC9D,OAAS7U,EAAK,CACZ,QAAQ,KAAK,sCAAsC6U,CAAS,IAAK7U,CAAG,EACpE,KACF,CAEF,KACF,CACF,CACF,EAGMuV,EAAQ,WAAW,IAAM,CAC7BT,EAAA,CACF,EAAG,GAAG,EAEN,MAAO,IAAM,aAAaS,CAAK,CAEjC,EAAG,CAACtG,EAAcN,GAAa,GAAI6C,CAAW,CAAC,EAK/C,SAASgE,IAAoB,CAC3B,OAAK7G,EAEDA,EAAY,OAAS,kBAChB8G,GAAA,EACE9G,EAAY,OAAS,iBACvB+G,GAAA,EACE/G,EAAY,OAAS,aACvBgH,GAAA,EACEhH,EAAY,OAAS,WACvBiH,GAAA,EACEjH,EAAY,OAAS,WACvBkH,GAAA,EACElH,EAAY,OAAS,kBACvBmH,GAAA,EACEnH,EAAY,OAAS,SACvBoH,GAAA,EACEpH,EAAY,OAAS,gBACvBqH,GAAA,EACErH,EAAY,OAAS,YACvBsH,GAAA,EACEtH,EAAY,OAAS,aACvBuH,GAAA,EAEF,KAvBkB,IAwB3B,CAEA,SAAST,IAAuB,CAC9B,GAAI,CAAC9G,GAAeA,EAAY,OAAS,kBAAmB,OAAO,KACnE,MAAM4D,EAAU5D,EAAY,QAE5B,OACEtE,MAAC,MAAA,CAAI,UAAWe,EAAO,8BAA8B,EAClD,SAAAkE,EAAgB,IAAI,CAAC1B,EAAQuE,IAAU,CACtC,MAAMgE,EAAY,CAAClH,GAAgBiC,KAAiBiB,EAC9CiE,EAAgB,CACpBhL,EAAO,6BAA6B,EACpC6D,GAAgBkD,IAAUzC,IAAsBtE,EAAO,sCAAsC,EAC7F6D,GAAgBkD,IAAUpD,GAAkB,CAAC9N,GAAamK,EAAO,wCAAwC,EACzG,CAAC6D,GAAgBF,IAAmBoD,GAAS/G,EAAO,uCAAuC,EAC3F+K,GAAa/K,EAAO,sCAAsC,EAC1D6D,GAAgB7D,EAAO,uCAAuC,CAAA,EAC9D,OAAO,OAAO,EAAE,KAAK,GAAG,EAIpB4H,EAAgBxD,GAAgB2C,CAAK,EACrCkE,EAAiB9D,EAAQ,cAAgBS,IAAkB,QAAaT,EAAQ,aAAaS,CAAa,EAC5G,iCAAoCT,EAAQ,aAAaS,CAAa,CAAC,GACvE,KAEJ,OACEpG,EAAAA,KAAC,SAAA,CAEC,QAAS,IAAM,CACTqC,IACJkC,EAAgBgB,CAAK,EACrBnD,EAAkBmD,CAAK,EACzB,EACA,SAAUlD,EACV,UAAWmH,EACX,aAAc,IAAMjF,EAAgBgB,CAAK,EAEzC,SAAA,CAAA9H,EAAAA,IAAC,QAAM,SAAAuD,EAAO,EACbyI,GACChM,EAAAA,IAACgB,GAAA,CACC,KAAMuC,EACN,SAAUyI,EACV,KAAK,OAAA,CAAA,CACP,CAAA,EAhBGlE,CAAA,CAoBX,CAAC,EACH,CAEJ,CAEA,SAASuD,IAAsB,CAC7B,GAAI,CAAC/G,GAAeA,EAAY,OAAS,iBAAkB,OAAO,KAClE,MAAM4D,EAAU5D,EAAY,QAGtB2H,EAAQ/D,EAAQ,KAAK,MAAM,gBAAgB,EAEjD,cACG,MAAA,CAAI,UAAWnH,EAAO,mCAAmC,EACxD,SAAA,OAAC,MAAA,CAAI,UAAWA,EAAO,8BAA8B,EAClD,SAAAkL,EAAM,IAAI,CAACC,EAAM9S,IAChBmJ,EAAAA,KAAC,OAAA,CACE,SAAA,CAAA2J,EACA9S,EAAI8O,EAAQ,OAAO,SAAW,IAAM,CACnC,MAAMM,EAAajD,EAAanM,CAAC,GAAG,KAAA,EAAO,eAAiB,GACtDxC,EAAY4R,IAAeN,EAAQ,OAAO9O,CAAC,EAAG,cAAc,YAAA,GAChE8O,EAAQ,OAAO9O,CAAC,EAAG,cAAc,IAAI/F,GAAKA,EAAE,YAAA,CAAa,EAAE,SAASmV,CAAU,EAC1E2D,EAAY5G,EAAanM,CAAC,GAAG,SAAW,GAE9C,OACE4G,EAAAA,IAACwC,GAAA,CACC,MAAO+C,EAAanM,CAAC,GAAK,GAC1B,SAAW3F,GAAM,CACf,MAAM2Y,EAAa,CAAC,GAAG7G,CAAY,EACnC6G,EAAWhT,CAAC,EAAI3F,EAAE,OAAO,MACzB+R,EAAgB4G,CAAU,CAC5B,EACA,SAAUxH,EACV,MAAO,GAAAA,GAAgBuH,GAAa,CAACvV,GACrC,QAAS,GAAAgO,GAAgBhO,GACzB,UAAWmK,EAAO,+BAA+B,CAAA,CAAA,CAGvD,GAAA,CAAG,GAtBM3H,CAuBX,CACD,EACH,EACCwL,UACE,MAAA,CAAI,UAAW7D,EAAO,kCAAkC,EACvD,SAAA,CAAAf,MAAC,MAAA,CAAI,UAAWe,EAAO,wCAAwC,EAAG,SAAA,sBAElE,EACCmH,EAAQ,OAAO,IAAI,CAACK,EAAOnP,IAAM,CAChC,MAAMoP,EAAajD,EAAanM,CAAC,GAAG,KAAA,EAAO,eAAiB,GAGtDiT,EAFY7D,IAAeD,EAAM,cAAc,YAAA,GACnDA,EAAM,cAAc,OAASlV,EAAE,YAAA,CAAa,EAAE,SAASmV,CAAU,EAE/DzH,EAAO,yCAAyC,EAChDA,EAAO,yCAAyC,EACpD,OACEwB,OAAC,OAAY,UAAW,GAAGxB,EAAO,gCAAgC,CAAC,IAAIsL,CAAW,GAAI,SAAA,CAAA,SAC7EjT,EAAI,EAAE,WAAG,SAAA,CAAO,UAAW2H,EAAO,wCAAwC,EAAI,WAAM,cAAc,EACxGwH,EAAM,cAAgBA,EAAM,aAAa,OAAS,GACjDhG,OAAC,OAAA,CAAK,UAAWxB,EAAO,sCAAsC,EAC3D,SAAA,CAAA,IAAI,kBAAgBwH,EAAM,aAAa,KAAK,IAAI,EAAE,GAAA,EACrD,CAAA,CAAA,EALMnP,CAOV,CAEJ,CAAC,CAAA,EACH,CAAA,EAEJ,CAEJ,CAEA,SAASkS,IAAkB,CACzB,GAAI,CAAChH,GAAeA,EAAY,OAAS,aAAc,OAAO,KAC9D,MAAM4D,EAAU5D,EAAY,QAE5B,cACG,MAAA,CAAI,UAAWvD,EAAO,gCAAgC,EACrD,SAAA,CAAAf,MAAC,OAAI,UAAWe,EAAO,gCAAgC,EACpD,WAAQ,UACX,EACAf,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,8BAA8B,EAClD,SAAA,CAAC,GAAM,EAAK,EAAE,IAAK0B,GAAU,CAC5B,MAAM6J,EAAa,CACjBvL,EAAO,6BAA6B,EACpC6D,GAAgBnC,IAAUyF,EAAQ,eAAiBnH,EAAO,sCAAsC,EAChG6D,GAAgBnC,IAAUgD,GAAmB,CAAC7O,GAAamK,EAAO,wCAAwC,EAC1G,CAAC6D,GAAgBa,IAAoBhD,GAAS1B,EAAO,uCAAuC,EAC5F6D,GAAgB7D,EAAO,uCAAuC,CAAA,EAC9D,OAAO,OAAO,EAAE,KAAK,GAAG,EAE1B,OACEf,EAAAA,IAAC,SAAA,CAEC,QAAS,IAAM,CAAC4E,GAAgBc,EAAmBjD,CAAK,EACxD,SAAUmC,EACV,UAAW0H,EAEV,WAAQ,UAAY,QAAA,EALhB7J,EAAM,SAAA,CAAS,CAQ1B,CAAC,EACH,CAAA,EACF,CAEJ,CAEA,SAAS8I,IAAiB,CACxB,GAAI,CAACjH,GAAeA,EAAY,OAAS,WAAY,OAAO,KAC5D,MAAM4D,EAAU5D,EAAY,QAE5B,cACG,MAAA,CAAI,UAAWvD,EAAO,sCAAsC,EAC3D,SAAA,CAAAf,MAAC,MAAA,CAAI,UAAWe,EAAO,wCAAwC,EAAG,SAAA,iDAElE,EACAf,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,kCAAkC,EACtD,SAAA4E,EAAa,IAAI,CAAC7N,EAAMgQ,IAAU,CACjC,MAAMa,EAAgBT,EAAQ,MAAM,QAAQpQ,CAAI,EAC1CyU,EAAsB3H,GAAgBsD,EAAQ,aAAaJ,CAAK,IAAMa,EACtE6D,EAAqB5H,EAAesD,EAAQ,aAAa,QAAQS,CAAa,EAAI,GAElF8D,EAAc,CAClB1L,EAAO,iCAAiC,EACxC6D,GAAgB2H,GAAuBxL,EAAO,0CAA0C,CAAA,EACxF,OAAO,OAAO,EAAE,KAAK,GAAG,EAGpB2L,EAAexE,EAAQ,YAAcA,EAAQ,WAAWS,CAAa,EACvE,iCAAoCT,EAAQ,WAAWS,CAAa,CAAC,GACrE,KAEJ,OACEpG,EAAAA,KAAC,MAAA,CAAgB,UAAWkK,EAC1B,SAAA,QAAC,MAAA,CAAI,UAAW1L,EAAO,wCAAwC,EAC5D,SAAA,CAAA+G,EAAQ,EAAE,GAAA,EACb,SACC,MAAA,CAAI,UAAW/G,EAAO,sCAAsC,EAC3D,SAAA,CAAAf,MAAC,OAAA,CAAK,UAAWe,EAAO,iCAAiC,EAAI,SAAAjJ,EAAK,EACjE4U,GACC1M,EAAAA,IAACgB,GAAA,CACC,KAAMlJ,EACN,SAAU4U,EACV,KAAK,OAAA,CAAA,EAGR9H,GAAgB,CAAC2H,GAChBhK,EAAAA,KAAC,QAAK,UAAWxB,EAAO,iCAAiC,EAAG,SAAA,CAAA,cAC9CyL,EAAqB,CAAA,EACnC,CAAA,EAEJ,EACC,CAAC5H,GACArC,EAAAA,KAAC,OAAI,UAAWxB,EAAO,qCAAqC,EACzD,SAAA,CAAA+G,EAAQ,GACP9H,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACb,MAAM2M,EAAW,CAAC,GAAGhH,CAAY,EACjC,CAACgH,EAAS7E,CAAK,EAAI6E,EAAS7E,EAAQ,CAAC,CAAE,EAAI,CAAC6E,EAAS7E,EAAQ,CAAC,EAAI6E,EAAS7E,CAAK,CAAE,EAClFlC,GAAgB+G,CAAQ,CAC1B,EACA,UAAW5L,EAAO,gCAAgC,EACnD,SAAA,GAAA,CAAA,EAIF+G,EAAQnC,EAAa,OAAS,GAC7B3F,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACb,MAAM2M,EAAW,CAAC,GAAGhH,CAAY,EACjC,CAACgH,EAAS7E,CAAK,EAAI6E,EAAS7E,EAAQ,CAAC,CAAE,EAAI,CAAC6E,EAAS7E,EAAQ,CAAC,EAAI6E,EAAS7E,CAAK,CAAE,EAClFlC,GAAgB+G,CAAQ,CAC1B,EACA,UAAW5L,EAAO,gCAAgC,EACnD,SAAA,GAAA,CAAA,CAED,EAEJ,CAAA,CAAA,EA7CM+G,CA+CV,CAEJ,CAAC,EACH,EACClD,GAAgB,CAAChO,GAChB2L,EAAAA,KAAC,OAAI,UAAWxB,EAAO,qCAAqC,EAC1D,SAAA,CAAAf,MAAC,MAAA,CAAI,UAAWe,EAAO,2CAA2C,EAAG,SAAA,wBAErE,EACCmH,EAAQ,aAAa,IAAI,CAACS,EAAuBiE,IAChDrK,EAAAA,KAAC,MAAA,CAAmB,UAAWxB,EAAO,0CAA0C,EAC7E,SAAA,CAAA6L,EAAW,EAAE,KAAE5M,EAAAA,IAAC,SAAA,CAAQ,SAAAkI,EAAQ,MAAMS,CAAa,EAAE,CAAA,CAAA,EAD9CiE,CAEV,CACD,CAAA,EACH,CAAA,EAEJ,CAEJ,CAEA,SAASpB,IAAiB,CACxB,GAAI,CAAClH,GAAeA,EAAY,OAAS,WAAY,OAAO,KAC5D,MAAM4D,EAAU5D,EAAY,QAE5B,cACG,MAAA,CAAI,UAAWvD,EAAO,sCAAsC,EAC3D,SAAA,CAAAf,MAAC,MAAA,CAAI,UAAWe,EAAO,wCAAwC,EAAG,SAAA,+BAElE,EACAf,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,iCAAiC,EACrD,SAAAmH,EAAQ,MAAM,IAAI,CAAC2E,EAAWC,IAAsB,CACnD,MAAMlW,EAAYgO,GAAgBiB,GAAgBiH,CAAS,IAAMA,EAC3DX,EAAYtG,GAAgBiH,CAAS,IAAM,QAAajH,GAAgBiH,CAAS,IAAM,KAGvFC,EAAe7E,EAAQ,WAAaA,EAAQ,UAAU4E,CAAS,EACjE,iCAAoC5E,EAAQ,UAAU4E,CAAS,CAAC,GAChE,KAEJ,OACEvK,OAACJ,GAAM,SAAN,CACC,SAAA,QAAC,MAAA,CAAI,UAAWpB,EAAO,sCAAsC,EAC3D,SAAA,OAAC,OAAA,CAAM,WAAK,KAAK,EAChBgM,GACC/M,EAAAA,IAACgB,GAAA,CACC,KAAM6L,EAAK,KACX,SAAUE,EACV,KAAK,OAAA,CAAA,CACP,EAEJ,EACA/M,EAAAA,IAACoD,GAAA,CACC,MAAOyC,GAAgBiH,CAAS,GAAG,YAAc,GACjD,SAAWrK,GAAU,CACnB,MAAMuK,EAAW,SAASvK,CAAK,EAC/BqD,GAAmB,CAAE,GAAGD,GAAiB,CAACiH,CAAS,EAAGE,EAAU,CAClE,EACA,QAASjH,GAAoB,IAAKkH,IAAgB,CAChD,MAAOA,EAAW,SAAA,EAClB,MAAO/E,EAAQ,MAAM+E,CAAU,EAAG,KAAA,EAClC,EACF,SAAUrI,EACV,YAAY,WACZ,MAAOA,GAAgBuH,GAAa,CAACvV,EACrC,QAASgO,GAAgBhO,EACzB,UAAS,EAAA,CAAA,CACX,CAAA,EA1BmBkW,CA2BrB,CAEJ,CAAC,EACH,EACClI,GAAgB,CAAChO,GAChB2L,EAAAA,KAAC,OAAI,UAAWxB,EAAO,qCAAqC,EAC1D,SAAA,CAAAf,MAAC,MAAA,CAAI,UAAWe,EAAO,2CAA2C,EAAG,SAAA,wBAErE,EACCmH,EAAQ,MAAM,IAAI,CAAC2E,EAAWzT,IAC7BmJ,EAAAA,KAAC,MAAA,CAAY,UAAWxB,EAAO,0CAA0C,EACvE,SAAA,OAAC,SAAA,CAAQ,WAAK,KAAK,EAAS,YAAI,SAAA,CAAQ,SAAA8L,EAAK,MAAM,CAAA,CAAA,EAD3CzT,CAEV,CACD,CAAA,EACH,CAAA,EAEJ,CAEJ,CAEA,SAASqS,IAAuB,CAC9B,GAAI,CAACnH,GAAeA,EAAY,OAAS,kBAAmB,OAAO,KACnE,MAAM4D,EAAU5D,EAAY,QAE5B,cACG,MAAA,CAAI,UAAWvD,EAAO,gCAAgC,EACrD,SAAA,CAAAf,MAAC,MAAA,CAAI,UAAWe,EAAO,kCAAkC,EAAG,SAAA,oCAE5D,EACAf,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,8BAA8B,EAClD,SAAAmH,EAAQ,QAAQ,IAAI,CAAC3E,EAAQuE,IAAU,CACtC,MAAMoF,EAAajH,GAAgB,IAAI6B,CAAK,EACtCqF,EAAkBjF,EAAQ,eAAe,SAASJ,CAAK,EACvDgE,EAAY,CAAClH,GAAgBiC,KAAiBiB,EACpD,IAAIsF,EAAa,GAEbxI,IACEuI,EACFC,EAAaF,EAAa,IAAM,IACvBA,GAAc,CAACC,IACxBC,EAAa,MAIjB,MAAMrB,EAAgB,CACpBhL,EAAO,6BAA6B,EACpC+K,GAAa/K,EAAO,sCAAsC,EAC1D6D,GAAgBuI,GAAmBpM,EAAO,sCAAsC,EAChF6D,GAAgBsI,GAAc,CAACC,GAAmBpM,EAAO,wCAAwC,EACjG,CAAC6D,GAAgBsI,GAAcnM,EAAO,uCAAuC,CAAA,EAC7E,OAAO,OAAO,EAAE,KAAK,GAAG,EAEpBsM,EAAYF,EACdpM,EAAO,2CAA2C,EAClDA,EAAO,6CAA6C,EAExD,OACEwB,EAAAA,KAAC,MAAA,CAEC,UAAWwJ,EACX,aAAc,IAAMjF,EAAgBgB,CAAK,EAEzC,SAAA,CAAA9H,EAAAA,IAAC+C,GAAA,CACC,QAASmK,EACT,SAAU,IAAM,CACdtF,GAA2BE,CAAK,EAChChB,EAAgBgB,CAAK,CACvB,EACA,SAAUlD,EACV,MAAO5E,EAAAA,IAAC,OAAA,CAAK,UAAWe,EAAO,mCAAmC,EAAI,SAAAwC,EAAO,EAC7E,MAAOqB,GAAgBsI,GAAc,CAACC,EACtC,QAASvI,GAAgBuI,GAAmBD,EAC5C,MAAO,CAAE,KAAM,CAAA,CAAE,CAAA,EAElBtI,GAAgBwI,GACfpN,EAAAA,IAAC,OAAA,CAAK,UAAW,GAAGe,EAAO,kCAAkC,CAAC,IAAIsM,CAAS,GACxE,SAAAD,EACH,CAAA,CAAA,EAnBGtF,CAAA,CAuBX,CAAC,EACH,CAAA,EACF,CAEJ,CAEA,SAAS4D,IAAe,CACtB,GAAI,CAACpH,GAAeA,EAAY,OAAS,SAAU,OAAO,KAC1D,MAAM4D,EAAU5D,EAAY,QACtBX,EAAOuE,EAAQ,MAAQ,EACvBY,EAAYZ,EAAQ,WAAa,EACjCoF,EAAiB,KAAK,IAAInH,GAAc+B,EAAQ,YAAY,GAAKY,EAEjEyE,EAAa3I,EACf0I,EACEvM,EAAO,yCAAyC,EAChDA,EAAO,2CAA2C,EACpD,GAEJ,cACG,MAAA,CAAI,UAAWA,EAAO,oCAAoC,EACzD,SAAA,OAAC,MAAA,CAAI,UAAWA,EAAO,wCAAwC,EAC7D,SAAAwB,OAAC,MAAA,CAAI,UAAW,GAAGxB,EAAO,gCAAgC,CAAC,IAAIwM,CAAU,GACtE,SAAA,CAAApH,GAAa+B,EAAQ,MAAQ,EAAA,CAAA,CAChC,CAAA,CACF,QAEC,MAAA,CAAI,UAAWnH,EAAO,kCAAkC,EACvD,SAAAf,EAAAA,IAACwD,GAAA,CACC,MAAO2C,GACP,SAAUC,GACV,IAAK8B,EAAQ,IACb,IAAKA,EAAQ,IACb,KAAAvE,EACA,SAAUiB,EACV,KAAMsD,EAAQ,MAAQ,GACtB,UAAW,EAAA,CAAA,EAEf,EAECtD,GACC5E,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,mCAAmC,EACxD,SAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,wCAAwC,EAAG,SAAA,CAAA,4BAC7C,SAAA,CAAO,UAAWA,EAAO,wCAAwC,EACjF,SAAA,CAAAmH,EAAQ,aAAcA,EAAQ,MAAQ,EAAA,EACzC,EACCY,EAAY,GACXvG,EAAAA,KAAC,QAAK,UAAWxB,EAAO,oCAAoC,EACzD,SAAA,CAAA,IAAI,KAAG+H,EAAU,GAAA,EACpB,CAAA,CAAA,CAEJ,CAAA,CACF,CAAA,EAEJ,CAEJ,CAEA,SAAS6C,IAAqB,CAC5B,GAAI,CAACrH,GAAeA,EAAY,OAAS,gBAAiB,OAAO,KACjE,MAAM4D,EAAU5D,EAAY,QAEtBkJ,EAAkBnH,GAAe,KAAA,EAAO,gBAAkB6B,EAAQ,YAAY,YAAA,EAC9EiE,EAAY9F,GAAe,KAAA,IAAW,GAEtCoH,EAAa7I,EACf4I,EACEzM,EAAO,2CAA2C,EAClDoL,EACApL,EAAO,6CAA6C,EACpD,GACF,GAEJ,cACG,MAAA,CAAI,UAAWA,EAAO,sCAAsC,EAC3D,SAAA,QAAC,MAAA,CAAI,UAAWA,EAAO,oCAAoC,EACzD,SAAA,CAAAf,MAAC,MAAA,CAAI,UAAWe,EAAO,kCAAkC,EAAG,SAAA,mBAE5D,QACC,MAAA,CAAI,UAAWA,EAAO,iCAAiC,EACrD,WAAQ,cACX,EACCmH,EAAQ,YACP3F,EAAAA,KAAC,OAAI,UAAWxB,EAAO,mCAAmC,EAAG,SAAA,CAAA,IACzDmH,EAAQ,YAAY,OAAO,cAAA,EAC/B,CAAA,EAEJ,SAEC,MAAA,CACC,SAAA,CAAAlI,MAAC,QAAA,CAAM,UAAWe,EAAO,wCAAwC,EAAG,SAAA,gBAEpE,EACAf,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOqG,GACP,SAAW5S,GAAM6S,GAAkB7S,EAAE,OAAO,KAAK,EACjD,SAAUmR,EACV,YAAY,2BACZ,UAAW,GAAG7D,EAAO,kCAAkC,CAAC,IAAI0M,CAAU,EAAA,CAAA,CACxE,EACF,EAEC7I,GAAgB,CAAChO,GAChB2L,EAAAA,KAAC,OAAI,UAAWxB,EAAO,qCAAqC,EAC1D,SAAA,CAAAf,MAAC,MAAA,CAAI,UAAWe,EAAO,2CAA2C,EAAG,SAAA,mBAErE,QACC,MAAA,CAAI,UAAWA,EAAO,0CAA0C,EAC9D,WAAQ,WAAA,CACX,CAAA,EACF,CAAA,EAEJ,CAEJ,CAEA,SAAS6K,IAAkB,CACzB,GAAI,CAACtH,GAAeA,EAAY,OAAS,YAAa,OAAO,KAC7D,MAAM4D,EAAU5D,EAAY,QAE5B,cACG,MAAA,CAAI,UAAWvD,EAAO,uCAAuC,EAE5D,SAAA,QAAC,MAAA,CAAI,UAAWA,EAAO,6BAA6B,EAElD,SAAA,OAAC,MAAA,CAAI,UAAWA,EAAO,kCAAkC,EACtD,SAAAmH,EAAQ,gBAAkB,KAAO,UAAYA,EAAQ,gBAAkB,KAAO,UAAY,UAC7F,SAGC,MAAA,CAAI,UAAWnH,EAAO,mCAAmC,EACxD,SAAA,OAAC,MAAA,CAAK,WAAQ,MAAM,EACnBoG,GAAa,SAAS,OAAO,MAASe,EAAgBf,EAAY,QAAQ,MAAM,KAAK,GACpFnH,EAAAA,IAACgB,GAAA,CACC,KAAMkH,EAAQ,MACd,SAAU,iCAAqCA,EAAgBf,EAAY,QAAQ,MAAM,KAAK,CAAC,GAC/F,KAAK,OAAA,CAAA,CACP,EAEJ,EAGEZ,EA0BAhE,EAAAA,KAAAmL,WAAA,CACE,SAAA,OAAC,MAAA,CAAI,UAAW3M,EAAO,qCAAqC,EAAG,QAG9D,MAAA,CAAI,UAAWA,EAAO,kCAAkC,EACtD,SAAAmH,EAAQ,eAAiB,KAAO,UAAYA,EAAQ,eAAiB,KAAO,UAAY,UAC3F,SAGC,MAAA,CAAI,UAAWnH,EAAO,kCAAkC,EACvD,SAAA,OAAC,MAAA,CAAK,WAAQ,KAAK,EAClBoG,GAAa,SAAS,MAAM,MAASe,EAAgBf,EAAY,QAAQ,KAAK,KAAK,GAClFnH,EAAAA,IAACgB,GAAA,CACC,KAAMkH,EAAQ,KACd,SAAU,iCAAqCA,EAAgBf,EAAY,QAAQ,KAAK,KAAK,CAAC,GAC9F,KAAK,OAAA,CAAA,CACP,EAEJ,CAAA,EACF,EA5CAnH,EAAAA,IAAC,SAAA,CACC,QAAS,SAAY,CAGnB,GAFAwG,EAAqB,EAAI,EAErBW,GAAe3J,GAAc,iBAAkB,CACjD,MAAM6M,EAAelD,EAAY,UAAU,UAAY,CAAA,EACvD,UAAWmD,KAASD,EAClB,GAAKnC,EAAgBoC,CAAK,EACxB,GAAI,CAEF,MADc,IAAI,MAAM,iCAAqCpC,EAAgBoC,CAAK,CAAC,EAAE,EACzE,KAAA,EACZ,KACF,OAAS3U,EAAK,CACZ,QAAQ,KAAK,uBAAuB2U,CAAK,cAAe3U,CAAG,CAC7D,CAGN,CACF,EACA,SAAUiP,EACV,UAAW7D,EAAO,wCAAwC,EAC3D,SAAA,mBAAA,CAAA,CAuBD,EAEJ,EAGCwF,GAAqB,CAAC3B,GACrBrC,EAAAA,KAAC,OAAI,UAAWxB,EAAO,wCAAwC,EAC7D,SAAA,CAAAwB,EAAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACbmE,EAAkB,EAAK,EACvB2B,GAAmB,EAAK,EAExB,WAAW,IAAM,CACfe,GAAA,CACF,EAAG,GAAG,CACR,EACA,UAAW,GAAGrI,EAAO,iCAAiC,CAAC,IAAIA,EAAO,0CAA0C,CAAC,GAE7G,SAAA,CAAAf,MAAC,OAAA,CAAK,UAAWe,EAAO,kCAAkC,EAAG,SAAA,IAAC,EAC9Df,EAAAA,IAAC,QAAK,SAAA,gBAAa,CAAA,CAAA,CAAA,EAGrBuC,EAAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACbmE,EAAkB,EAAI,EACtB2B,GAAmB,EAAI,EAEvB,WAAW,IAAM,CACfe,GAAA,CACF,EAAG,GAAG,CACR,EACA,UAAW,GAAGrI,EAAO,iCAAiC,CAAC,IAAIA,EAAO,wCAAwC,CAAC,GAE3G,SAAA,CAAAf,MAAC,OAAA,CAAK,UAAWe,EAAO,kCAAkC,EAAG,SAAA,IAAC,EAC9Df,EAAAA,IAAC,QAAK,SAAA,UAAO,CAAA,CAAA,CAAA,CACf,EACF,EAID4E,GAAgBsD,EAAQ,aACvB3F,OAAC,OAAI,UAAWxB,EAAO,yCAAyC,EAC9D,SAAA,CAAAf,EAAAA,IAAC,UAAO,SAAA,WAAQ,EAAS,IAAEkI,EAAQ,WAAA,EACrC,CAAA,EAEJ,CAEJ,CAEA,SAAS2D,IAAkB,CACzB,GAAI,CAACvH,GAAeA,EAAY,OAAS,aAAc,OAAO,KAC9D,MAAM4D,EAAU5D,EAAY,QAEtBqJ,EAAyBzF,EAAQ,mBACnC,iCAAoCA,EAAQ,kBAAkB,GAC9D5D,EAAY,SAEhB,OACEtE,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,wCAAwC,EAC7D,SAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,sCAAsC,EAC3D,SAAA,CAAAf,EAAAA,IAACwC,GAAA,CACC,MAAOmE,EACP,SAAWlT,GAAMmT,GAAmBnT,EAAE,OAAO,KAAK,EAClD,SAAUmR,EACV,YAAY,mBACZ,MAAOA,GAAgB,CAAChO,EACxB,QAASgO,GAAgBhO,EACzB,UAAS,GACT,UAAWmK,EAAO,8BAA8B,CAAA,CAAA,EAGjD6D,GAAgB,CAAChO,GAChB2L,EAAAA,KAAC,OAAI,UAAWxB,EAAO,uCAAuC,EAC5D,SAAA,CAAAwB,OAAC,MAAA,CACC,SAAA,CAAAvC,EAAAA,IAAC,UAAO,SAAA,oBAAiB,EAAS,IAAEkI,EAAQ,aAAA,EAC9C,EACCyF,SAA0B3M,GAAA,CAAY,KAAMkH,EAAQ,cAAe,SAAUyF,EAAuB,KAAK,OAAA,CAAQ,CAAA,EACpH,CAAA,CAAA,CAEJ,CAAA,CACF,CAEJ,CAEA,GAAI,CAACpW,GAAW,CAAC+M,EACf,OACEtE,EAAAA,IAAC,OAAI,UAAWe,EAAO,2BAA2B,EAChD,SAAAf,EAAAA,IAAC,IAAA,CAAE,SAAA,iBAAA,CAAe,EACpB,EAIJ,MAAM1E,IAAakJ,EAAmB,GAAKjN,EAAQ,UAAU,QAAQ,OAAU,IACzEqW,GAAgBtJ,EAAY,SAAiB,KAGnD,eAAe+E,IAAoB,CAOjC,MAAMwE,EAAa,MANI,IAAI9W,GACzBuF,GAAA,EACAD,GAAA,EACAE,GAAA,CAA8B,EAGQ,cAAc,CACpD,QAAAjI,EACA,gBAAAoC,EACA,YAAAuN,EACA,cAAAC,CAAA,CACD,EAEDG,EAAWwJ,CAAU,CACvB,CAEA,eAAevE,IAAkB,CAC/B,GAAI,CAAC/R,GAAWiN,GAAoBjN,EAAQ,UAAU,QAAQ,OAAQ,OAEtE,MAAMW,EAASX,EAAQ,UAAU,QAAQiN,CAAgB,EACzD,GAAI,CAACtM,EAAQ,OAEb,MAAMnD,EAAO,MAAMf,EAAG,MAAM,IAAIkE,CAAM,EACtC,GAAI,CAACnD,EAAM,OAEXwP,EAAexP,CAAI,EACnBiQ,GAAa,KAAK,KAAK,EAGvB,MAAM7P,EAAS,MAAMuK,GAAe3K,EAAK,UAAU,EACnDqS,GAAejS,CAAM,EAMrB,MAAM2Y,EAAgBtJ,EAAmB,EACzC,GAAIsJ,EAAgBvW,EAAQ,UAAU,QAAQ,OAAQ,CACpD,MAAMwW,EAAaxW,EAAQ,UAAU,QAAQuW,CAAa,EACtDC,GACF/Z,EAAG,MAAM,IAAI+Z,CAAU,EAAE,KAAMhR,GAAa,CACtCA,GAAYA,EAAS,UACvB0K,GAAY1K,CAAQ,CAExB,CAAC,EAAE,MAAO7H,GAAU,CAClB,QAAQ,KAAK,qCAAsCA,CAAK,CAC1D,CAAC,CAEL,CAoBA,GAjBAyP,EAAkB,IAAI,EACtBe,EAAmB,IAAI,EACvBF,EAAgB,CAAA,CAAE,EAClBI,GAAgB,CAAA,CAAE,EAClBE,GAAmB,CAAA,CAAE,EACrBE,GAAuB,CAAA,CAAE,EACzBE,GAAmB,IAAI,GAAK,EAC5BE,GAAe,CAAC,EAChBE,GAAkB,EAAE,EACpBE,EAAqB,EAAK,EAC1BE,EAAkB,IAAI,EACtBE,GAAmB,EAAE,EACrBE,EAAgB,CAAC,EACjBE,GAAoB,EAAK,EACzBE,GAAe,EAAK,EAGhBnS,EAAK,OAAS,kBAAmB,CACnC,MAAMmT,EAAUnT,EAAK,QACfiZ,EAAkB,CAAC,GAAG9F,EAAQ,OAAO,EACrC+F,EAAwB/F,EAAQ,cAGhCgG,EAAUF,EAAgB,IAAI,CAACG,EAAQ/U,IAAcA,CAAC,EAC5D,QAASA,EAAI8U,EAAQ,OAAS,EAAG9U,EAAI,EAAGA,IAAK,CAC3C,MAAMgV,EAAI,KAAK,MAAM,KAAK,UAAYhV,EAAI,EAAE,EAC5C,CAAC8U,EAAQ9U,CAAC,EAAI8U,EAAQE,CAAC,CAAE,EAAI,CAACF,EAAQE,CAAC,EAAIF,EAAQ9U,CAAC,CAAE,CACxD,CAGA,MAAMwB,EAAWsT,EAAQ,IAAI9U,GAAK4U,EAAgB5U,CAAC,CAAE,EAE/CiV,EAAkBH,EAAQ,UAAUvF,GAAiBA,IAAkBsF,CAAqB,EAElG/I,GAAmBtK,CAAQ,EAC3BwK,GAAmB8I,CAAO,EAC1B5I,GAAsB+I,CAAe,CACvC,SAAWtZ,EAAK,OAAS,iBAAkB,CACzC,MAAMmT,EAAUnT,EAAK,QACrByQ,EAAgB,IAAI,MAAM0C,EAAQ,OAAO,MAAM,EAAE,KAAK,EAAE,CAAC,CAC3D,SAAWnT,EAAK,OAAS,WAAY,CAGnC,MAAM6F,EAAW,CAAC,GAFF7F,EAAK,QAEQ,KAAK,EAAE,KAAK,IAAM,KAAK,OAAA,EAAW,EAAG,EAClE6Q,GAAgBhL,CAAQ,CAC1B,SAAW7F,EAAK,OAAS,WAAY,CAGnC,MAAMmZ,EAFUnZ,EAAK,QAEG,MAAM,IAAI,CAACoZ,EAAG/U,IAAMA,CAAC,EAC7C,QAASA,EAAI8U,EAAQ,OAAS,EAAG9U,EAAI,EAAGA,IAAK,CAC3C,MAAMgV,EAAI,KAAK,MAAM,KAAK,UAAYhV,EAAI,EAAE,EAC5C,CAAC8U,EAAQ9U,CAAC,EAAI8U,EAAQE,CAAC,CAAE,EAAI,CAACF,EAAQE,CAAC,EAAIF,EAAQ9U,CAAC,CAAE,CACxD,CACA4M,GAAuBkI,CAAO,EAC9BpI,GAAmB,CAAA,CAAE,CACvB,SAAW/Q,EAAK,OAAS,kBACvBmR,GAAmB,IAAI,GAAK,UACnBnR,EAAK,OAAS,SAAU,CACjC,MAAMmT,EAAUnT,EAAK,QACrBqR,GAAe,KAAK,OAAO8B,EAAQ,IAAMA,EAAQ,KAAO,CAAC,CAAC,CAC5D,MAAWnT,EAAK,OAAS,iBACvBuR,GAAkB,EAAE,CAExB,CAEA,SAASgI,IAAiB,CACnB/W,IAELsN,EAAgB,EAAK,EACrBF,EAAkB,IAAI,EAElBH,EAAmBjN,EAAQ,UAAU,QAAQ,OAAS,GACxDkN,EAAoBD,EAAmB,CAAC,EAE5C,CAGA,MAAM+J,GAA6B,IAAM,CAClC/Q,GAAc,kBACjBkK,GAAA,EAAiB,MAAM/R,GAAO,QAAQ,KAAK,uCAAwCA,CAAG,CAAC,CAE3F,EAEA,cACG,MAAA,CAAI,UAAWoL,EAAO,kBAAkB,EAAG,QAASwN,GAEnD,SAAA,QAAC,MAAA,CAAI,UAAWxN,EAAO,0BAA0B,EAC/C,SAAA,QAAC,MAAA,CAAI,UAAWA,EAAO,8BAA8B,EACnD,SAAA,QAAC,MAAA,CAAI,UAAWA,EAAO,+BAA+B,EACpD,SAAA,CAAAf,MAAC,KAAA,CAAG,UAAWe,EAAO,yBAAyB,EAAG,SAAA,gBAAa,SAC9D,OAAA,CAAK,UAAWA,EAAO,gCAAgC,EACrD,SAAA,CAAAyD,EAAmB,EAAE,IAAEjN,EAAQ,UAAU,QAAQ,MAAA,EACpD,SACC,OAAA,CAAK,UAAWwJ,EAAO,2BAA2B,EAAG,SAAA,CAAA,OAC/CuD,EAAY,EAAA,EACnB,CAAA,EACF,EACAtE,EAAAA,IAAC,SAAA,CACC,QAASoE,EACT,UAAWrD,EAAO,8BAA8B,EACjD,SAAA,WAAA,CAAA,CAED,EACF,QAGC,MAAA,CAAI,UAAWA,EAAO,gCAAgC,EACrD,SAAAf,EAAAA,IAAC,MAAA,CACC,UAAWe,EAAO,iCAAiC,EACnD,MAAO,CAAE,MAAO,GAAGzF,EAAQ,GAAA,CAAI,CAAA,EAEnC,CAAA,EACF,SAGC,MAAA,CAAI,UAAWyF,EAAO,iCAAiC,EACpD,SAAA,EAAAuD,EAAY,OAAS,mBACrBA,EAAY,OAAS,YACrBA,EAAY,OAAS,YACrBA,EAAY,OAAS,mBACrBA,EAAY,OAAS,UACrBA,EAAY,OAAS,iBACrBA,EAAY,OAAS,eACrB/B,OAAC,MAAA,CAAI,UAAWxB,EAAO,mCAAmC,EACxD,SAAA,CAAAf,EAAAA,IAAC,MAAG,UAAWe,EAAO,iCAAiC,EACnD,SAAAuD,EAAY,QAAgB,SAChC,EACC6C,GAAa,SAAS,UAAU,MAAS7C,EAAY,QAAgB6C,EAAY,QAAQ,SAAS,KAAK,GACtGnH,EAAAA,IAACgB,GAAA,CACC,KAAOsD,EAAY,QAAgB,SACnC,SAAU,iCAAqCA,EAAY,QAAgB6C,EAAY,QAAQ,SAAS,KAAK,CAAC,GAC9G,KAAK,OAAA,CAAA,CACP,EAEJ,EAGDyG,IAAgB,CAAChJ,GAChB5E,EAAAA,IAAC,OAAI,UAAWe,EAAO,iCAAiC,EACtD,SAAAwB,EAAAA,KAAC,SAAA,CACC,KAAK,SACL,UAAWxB,EAAO,+BAA+B,EACjD,QAAS,IAAMmG,GAAgBa,GAAS,CAACA,CAAI,EAE5C,SAAA,CAAAd,GAAc,oBAAsB,mBAAmB,MAAA,CAAA,CAAA,EAE5D,EAGD2G,IAAgB3G,IAAe,CAACrC,UAC9B,MAAA,CAAI,UAAW7D,EAAO,wBAAwB,EAAG,SAAA,CAAA,MAC7Cf,EAAAA,IAAC,UAAO,SAAA,WAAQ,EAAS,IAAE4N,EAAA,EAChC,EAGDzC,GAAA,CAAkB,EACrB,EAGCvG,SACE,MAAA,CAAI,UAAW7D,EAAO,4BAA4B,EACjD,SAAAwB,EAAAA,KAACT,GAAA,CACC,QAASlL,EAAY,UAAY,QACjC,MAAOA,EAAY,WAAa,qBAE/B,SAAA,CAAA0N,EAAY,QAAQ,aACnBtE,EAAAA,IAAC,IAAA,CAAE,MAAO,CAAE,OAAQ,GAAM,SAAAsE,EAAY,QAAQ,YAAY,EAG3DA,EAAY,UAAYA,EAAY,OAAS,0BAC3C,MAAA,CAAI,MAAO,CAAE,UAAW,UAAW,QAAS,OAAQ,WAAY,SAAU,IAAK,QAAA,EAC9E,SAAA,CAAAtE,EAAAA,IAAC,OAAA,CAAK,MAAO,CAAE,SAAU,WAAY,MAAO,6BAAA,EAAiC,SAAA,aAAA,CAE7E,EACAA,EAAAA,IAACgB,GAAA,CACC,KAAOsD,EAAY,QAAgB,QAASA,EAAY,QAAgB,aAAa,EACrF,SAAUA,EAAY,SACtB,KAAK,OAAA,CAAA,CACP,EACF,CAAA,CAAA,CAAA,EAGN,SAID,MAAA,CAAI,UAAWvD,EAAO,0BAA0B,EAE/C,SAAA,CAAAf,EAAAA,IAAC,OAAI,UAAWe,EAAO,2BAA2B,EAC/C,SAAC6D,EAyBAN,GAAa,OAAS,aACpBtE,EAAAA,IAAC,SAAA,CACC,QAASoJ,GACT,UAAWrI,EAAO,4BAA4B,EAE/C,WAAmBxJ,EAAQ,UAAU,QAAQ,OAAS,EACnD,oBACA,iBAAA,CAAA,EA/BNgL,EAAAA,KAAAmL,EAAAA,SAAA,CAEG,SAAA,CAAApJ,GAAa,OAAS,aACrBtE,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMqI,GAAA,EACf,SAAU,CAACD,GAAA,EACX,UAAWA,GAAA,EACP,GAAGrH,EAAO,8BAA8B,CAAC,IAAIA,EAAO,uCAAuC,CAAC,GAC5F,GAAGA,EAAO,8BAA8B,CAAC,IAAIA,EAAO,wCAAwC,CAAC,GAClG,SAAA,oBAAA,CAAA,EAIHf,EAAAA,IAAC,SAAA,CACC,QAASwE,EAAmBjN,EAAQ,UAAU,QAAQ,OAAS,EAAI+W,GAAiBpF,GACpF,UAAWnI,EAAO,4BAA4B,EAE7C,WAAmBxJ,EAAQ,UAAU,QAAQ,OAAS,EACnD,iBACA,iBAAA,CAAA,CACN,EACF,EAcJ,SAGC,MAAA,CAAI,UAAWwJ,EAAO,yBAAyB,EAC9C,SAAA,QAAC,MAAA,CAAI,UAAWA,EAAO,wBAAwB,EAC7C,SAAA,OAAC,MAAA,CAAI,UAAW,GAAGA,EAAO,8BAA8B,CAAC,IAAIA,EAAO,yCAAyC,CAAC,GAC3G,SAAAxJ,EAAQ,UAAU,eACrB,QACC,MAAA,CAAI,UAAWwJ,EAAO,8BAA8B,EAAG,SAAA,aAAA,CAExD,CAAA,EACF,SACC,MAAA,CAAI,UAAWA,EAAO,wBAAwB,EAC7C,SAAA,OAAC,MAAA,CAAI,UAAW,GAAGA,EAAO,8BAA8B,CAAC,IAAIA,EAAO,uCAAuC,CAAC,GACzG,SAAAxJ,EAAQ,UAAU,aACrB,QACC,MAAA,CAAI,UAAWwJ,EAAO,8BAA8B,EAAG,SAAA,SAAA,CAExD,CAAA,EACF,SACC,MAAA,CAAI,UAAWA,EAAO,wBAAwB,EAC7C,SAAA,CAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAW,GAAGxB,EAAO,8BAA8B,CAAC,IAAIA,EAAO,wCAAwC,CAAC,GAC1G,SAAA,CAAAxJ,EAAQ,UAAU,eAAiB,EAChC,KAAK,MAAOA,EAAQ,UAAU,aAAeA,EAAQ,UAAU,eAAkB,GAAG,EACpF,EAAE,GAAA,EACR,QACC,MAAA,CAAI,UAAWwJ,EAAO,8BAA8B,EAAG,SAAA,OAAA,CAExD,CAAA,EACF,CAAA,EACJ,CAAA,EACF,EAEGgG,IACC/G,EAAAA,IAAC,MAAA,CACC,UAAWe,EAAO,qCAAqC,EACvD,KAAK,SACL,aAAW,OACX,kBAAgB,2BAEhB,gBAAC,MAAA,CAAI,UAAWA,EAAO,qCAAqC,EAC1D,SAAA,OAAC,KAAA,CAAG,GAAG,2BAA2B,SAAA,iBAAc,SAC/C,MAAA,CAAI,UAAWA,EAAO,oCAAoC,EACzD,SAAA,CAAAwB,OAAC,MAAA,CACC,SAAA,CAAAvC,MAAC,MAAA,CAAI,UAAWe,EAAO,yCAAyC,EAAG,SAAA,aAAU,SAC5E,KAAA,CAAG,UAAWA,EAAO,kCAAkC,EACtD,SAAA,QAAC,KAAA,CAAG,UAAWA,EAAO,iCAAiC,EACrD,SAAA,CAAAf,EAAAA,IAAC,QAAK,SAAA,SAAM,QACX,OAAA,CAAK,UAAWe,EAAO,iCAAiC,EAAG,SAAA,KAAA,CAAG,CAAA,EACjE,SACC,KAAA,CAAG,UAAWA,EAAO,iCAAiC,EACrD,SAAA,CAAAf,EAAAA,IAAC,QAAK,SAAA,iCAA8B,QACnC,OAAA,CAAK,UAAWe,EAAO,iCAAiC,EAAG,SAAA,SAAA,CAAO,CAAA,EACrE,SACC,KAAA,CAAG,UAAWA,EAAO,iCAAiC,EACrD,SAAA,CAAAf,EAAAA,IAAC,QAAK,SAAA,sCAAmC,QACxC,OAAA,CAAK,UAAWe,EAAO,iCAAiC,EAAG,SAAA,WAAA,CAAS,CAAA,EACvE,SACC,KAAA,CAAG,UAAWA,EAAO,iCAAiC,EACrD,SAAA,CAAAf,EAAAA,IAAC,QAAK,SAAA,uBAAoB,QACzB,OAAA,CAAK,UAAWe,EAAO,iCAAiC,EAAG,SAAA,KAAA,CAAG,CAAA,EACjE,CAAA,EACF,CAAA,EACF,SACC,MAAA,CACC,SAAA,CAAAf,MAAC,MAAA,CAAI,UAAWe,EAAO,yCAAyC,EAAG,SAAA,WAAQ,SAC1E,KAAA,CAAG,UAAWA,EAAO,kCAAkC,EACtD,SAAA,QAAC,KAAA,CAAG,UAAWA,EAAO,iCAAiC,EACrD,SAAA,CAAAf,EAAAA,IAAC,QAAK,SAAA,8BAA2B,QAChC,OAAA,CAAK,UAAWe,EAAO,iCAAiC,EAAG,SAAA,OAAA,CAAK,CAAA,EACnE,SACC,KAAA,CAAG,UAAWA,EAAO,iCAAiC,EACrD,SAAA,CAAAf,EAAAA,IAAC,QAAK,SAAA,yBAAsB,QAC3B,OAAA,CAAK,UAAWe,EAAO,iCAAiC,EAAG,SAAA,GAAA,CAAC,CAAA,EAC/D,SACC,KAAA,CAAG,UAAWA,EAAO,iCAAiC,EACrD,SAAA,CAAAf,EAAAA,IAAC,QAAK,SAAA,qCAAkC,QACvC,OAAA,CAAK,UAAWe,EAAO,iCAAiC,EAAG,SAAA,GAAA,CAAC,CAAA,EAC/D,SACC,KAAA,CAAG,UAAWA,EAAO,iCAAiC,EACrD,SAAA,CAAAf,EAAAA,IAAC,QAAK,SAAA,mBAAgB,QACrB,OAAA,CAAK,UAAWe,EAAO,iCAAiC,EAAG,SAAA,GAAA,CAAC,CAAA,EAC/D,CAAA,EACF,CAAA,EACF,CAAA,EACF,QACC,MAAA,CAAI,UAAWA,EAAO,mCAAmC,EACxD,SAAAf,EAAAA,IAAC,SAAA,CAAO,KAAK,SAAS,QAAS,IAAMgH,GAAoB,EAAK,EAAG,2BAEjE,CAAA,CACF,CAAA,EACF,CAAA,CAAA,CACF,EAEJ,CAEJ,yTCznDO,SAASwH,GAAS,CACvB,MAAAxM,EACA,MAAAS,EACA,SAAAgM,EACA,MAAAC,EAAQ9M,EAAO,QAAQ,GAAG,EAC1B,KAAAS,EACA,UAAAhC,EACA,MAAAoB,EACA,GAAGC,CACL,EAAkB,CAChB,OACE1B,EAAAA,IAACkB,GAAA,CACE,GAAGQ,EACJ,QAAQ,SACR,OAAM,GACN,OAAM,GACN,MAAO,CAAE,WAAY,aAAagN,CAAK,GAAI,GAAGjN,CAAA,EAC9C,UAAApB,EAEA,SAAAkC,EAAAA,KAAC,MAAA,CAAI,UAAWxB,GAAO,sBAAsB,EAE3C,SAAA,CAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,GAAO,mBAAmB,EACxC,SAAA,CAAAf,MAAC,KAAA,CAAG,UAAWe,GAAO,kBAAkB,EACrC,SAAAiB,EACH,EACCK,GACCrC,EAAAA,IAAC,MAAA,CAAI,UAAWe,GAAO,iBAAiB,EAAG,MAAO,CAAE,MAAA2N,GACjD,SAAArM,CAAA,CACH,CAAA,EAEJ,QAGC,MAAA,CAAI,UAAWtB,GAAO,kBAAkB,EACtC,SAAA0B,EACH,EAGCgM,GACCzO,EAAAA,IAAC,MAAA,CAAI,UAAWe,GAAO,qBAAqB,EACzC,SAAA0N,CAAA,CACH,CAAA,CAAA,CAEJ,CAAA,CAAA,CAGN,gkBCvCO,SAASE,GAAO,CACrB,QAAA5M,EAAU,UACV,KAAAhC,EAAO,SACP,QAAA6O,EAAU,GACV,UAAA/L,EAAY,GACZ,SAAAvC,EAAW,GACX,UAAAuO,EACA,QAAAC,EACA,SAAAtN,EACA,UAAAnB,EACA,GAAGqB,CACL,EAAgB,CACd,OACE1B,EAAAA,IAAC,SAAA,CACE,GAAG0B,EACJ,SAAUpB,GAAYsO,EACtB,UAAW/O,EACTkB,GAAO,OACPA,GAAO,WAAWgB,CAAO,EAAE,EAC3BhB,GAAO,WAAWhB,CAAI,EAAE,EACxB6O,GAAW7N,GAAO,iBAAiB,EACnC8B,GAAa9B,GAAO,oBAAoB,EACxCV,CAAA,EAGD,WACCkC,EAAAA,KAAAmL,EAAAA,SAAA,CACE,SAAA,CAAA1N,MAAC+O,IAAe,KAAAhP,EAAY,EAC3ByB,CAAA,CAAA,CACH,EAEAe,EAAAA,KAAAmL,EAAAA,SAAA,CACG,SAAA,CAAAmB,GAAa7O,EAAAA,IAAC,OAAA,CAAK,UAAWe,GAAO,aAAe,SAAA8N,EAAU,EAC9DrN,EACAsN,GAAW9O,EAAAA,IAAC,OAAA,CAAK,UAAWe,GAAO,aAAe,SAAA+N,CAAA,CAAQ,CAAA,CAAA,CAC7D,CAAA,CAAA,CAIR,CAUA,SAASC,GAAe,CAAE,KAAAhP,GAA6B,CACrD,MAAMiP,EAAcjP,IAAS,QAAU,OAASA,IAAS,QAAU,OAAS,OAE5E,OACEwC,EAAAA,KAAC,MAAA,CACC,MAAOyM,EACP,OAAQA,EACR,QAAQ,YACR,KAAK,OACL,MAAM,6BACN,UAAWjO,GAAO,gBAElB,SAAA,CAAAf,EAAAA,IAAC,SAAA,CACC,GAAG,KACH,GAAG,KACH,EAAE,KACF,OAAO,eACP,YAAY,IACZ,cAAc,QACd,gBAAgB,YAChB,QAAQ,MAAA,CAAA,EAEVA,EAAAA,IAAC,OAAA,CACC,EAAE,0BACF,OAAO,eACP,YAAY,IACZ,cAAc,OAAA,CAAA,CAChB,CAAA,CAAA,CAGN,uxBCnIO,SAASiP,GAAe,CAAE,QAAA1X,EAAS,QAAA2X,EAAS,WAAAC,GAAqB,CACtE,MAAMC,EAAW7X,EAAQ,QAAQ,SAC3B8X,EAAc,KAAK,MAAM9X,EAAQ,QAAQ,WAAW,EAG1D,IAAI+X,EAAoB,GACpBC,EAAmB,GACnBH,GAAY,IACdE,EAAoB,iBACpBC,EAAmB,wBACVH,GAAY,IACrBE,EAAoB,YACpBC,EAAmB,wBACVH,GAAY,IACrBE,EAAoB,eACpBC,EAAmB,yBAEnBD,EAAoB,eACpBC,EAAmB,sBAIrB,SAASC,EAAWC,EAAyB,CAC3C,MAAMC,EAAO,KAAK,MAAMD,EAAU,EAAE,EAC9BE,EAAOF,EAAU,GACvB,OAAIC,EAAO,EACF,GAAGA,CAAI,IAAIC,EAAK,WAAW,SAAS,EAAG,GAAG,CAAC,OAE7C,GAAGA,CAAI,MAChB,CAEA,OACEpN,EAAAA,KAAC,MAAA,CAAI,UAAWxB,GAAO,iBAAiB,EAEtC,SAAA,CAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,GAAO,yBAAyB,EAC9C,SAAA,CAAAf,MAAC,MAAA,CAAI,UAAWe,GAAO,wBAAwB,EAAG,SAAA,KAAE,QACnD,KAAA,CAAG,UAAWA,GAAO,wBAAwB,EAAG,SAAA,yBAAsB,EACvEf,EAAAA,IAAC,IAAA,CACC,UAAWe,GAAO,yBAAyB,EAC3C,MAAO,CAAE,MAAOwO,CAAA,EAEf,SAAAD,CAAA,CAAA,CACH,EACF,EAGA/M,EAAAA,KAAC,MAAA,CAAI,UAAWxB,GAAO,wBAAwB,EAC7C,SAAA,CAAAf,EAAAA,IAACwO,GAAA,CACC,MAAM,sBACN,MAAOjX,EAAQ,UAAU,eACzB,MAAM,sBAAA,CAAA,EAGRyI,EAAAA,IAACwO,GAAA,CACC,MAAM,qBACN,MAAOjX,EAAQ,UAAU,aACzB,MAAM,sBAAA,CAAA,EAGRyI,EAAAA,IAACwO,GAAA,CACC,MAAM,cACN,MAAO,GAAG,KAAK,MAAMY,CAAQ,CAAC,IAC9B,MAAOG,CAAA,CAAA,EAGTvP,EAAAA,IAACwO,GAAA,CACC,MAAM,qBACN,MAAOgB,EAAWH,CAAW,EAC7B,MAAM,sBAAA,CAAA,CACR,EACF,EAGArP,EAAAA,IAACkB,GAAA,CACC,QAAQ,SACR,UAAWH,GAAO,4BAA4B,EAE9C,SAAAwB,EAAAA,KAAC,IAAA,CAAE,UAAWxB,GAAO,4BAA4B,EAC/C,SAAA,CAAAf,EAAAA,IAAC,UAAO,SAAA,aAAA,CAAW,EAAS,IAAEwP,EAAWjY,EAAQ,UAAU,cAAc,CAAA,CAAA,CAC3E,CAAA,CAAA,SAID2J,GAAA,CAAK,QAAQ,QAAQ,UAAWH,GAAO,gCAAgC,EACtE,SAAA,CAAAf,MAAC,KAAA,CAAG,UAAWe,GAAO,iCAAiC,EAAG,SAAA,sBAAmB,EAC7EwB,EAAAA,KAAC,IAAA,CAAE,UAAWxB,GAAO,gCAAgC,EAClD,SAAA,CAAAqO,GAAY,IAAM,gEAClBA,GAAY,IAAMA,EAAW,IAAM,kDACnCA,GAAY,IAAMA,EAAW,IAAM,sDACnCA,EAAW,IACV,4EAAA,CAAA,CACJ,CAAA,EACF,EAGA7M,EAAAA,KAAC,MAAA,CAAI,UAAWxB,GAAO,0BAA0B,EAC/C,SAAA,CAAAf,MAAC2O,GAAA,CAAO,QAASQ,EAAY,QAAQ,UAAU,SAAA,uBAE/C,QACCR,GAAA,CAAO,QAASO,EAAS,QAAQ,YAAY,SAAA,sBAAA,CAE9C,CAAA,CAAA,CACF,CAAA,EACF,CAEJ,oTC5EO,SAASU,GAAW,CAAE,MAAA3M,EAAO,MAAAtK,EAAO,MAAA+V,EAAO,IAAAhL,GAAwB,CACxE,MAAMK,EAAaL,GAAOA,EAAM,EAAK/K,EAAQ+K,EAAO,IAAM/K,EAAQ,EAAI,IAAM,EAE5E,OACE4J,EAAAA,KAAC,MAAA,CAAI,UAAWxB,GAAO,aAAa,EAClC,SAAA,CAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,GAAO,qBAAqB,EAC1C,SAAA,CAAAf,MAAC,OAAA,CAAK,UAAWe,GAAO,oBAAoB,EACzC,SAAAkC,EACH,QACC,OAAA,CAAK,UAAWlC,GAAO,oBAAoB,EACzC,SAAApI,CAAA,CACH,CAAA,EACF,EACAqH,EAAAA,IAAC,MAAA,CAAI,UAAWe,GAAO,oBAAoB,EACzC,SAAAf,EAAAA,IAAC,MAAA,CACC,UAAWe,GAAO,mBAAmB,EACrC,MAAO,CACL,WAAY2N,EACZ,MAAO,GAAG3K,CAAU,GAAA,CACtB,CAAA,CACF,CACF,CAAA,EACF,CAEJ,2uDC1BO,SAAS8L,GAAU,CAAE,QAAAX,GAA2B,CACrD,KAAM,CAACY,EAAOC,CAAQ,EAAIrS,EAAAA,SAAgC,IAAI,EACxD,CAACsS,EAAWC,CAAY,EAAIvS,EAAAA,SAAS,EAAI,EAE/CC,EAAAA,UAAU,IAAM,CACduS,EAAA,CACF,EAAG,CAAA,CAAE,EAEL,eAAeA,GAAqB,CAClC,GAAI,CAEF,MAAMC,EAAc,MAAMnc,EAAG,iBAAiB,QAAA,EACxCoc,EAAoBD,EAAY,OAAQlS,GAAMA,EAAE,UAAU,SAAW,WAAW,EAGhF/J,EAAS,MAAMF,EAAG,OAAO,QAAA,EACzBqc,EAAW,IAAI,IAAInc,EAAO,IAAKuB,GAAM,CAACA,EAAE,GAAIA,CAAC,CAAC,CAAC,EAG/C6a,EAAU,MAAMtc,EAAG,iBAAiB,QAAA,EAGpCuc,EAAiBH,EAAkB,OACvC,CAACxW,EAAKqE,IAAMrE,GAAOqE,EAAE,WAAW,gBAAkB,GAClD,CAAA,EAEI8M,EAAiBqF,EAAkB,OACvC,CAACxW,EAAKqE,IAAMrE,GAAOqE,EAAE,WAAW,cAAgB,GAChD,CAAA,EAEIuS,EAAeD,EAAiB,EAAKxF,EAAiBwF,EAAkB,IAAM,EAE9EE,EAAiBL,EAAkB,OAAO,CAACxW,EAAKqE,IAChDA,EAAE,UAAU,WAAaA,EAAE,UAAU,YAErCrE,GACC,IAAI,KAAKqE,EAAE,UAAU,WAAW,EAAE,QAAA,EACjC,IAAI,KAAKA,EAAE,UAAU,SAAS,EAAE,WAChC,IAGCrE,EACN,CAAC,EAEE8W,EACJN,EAAkB,OAAS,EAAIK,EAAiBL,EAAkB,OAAS,EAGvEO,MAAoB,IAK1B,UAAWpZ,KAAW6Y,EAAmB,CACvC,MAAM9b,EAAUiD,EAAQ,cAAc,QACjCoZ,EAAc,IAAIrc,CAAO,GAC5Bqc,EAAc,IAAIrc,EAAS,CAAE,SAAU,EAAG,QAAS,EAAG,MAAO,EAAG,EAElE,MAAMsc,EAAaD,EAAc,IAAIrc,CAAO,EAC5Csc,EAAW,WACXA,EAAW,SAAWrZ,EAAQ,WAAW,cAAgB,EACzDqZ,EAAW,OAASrZ,EAAQ,WAAW,gBAAkB,CAC3D,CAEA,MAAMsZ,GAAgB,MAAM,KAAKF,EAAc,QAAA,CAAS,EAAE,IACxD,CAAC,CAACrc,EAASO,CAAI,KAAO,CACpB,QAAAP,EACA,UAAW+b,EAAS,IAAI/b,CAAO,GAAG,OAASA,EAC3C,kBAAmBO,EAAK,SACxB,SAAUA,EAAK,MAAQ,EAAKA,EAAK,QAAUA,EAAK,MAAS,IAAM,EAC/D,cAAeA,EAAK,KAAA,EACtB,EAIIsE,MAAU,KACV2X,GAAWR,EAAQ,OAAQxY,GAASA,EAAK,UAAU,SAAW,GAAG,EAAE,OACnEiZ,GAAWT,EAAQ,OACtBxY,GAASA,EAAK,UAAU,QAAU,KAAOA,EAAK,UAAU,WAAa,CAAA,EACtE,OACI6U,GAAW2D,EAAQ,OAAQxY,GAASA,EAAK,UAAU,aAAe,CAAC,EAAE,OAGrEkZ,GAAkBV,EAAQ,OAC7BxY,GAAS,IAAI,KAAKA,EAAK,SAAS,UAAU,GAAKqB,CAAA,EAChD,OAGI8X,GAAiBb,EACpB,KAAK,CAAC/c,EAAGE,IAAM,CACd,MAAM2d,EAAQ7d,EAAE,UAAU,YACtB,IAAI,KAAKA,EAAE,UAAU,WAAW,EAAE,QAAA,EAClC,EAIJ,OAHcE,EAAE,UAAU,YACtB,IAAI,KAAKA,EAAE,UAAU,WAAW,EAAE,QAAA,EAClC,GACW2d,CACjB,CAAC,EACA,MAAM,EAAG,CAAC,EAEbnB,EAAS,CACP,cAAeI,EAAY,OAC3B,kBAAmBC,EAAkB,OACrC,eAAAG,EACA,eAAAxF,EACA,aAAAyF,EACA,mBAAAE,EACA,cAAe,EACf,eAAAD,EACA,cAAAI,GACA,eAAAI,GACA,gBAAAD,GACA,cAAe,CACb,SAAAF,GACA,SAAAC,GACA,IAAKpE,EAAA,CACP,CACD,CACH,OAASzX,EAAO,CACd,QAAQ,MAAM,kCAAmCA,CAAK,CACxD,QAAA,CACE+a,EAAa,EAAK,CACpB,CACF,CAEA,SAAST,EAAWC,EAAyB,CAC3C,MAAM0B,EAAQ,KAAK,MAAM1B,EAAU,IAAI,EACjC2B,EAAU,KAAK,MAAO3B,EAAU,KAAQ,EAAE,EAChD,OAAI0B,EAAQ,EACH,GAAGA,CAAK,KAAKC,CAAO,IAEtB,GAAGA,CAAO,GACnB,CAEA,SAASC,EAAWhY,EAA6B,CAE/C,OADU,OAAOA,GAAS,SAAW,IAAI,KAAKA,CAAI,EAAIA,GAC7C,mBAAmB,QAAS,CAAE,IAAK,UAAW,MAAO,UAAW,KAAM,UAAW,CAC5F,CAEA,OAAI2W,EAEAzN,OAAC,MAAA,CAAI,UAAWxB,EAAO,iBAAqB,MAAO,CAAE,UAAW,QAAA,EAC9D,SAAA,CAAAf,EAAAA,IAAC,MAAG,SAAA,cAAA,CAAY,EAChBA,EAAAA,IAAC,KAAE,SAAA,qBAAA,CAAmB,CAAA,EACxB,EAIC8P,EAaHvN,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,UAErB,SAAA,CAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,kBACrB,SAAA,CAAAf,EAAAA,IAAC2O,GAAA,CAAO,QAAQ,YAAY,QAASO,EAAS,UAAWnO,EAAO,wBAAwB,EAAG,SAAA,UAAA,CAE3F,QACC,KAAA,CAAG,UAAWA,EAAO,iBAAqB,SAAA,oBAAiB,QAC3D,IAAA,CAAE,UAAWA,EAAO,oBAAwB,SAAA,iDAAA,CAE7C,CAAA,EACF,EAGAwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,mBACrB,SAAA,CAAAf,EAAAA,IAACwO,GAAA,CACC,MAAM,mBACN,MAAOsB,EAAM,kBAAkB,SAAA,EAC/B,SAAU,OAAOA,EAAM,aAAa,aACpC,MAAOlO,EAAO,QAAQ,GAAG,CAAA,CAAA,EAE3B5B,EAAAA,IAACwO,GAAA,CACC,MAAM,cACN,MAAO,GAAG,KAAK,MAAMsB,EAAM,YAAY,CAAC,IACxC,SAAU,GAAGA,EAAM,cAAc,IAAIA,EAAM,cAAc,WACzD,MAAOlO,EAAO,QAAQ,GAAG,CAAA,CAAA,EAE3B5B,EAAAA,IAACwO,GAAA,CACC,MAAM,WACN,MAAOgB,EAAWM,EAAM,cAAc,EACtC,SAAU,KAAKN,EAAWM,EAAM,kBAAkB,CAAC,eACnD,MAAOlO,EAAO,QAAQ,GAAG,CAAA,CAAA,EAE3B5B,EAAAA,IAACwO,GAAA,CACC,MAAM,4BACN,MAAOsB,EAAM,gBAAgB,SAAA,EAC7B,SAAS,kBACT,MAAOlO,EAAO,KAAK,GAAG,CAAA,CAAA,CACxB,EACF,SAGCV,GAAA,CAAK,QAAQ,SAAS,UAAWH,EAAO,yBAAyB,EAChE,SAAA,CAAAf,MAAC,KAAA,CAAG,UAAWe,EAAO,0BAA0B,EAAG,SAAA,yBAAsB,EACzEwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,yBAAyB,EAC9C,SAAA,CAAAf,EAAAA,IAAC4P,GAAA,CACC,MAAM,aACN,MAAOE,EAAM,cAAc,SAC3B,MAAOlO,EAAO,QAAQ,GAAG,CAAA,CAAA,EAE3B5B,EAAAA,IAAC4P,GAAA,CACC,MAAM,YACN,MAAOE,EAAM,cAAc,SAC3B,MAAOlO,EAAO,QAAQ,GAAG,CAAA,CAAA,EAE3B5B,EAAAA,IAAC4P,GAAA,CAAW,MAAM,MAAM,MAAOE,EAAM,cAAc,IAAK,MAAOlO,EAAO,QAAQ,GAAG,CAAA,CAAG,CAAA,CAAA,CACtF,CAAA,EACF,EAGCkO,EAAM,cAAc,OAAS,GAC5BvN,EAAAA,KAACrB,GAAA,CAAK,QAAQ,SAAS,UAAWH,EAAO,uBAAuB,EAC9D,SAAA,CAAAf,MAAC,KAAA,CAAG,UAAWe,EAAO,wBAAwB,EAAG,SAAA,4BAAyB,QACzE,MAAA,CAAI,UAAWA,EAAO,uBAAuB,EAC3C,SAAA+O,EAAM,cAAc,IAAKtb,GACxB+N,EAAAA,KAAC,MAAA,CAAwB,UAAWxB,EAAO,uBAAuB,EAChE,SAAA,CAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,yBAAyB,EAC9C,SAAA,CAAAf,MAAC,QAAK,UAAWe,EAAO,uBAAuB,EAC5C,WAAM,UACT,EACAwB,EAAAA,KAAC,OAAA,CAAK,UAAWxB,EAAO,uBAAuB,EAC5C,SAAA,CAAAvM,EAAM,kBAAkB,gBAAc,KAAK,MAAMA,EAAM,QAAQ,EAAE,SAAA,CAAA,CACpE,CAAA,EACF,EACAwL,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,gCAAgC,EACrD,SAAAf,EAAAA,IAAC,MAAA,CACC,UAAWe,EAAO,2BAA2B,EAC7C,MAAO,CACL,WACEvM,EAAM,UAAY,GACdoN,EAAO,QAAQ,GAAG,EAClBpN,EAAM,UAAY,GAClBoN,EAAO,QAAQ,GAAG,EAClBA,EAAO,MAAM,GAAG,EACtB,MAAO,GAAGpN,EAAM,QAAQ,GAAA,CAC1B,CAAA,EAEJ,EACA+N,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,wBAAwB,EAC5C,SAAA,CAAAvM,EAAM,cAAc,sBAAA,CAAA,CACvB,CAAA,GAzBQA,EAAM,OA0BhB,CACD,CAAA,CACH,CAAA,EACF,EAIDsb,EAAM,eAAe,OAAS,GAC7BvN,EAAAA,KAACrB,GAAA,CAAK,QAAQ,SACZ,SAAA,CAAAlB,MAAC,KAAA,CAAG,UAAWe,EAAO,2BAA2B,EAAG,SAAA,sBAAmB,EACvEf,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,0BAA0B,EAC9C,SAAA+O,EAAM,eAAe,IAAKvY,GACzBgL,EAAAA,KAAC,MAAA,CAEC,UAAWxB,EAAO,yBAAyB,EAE3C,SAAA,CAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,yBAAyB,EAC9C,SAAA,CAAAf,EAAAA,IAAC,OAAI,UAAWe,EAAO,0BAA0B,EAC9C,SAAAxJ,EAAQ,cAAc,QACzB,EACAyI,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,yBAAyB,EAC7C,SAAAxJ,EAAQ,UAAU,aAAe8Z,EAAW9Z,EAAQ,UAAU,WAAW,CAAA,CAC5E,CAAA,EACF,EACAgL,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,0BAA0B,EAC/C,SAAA,CAAAwB,EAAAA,KAAC,MAAA,CACC,UAAWxB,EAAO,6BAA6B,EAC/C,MAAO,CACL,MACExJ,EAAQ,QAAQ,UAAY,GACxBqK,EAAO,QAAQ,GAAG,EAClBA,EAAO,QAAQ,GAAG,CAAA,EAGzB,SAAA,CAAA,KAAK,MAAMrK,EAAQ,QAAQ,QAAQ,EAAE,GAAA,CAAA,CAAA,EAExCgL,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,0BAA0B,EAC9C,SAAA,CAAAxJ,EAAQ,UAAU,aAAa,IAAEA,EAAQ,UAAU,cAAA,CAAA,CACtD,CAAA,CAAA,CACF,CAAA,CAAA,EA1BKA,EAAQ,EAAA,CA4BhB,CAAA,CACH,CAAA,CAAA,CACF,CAAA,EAEJ,EAlJEgL,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,iBACrB,SAAA,CAAAf,EAAAA,IAAC2O,GAAA,CAAO,QAAQ,YAAY,QAASO,EAAS,UAAWnO,EAAO,wBAAwB,EAAG,SAAA,UAAA,CAE3F,EACAf,EAAAA,IAAC,MAAG,SAAA,cAAA,CAAY,EAChBA,EAAAA,IAAC,KAAE,SAAA,wBAAA,CAAsB,CAAA,EAC3B,CA8IN,CC5TO,MAAMsR,GAAsC,CAAC,CAClD,MAAA9c,EACA,SAAA+c,EACA,UAAAlR,EACA,SAAAC,EAAW,GACX,cAAekR,CACjB,IAAM,CACJ,KAAM,CAACC,EAAWC,CAAY,EAAIvP,GAAM,SAAS,EAAK,EAEhDwP,EAAiC,CACrC,QAAS,OACT,WAAY,4BACZ,aAAc,OACd,OAAQrR,EAAW,cAAgB,UACnC,WAAY,kCACZ,OAAQ,wBACR,YAAamR,EAAY,uBAAyB,cAClD,UAAWA,GAAa,CAACnR,EAAW,mBAAqB,gBACzD,UAAWmR,GAAa,CAACnR,EAAW,mBAAqB,OACzD,QAASA,EAAW,GAAM,CAAA,EAItBwD,EAAY,SAAStP,EAAM,IAAI,aAAaA,EAAM,WAAW,GAEnE,OACE+N,EAAAA,KAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMgP,EAAS/c,EAAM,EAAE,EAChC,UAAA6L,EACA,cAAamR,EACb,MAAOG,EACP,aAAc,IAAMD,EAAa,EAAI,EACrC,aAAc,IAAMA,EAAa,EAAK,EACtC,SAAApR,EACA,aAAYwD,EAEX,SAAA,CAAAtP,EAAM,MACLwL,MAAC,OAAA,CAAK,cAAY,OAAO,MAAO,CAAE,SAAU,OAAQ,QAAS,QAAS,aAAc,MAAA,EACjF,WAAM,KACT,EAEFA,EAAAA,IAAC,KAAA,CAAG,MAAO,CAAE,SAAU,OAAQ,WAAY,IAAK,aAAc,MAAO,MAAO,2BAAA,EACzE,WAAM,KACT,EACAA,EAAAA,IAAC,IAAA,CAAE,MAAO,CAAE,SAAU,OAAQ,MAAO,8BAA+B,WAAY,IAAK,OAAQ,CAAA,EAC1F,WAAM,WAAA,CACT,CAAA,CAAA,CAAA,CAGN,ECqCA,SAAS4R,IAA0B,CACjC,GAAI,CACF,OAAO,KAAK,eAAA,EAAiB,gBAAA,EAAkB,UAAY,eAC7D,MAAQ,CACN,MAAO,eACT,CACF,CAEO,MAAMC,EAAoC,CAC/C,QAAS,EACT,MAAO,CACL,KAAM,SACN,UAAW,SACX,kBAAmB,GACnB,cAAe,EAAA,EAEjB,MAAO,CACL,gBAAiB,GACjB,gBAAiB,EACjB,gBAAiB,IACjB,oBAAqB,GACrB,mBAAoB,GACpB,oBAAqB,GACrB,aAAc,CAAA,EAEhB,SAAU,CACR,UAAW,OACX,UAAW,GACX,YAAa,GACb,qBAAsB,GACtB,eAAgB,EAAA,EAElB,cAAe,CACb,qBAAsB,GACtB,kBAAmB,QACnB,qBAAsB,sBACtB,qBAAsB,GACtB,oBAAqB,EAAA,EAEvB,YAAa,CACX,kBAAmB,GACnB,mBAAoB,GACpB,qBAAsB,GACtB,2BAA4B,GAC5B,gBAAiB,GACjB,cAAe,WACf,kBAAmB,SACnB,gBAAiB,GACjB,yBAA0B,EAAA,EAE5B,GAAI,CACF,oBAAqB,GACrB,iBAAkB,SAClB,gBAAiB,GACjB,iBAAkB,GAClB,cAAe,GACf,gBAAiB,GACjB,WAAY,CAAA,EAEd,QAAS,CACP,gBAAiB,QACjB,iBAAkB,GAClB,oBAAqB,GACrB,oBAAqB,EAAA,EAEvB,SAAU,CACR,kBAAmB,KACnB,SAAUD,GAAA,EACV,WAAY,YAAA,EAEd,SAAU,CACR,cAAe,KACf,kBAAmB,IAAA,EAErB,YAAa,IACf,EAEA,SAASE,GAAMrP,EAAegB,EAAaC,EAAqB,CAC9D,OAAI,OAAO,MAAMjB,CAAK,EAAUgB,EACzB,KAAK,IAAIC,EAAK,KAAK,IAAID,EAAKhB,CAAK,CAAC,CAC3C,CAEA,SAASsP,GAAYtP,EAAoC,CACvD,OAAOA,IAAU,SAAWA,IAAU,QAAUA,IAAU,QAC5D,CAEA,SAASuP,GAAYvP,EAAoC,CACvD,OAAOA,IAAU,SAAWA,IAAU,UAAYA,IAAU,SAAWA,IAAU,SACnF,CAEA,SAASwP,GAAexP,EAA2D,CACjF,OAAOA,IAAU,IAAOA,IAAU,KAAQA,IAAU,GAAKA,IAAU,MAAQA,IAAU,GACvF,CAEA,SAASyP,GAAoBzP,EAA4C,CACvE,OAAOA,IAAU,QAAUA,IAAU,QAAUA,IAAU,QAC3D,CAEA,SAAS0P,GAAgB1P,EAAwC,CAC/D,OAAOA,IAAU,YAAcA,IAAU,YAAcA,IAAU,OACnE,CAEA,SAAS2P,GAAoB3P,EAA4C,CACvE,OAAOA,IAAU,SAAWA,IAAU,UAAYA,IAAU,QAC9D,CAEA,SAAS4P,GAAU5P,EAAkC,CACnD,OAAOA,IAAU,SAAWA,IAAU,UAAYA,IAAU,UAC9D,CAEA,SAAS6P,GAAkB7P,EAA0C,CACnE,OAAOA,IAAU,SAAWA,IAAU,OACxC,CAEA,SAAS8P,GAAoB9P,EAA4C,CACvE,OAAOA,IAAU,MAAQA,IAAU,MAAQA,IAAU,IACvD,CAEA,SAAS+P,GAAa/P,EAAqC,CACzD,OAAOA,IAAU,cAAgBA,IAAU,cAAgBA,IAAU,YACvE,CAEA,SAASgQ,GAAsBC,EAAyB,CACtD,MAAO,CACL,KAAMX,GAAYW,GAAK,IAAI,EAAIA,EAAI,KAAOb,EAAqB,MAAM,KACrE,UAAWG,GAAYU,GAAK,SAAS,EAAIA,EAAI,UAAYb,EAAqB,MAAM,UACpF,kBAAmB,GAAQa,GAAK,mBAAqBb,EAAqB,MAAM,mBAChF,cAAe,GAAQa,GAAK,eAAiBb,EAAqB,MAAM,cAAa,CAEzF,CAEA,SAASc,GAAyBD,EAA4B,CAC5D,MAAME,EAAUF,GAAK,gBACfG,EAA0BD,IAAY,GAAKA,IAAY,EAAIA,EAAU,EACrEE,EAAQhB,GAAM,OAAOY,GAAK,iBAAmBb,EAAqB,MAAM,eAAe,EAAG,EAAG,GAAI,EACjGkB,EAASjB,GAAM,OAAOY,GAAK,oBAAsBb,EAAqB,MAAM,kBAAkB,EAAG,EAAG,CAAC,EAC3G,MAAO,CACL,gBAAiB,GAAQa,GAAK,iBAAmBb,EAAqB,MAAM,iBAC5E,gBAAiBgB,EACjB,gBAAiBC,EACjB,oBAAqB,GAAQJ,GAAK,qBAAuBb,EAAqB,MAAM,qBACpF,mBAAoBkB,EACpB,oBAAqB,GAAQL,GAAK,qBAAuBb,EAAqB,MAAM,qBACpF,aAAcI,GAAeS,GAAK,YAAY,EAAIA,EAAI,aAAeb,EAAqB,MAAM,YAAA,CAEpG,CAEA,SAASmB,GAA4BN,EAA+B,CAClE,MAAMO,EAAYnB,GAAM,OAAOY,GAAK,WAAab,EAAqB,SAAS,SAAS,EAAG,EAAG,GAAG,EAC3FqB,EAAcpB,GAAM,OAAOY,GAAK,aAAeb,EAAqB,SAAS,WAAW,EAAG,EAAG,GAAG,EACvG,MAAO,CACL,UAAWK,GAAoBQ,GAAK,SAAS,EAAIA,EAAI,UAAYb,EAAqB,SAAS,UAC/F,UAAAoB,EACA,YAAAC,EACA,qBAAsB,GAAQR,GAAK,sBAAwBb,EAAqB,SAAS,sBACzF,eAAgB,GAAQa,GAAK,gBAAkBb,EAAqB,SAAS,eAAc,CAE/F,CAEA,SAASsB,GAAgCT,EAAmC,CAC1E,MAAMU,EAAO,OAAOV,GAAK,mBAAsB,UAAY,gBAAgB,KAAKA,EAAI,iBAAiB,EACjGA,EAAI,kBACJb,EAAqB,cAAc,kBACjC5b,EAAU,OAAOyc,GAAK,sBAAyB,UAAYA,EAAI,qBAAqB,QAAU,IAChGA,EAAI,qBACJb,EAAqB,cAAc,qBACvC,MAAO,CACL,qBAAsB,GAAQa,GAAK,sBAAwBb,EAAqB,cAAc,sBAC9F,kBAAmBuB,EACnB,qBAAsBnd,EACtB,qBAAsB,GAAQyc,GAAK,sBAAwBb,EAAqB,cAAc,sBAC9F,oBAAqB,GAAQa,GAAK,qBAAuBb,EAAqB,cAAc,oBAAmB,CAEnH,CAEA,SAASwB,GAA+BX,EAAkC,CACxE,MAAO,CACL,kBAAmB,GAAQA,GAAK,mBAAqBb,EAAqB,YAAY,mBACtF,mBAAoB,GAAQa,GAAK,oBAAsBb,EAAqB,YAAY,oBACxF,qBAAsB,GAAQa,GAAK,sBAAwBb,EAAqB,YAAY,sBAC5F,2BAA4B,GAAQa,GAAK,4BAA8Bb,EAAqB,YAAY,4BACxG,gBAAiB,GAAQa,GAAK,iBAAmBb,EAAqB,YAAY,iBAClF,cAAeM,GAAgBO,GAAK,aAAa,EAAIA,EAAI,cAAgBb,EAAqB,YAAY,cAC1G,kBAAmBO,GAAoBM,GAAK,iBAAiB,EAAIA,EAAI,kBAAoBb,EAAqB,YAAY,kBAC1H,gBAAiB,GAAQa,GAAK,iBAAmBb,EAAqB,YAAY,iBAClF,yBAA0B,GAAQa,GAAK,0BAA4Bb,EAAqB,YAAY,yBAAwB,CAEhI,CAEA,SAASyB,GAAmBZ,EAAsB,CAChD,MAAMa,EAAkBzB,GAAM,OAAOY,GAAK,iBAAmBb,EAAqB,GAAG,eAAe,EAAG,EAAG,IAAI,EACxG2B,EAAa1B,GAAM,OAAOY,GAAK,YAAcb,EAAqB,GAAG,UAAU,EAAG,EAAG0B,CAAe,EAC1G,MAAO,CACL,oBAAqB,GAAQb,GAAK,qBAAuBb,EAAqB,GAAG,qBACjF,iBAAkBQ,GAAUK,GAAK,gBAAgB,EAAIA,EAAI,iBAAmBb,EAAqB,GAAG,iBACpG,gBAAiB,GAAQa,GAAK,iBAAmBb,EAAqB,GAAG,iBACzE,iBAAkB,GAAQa,GAAK,kBAAoBb,EAAqB,GAAG,kBAC3E,cAAe,GAAQa,GAAK,eAAiBb,EAAqB,GAAG,eACrE,gBAAA0B,EACA,WAAAC,CAAA,CAEJ,CAEA,SAASC,GAAwBf,EAA2B,CAC1D,MAAO,CACL,gBAAiBJ,GAAkBI,GAAK,eAAe,EAAIA,EAAI,gBAAkBb,EAAqB,QAAQ,gBAC9G,iBAAkB,GAAQa,GAAK,kBAAoBb,EAAqB,QAAQ,kBAChF,oBAAqB,GAAQa,GAAK,qBAAuBb,EAAqB,QAAQ,qBACtF,oBAAqB,GAAQa,GAAK,qBAAuBb,EAAqB,QAAQ,oBAAmB,CAE7G,CAEA,SAAS6B,GAAyBhB,EAA4B,CAC5D,MAAO,CACL,kBAAmBH,GAAoBG,GAAK,iBAAiB,EAAIA,EAAI,kBAAoBb,EAAqB,SAAS,kBACvH,SAAU,OAAOa,GAAK,UAAa,UAAYA,EAAI,SAAS,OAAS,EAAIA,EAAI,SAAWd,GAAA,EACxF,WAAYY,GAAaE,GAAK,UAAU,EAAIA,EAAI,WAAab,EAAqB,SAAS,UAAA,CAE/F,CAEA,SAAS8B,GAAyBjB,EAA4B,CAC5D,MAAMkB,EAAgB,OAAOlB,GAAK,eAAkB,UAAYA,GAAK,gBAAkB,KACnFA,EAAI,cACJb,EAAqB,SAAS,cAC5BgC,EAAe,OAAOnB,GAAK,mBAAsB,UAAYA,GAAK,oBAAsB,KAC1FA,EAAI,kBACJb,EAAqB,SAAS,kBAClC,MAAO,CACL,cAAA+B,EACA,kBAAmBC,CAAA,CAEvB,CAEO,SAASC,GAAoBpB,EAA2B,CAC7D,GAAI,CAACA,GAAO,OAAOA,GAAQ,SACzB,MAAO,CAAE,GAAGb,CAAA,EAGd,MAAMkC,EAAYrB,EACZsB,EAAU,OAAOD,EAAU,SAAY,SAAWA,EAAU,QAAUlC,EAAqB,QAC3FoC,EAAc,OAAOF,EAAU,aAAgB,UAAYA,EAAU,cAAgB,KACvFA,EAAU,YACVlC,EAAqB,YAEzB,MAAO,CACL,QAAAmC,EACA,MAAOvB,GAAsBsB,EAAU,KAAK,EAC5C,MAAOpB,GAAyBoB,EAAU,KAAK,EAC/C,SAAUf,GAA4Be,EAAU,QAAQ,EACxD,cAAeZ,GAAgCY,EAAU,aAAa,EACtE,YAAaV,GAA+BU,EAAU,WAAW,EACjE,GAAIT,GAAmBS,EAAU,EAAE,EACnC,QAASN,GAAwBM,EAAU,OAAO,EAClD,SAAUL,GAAyBK,EAAU,QAAQ,EACrD,SAAUJ,GAAyBI,EAAU,QAAQ,EACrD,YAAAE,CAAA,CAEJ,CCtWA,MAAM/V,GAAc,4BAEpB,SAASgW,GAAsBC,EAAmC,CAChE,OAAIA,IAAS,SACP,OAAO,OAAW,KAAe,OAAO,YACnC,OAAO,WAAW,8BAA8B,EAAE,QAAU,OAE9D,QAEFA,CACT,CAEA,SAASC,GAAeC,EAAgD,CACtE,GAAI,OAAO,SAAa,IAAa,OACrC,MAAMC,EAAyD,CAC7D,MAAO,OACP,OAAQ,OACR,MAAO,OACP,UAAW,MAAA,EAEb,SAAS,gBAAgB,MAAM,SAAWA,EAAID,CAAK,CACrD,CAEA,SAASE,GAAmBC,EAAwB,CAC9C,OAAO,SAAa,KACxB,SAAS,gBAAgB,UAAU,OAAO,iBAAkBA,CAAO,CACrE,CAEA,SAASC,GAAWC,EAA4B,CAC9C,GAAI,OAAO,SAAa,IAAa,OACrC,MAAMC,EAAYT,GAAsBQ,CAAS,EACjD,SAAS,gBAAgB,aAAa,aAAcC,CAAS,CAC/D,CAEO,MAAMC,EAAgB,CACnB,gBAA+B,CAAE,GAAG/C,CAAA,EACpC,WAAoC,KAE5C,aAAc,CACR,OAAO,OAAW,KAAe,OAAO,aAC1C,KAAK,WAAa,OAAO,WAAW,8BAA8B,EAClE,KAAK,WAAW,iBAAiB,SAAU,KAAK,uBAAuB,EAE3E,CAEA,MAAoB,CAClB,GAAI,CACF,MAAMa,EAAM,aAAa,QAAQxU,EAAW,EAC5C,GAAI,CAACwU,EACH,YAAK,cAAcb,CAAoB,EACvC,KAAK,gBAAkB,CAAE,GAAGA,CAAA,EAC5B,KAAK,WAAA,EACE,KAAK,gBAEd,MAAMvT,EAASwV,GAAoB,KAAK,MAAMpB,CAAG,CAAC,EAClD,YAAK,gBAAkBpU,EACvB,KAAK,cAAcA,CAAM,EACzB,KAAK,WAAA,EACEA,CACT,OAASpJ,EAAO,CACd,eAAQ,KAAK,6DAA8DA,CAAK,EAChF,KAAK,gBAAkB,CAAE,GAAG2c,CAAA,EAC5B,KAAK,QAAQ,KAAK,eAAe,EACjC,KAAK,cAAc,KAAK,eAAe,EACvC,KAAK,WAAA,EACE,KAAK,eACd,CACF,CAEA,KAAK/T,EAAoC,CACvC,MAAMU,EAAS,CACb,GAAGV,EACH,YAAa,IAAI,KAAA,EAAO,YAAA,CAAY,EAEtC,YAAK,gBAAkBU,EACvB,KAAK,QAAQA,CAAM,EACnB,KAAK,cAAcA,CAAM,EACzB,KAAK,WAAA,EACEA,CACT,CAEA,OAAOqW,EAA0D,CAC/D,MAAM3K,EAAO2K,EAAQ,KAAK,eAAe,EACzC,OAAO,KAAK,KAAKf,GAAoB5J,CAAI,CAAC,CAC5C,CAEA,OAAqB,CACnB,MAAM4K,EAAW,CACf,GAAGjD,EACH,YAAa,IAAI,KAAA,EAAO,YAAA,CAAY,EAEtC,YAAK,gBAAkBiD,EACvB,KAAK,QAAQA,CAAQ,EACrB,KAAK,cAAcA,CAAQ,EAC3B,KAAK,WAAA,EACEA,CACT,CAEA,QAAiB,CACf,MAAMC,EAAU,CACd,WAAY,IAAI,KAAA,EAAO,YAAA,EACvB,SAAU,KAAK,eAAA,EAEjB,OAAO,KAAK,UAAUA,EAAS,KAAM,CAAC,CACxC,CAEA,OAAOC,EAA2B,CAChC,GAAI,CACF,MAAM1W,EAAS,KAAK,MAAM0W,CAAI,EACxBjB,EAAYzV,GAAQ,UAAYA,EAChC2W,EAAYnB,GAAoBC,CAAS,EAC/C,OAAO,KAAK,KAAKkB,CAAS,CAC5B,OAAS/f,EAAO,CACd,cAAQ,MAAM,uCAAwCA,CAAK,EACrD,IAAI,MAAM,8BAA8B,CAChD,CACF,CAEA,MAAM,sBAAuD,CAC3D,GAAI,UAAU,SAAS,SACrB,GAAI,CACF,MAAMggB,EAAW,MAAM,UAAU,QAAQ,SAAA,EACzC,MAAO,CACL,MAAOA,EAAS,OAAS,KACzB,MAAOA,EAAS,OAAS,IAAA,CAE7B,OAAShgB,EAAO,CACd,QAAQ,KAAK,8CAA+CA,CAAK,CACnE,CAEF,MAAO,CAAE,MAAO,KAAM,MAAO,IAAA,CAC/B,CAEQ,QAAQ4I,EAA6B,CAC3C,aAAa,QAAQI,GAAa,KAAK,UAAUJ,CAAQ,CAAC,CAC5D,CAEQ,cAAcA,EAA6B,CACjD2W,GAAW3W,EAAS,MAAM,IAAI,EAC9BsW,GAAetW,EAAS,MAAM,SAAS,EACvCyW,GAAmBzW,EAAS,MAAM,eAAiB,CAACA,EAAS,MAAM,iBAAiB,CACtF,CAEQ,wBAA0B,IAAM,CAClC,KAAK,gBAAgB,MAAM,OAAS,WACtC2W,GAAW,QAAQ,EACnB,KAAK,WAAA,EAET,EAEQ,YAAmB,CACzB,GAAI,OAAO,OAAW,IAAa,OACnC,MAAMU,EAAS,CAAE,SAAU,KAAK,eAAA,EAChC,OAAO,cAAc,IAAI,YAAY,uBAAwB,CAAE,OAAAA,CAAA,CAAQ,CAAC,CAC1E,CAEA,SAAgB,CACV,KAAK,YACP,KAAK,WAAW,oBAAoB,SAAU,KAAK,uBAAuB,CAE9E,CAEA,aAA2B,CACzB,OAAO,KAAK,eACd,CACF,CAEO,MAAMC,GAAkB,IAAIR,GC3J7BS,GAAyB,IAExB,SAASC,IAAuC,CACrD,KAAM,CAACxX,EAAUgB,CAAW,EAAIpB,EAAAA,SAA6B,IAAI,EAC3D,CAACkR,EAAS2G,CAAU,EAAI7X,EAAAA,SAAS,EAAI,EACrC,CAAC8X,EAAWC,CAAY,EAAI/X,EAAAA,SAAoB,MAAM,EACtD,CAACgY,EAAiBC,CAAkB,EAAIjY,EAAAA,SAAuC,IAAI,EACnFkY,EAAarY,EAAAA,OAAsB,IAAI,EACvCsY,EAActY,EAAAA,OAA2B,IAAI,EAEnDI,EAAAA,UAAU,IAAM,CACd,MAAMmY,EAASV,GAAgB,KAAA,EAC/B,OAAAS,EAAY,QAAUC,EACtBhX,EAAYgX,CAAM,EAClBP,EAAW,EAAK,EACXH,GAAgB,qBAAA,EAAuB,KAAMF,GAAa,CAC7DS,EAAmBT,CAAQ,CAC7B,CAAC,EAEM,IAAM,CACPU,EAAW,SACb,OAAO,aAAaA,EAAW,OAAO,CAE1C,CACF,EAAG,CAAA,CAAE,EAEL,MAAMG,EAAyBlO,EAAAA,YAAY,IAAM,CAC3C+N,EAAW,SACb,OAAO,aAAaA,EAAW,OAAO,EAExCA,EAAW,QAAU,OAAO,WAAW,IAAM,CAC3CH,EAAa,MAAM,EACnBG,EAAW,QAAU,IACvB,EAAGP,EAAsB,CAC3B,EAAG,CAAA,CAAE,EAECW,EAAiBnO,cAAqDvQ,GAAY,CACtF,GAAI,CAACue,EAAY,QAAS,OAC1BJ,EAAa,QAAQ,EAErB,MAAMvL,EAAO,OAAO5S,GAAY,WAC5BA,EAAQue,EAAY,OAAO,EAC3B,CAAE,GAAGA,EAAY,QAAS,GAAGve,CAAA,EAE3B2d,EAAYnB,GAAoB5J,CAAI,EACpC+L,GAAQb,GAAgB,KAAKH,CAAS,EAC5CY,EAAY,QAAUI,GACtBnX,EAAYmX,EAAK,EACjBR,EAAa,OAAO,EACpBM,EAAA,CACF,EAAG,CAACA,CAAsB,CAAC,EAErBG,EAAgBrO,EAAAA,YAAY,IAAM,CACtC4N,EAAa,QAAQ,EACrB,MAAMU,EAAQf,GAAgB,MAAA,EAC9BS,EAAY,QAAUM,EACtBrX,EAAYqX,CAAK,EACjBV,EAAa,OAAO,EACpBM,EAAA,CACF,EAAG,CAACA,CAAsB,CAAC,EAErBK,EAAiBvO,EAAAA,YAAY,IAC1BuN,GAAgB,OAAA,EACtB,CAAA,CAAE,EAECiB,EAAyBxO,cAAakN,GAAoB,CAC9DU,EAAa,QAAQ,EACrB,MAAMa,EAAWlB,GAAgB,OAAOL,CAAO,EAC/Cc,EAAY,QAAUS,EACtBxX,EAAYwX,CAAQ,EACpBb,EAAa,OAAO,EACpBM,EAAA,CACF,EAAG,CAACA,CAAsB,CAAC,EAErBQ,EAAyB1O,EAAAA,YAAY,SAAY,CACrD,MAAMqN,EAAW,MAAME,GAAgB,qBAAA,EACvCO,EAAmBT,CAAQ,CAC7B,EAAG,CAAA,CAAE,EAEL,MAAO,CACL,SAAApX,EACA,QAAA8Q,EACA,UAAA4G,EACA,eAAAQ,EACA,cAAAE,EACA,eAAAE,EACA,uBAAAC,EACA,gBAAAX,EACA,uBAAAa,CAAA,CAEJ,48CCzFA,SAASC,GAAYC,EAA8B,CACjD,GAAIA,GAAS,KAAM,MAAO,IAC1B,GAAIA,IAAU,EAAG,MAAO,MACxB,MAAMC,EAAQ,CAAC,IAAK,KAAM,KAAM,IAAI,EAC9B5O,EAAQ,KAAK,MAAM,KAAK,IAAI2O,CAAK,EAAI,KAAK,IAAI,IAAI,CAAC,EAEzD,MAAO,IADOA,EAAQ,KAAK,IAAI,KAAM3O,CAAK,GAC1B,QAAQ,CAAC,CAAC,IAAI4O,EAAM5O,CAAK,CAAC,EAC5C,CAEA,SAAS6O,GAAelU,EAA8B,CACpD,GAAI,CAACA,EAAO,MAAO,MACnB,GAAI,CACF,MAAMpJ,EAAO,IAAI,KAAKoJ,CAAK,EAC3B,OAAO,IAAI,KAAK,eAAe,QAAS,CACtC,UAAW,SACX,UAAW,OAAA,CACZ,EAAE,OAAOpJ,CAAI,CAChB,MAAQ,CACN,OAAOoJ,GAAS,EAClB,CACF,CAEA,MAAMmU,GAAU,CACd,CACE,GAAI,cACJ,MAAO,sBACP,MAAQ9Y,IAAwC,CAC9C,GAAGA,EACH,MAAO,CAAE,GAAGA,EAAS,MAAO,kBAAmB,GAAO,KAAM,MAAA,EAC5D,MAAO,CAAE,GAAGA,EAAS,MAAO,gBAAiB,EAAA,CAAM,EACrD,EAEF,CACE,GAAI,gBACJ,MAAO,qBACP,MAAQA,IAAwC,CAC9C,GAAGA,EACH,MAAO,CAAE,GAAGA,EAAS,MAAO,UAAW,UAAW,cAAe,GAAM,kBAAmB,GAAO,KAAM,OAAA,CAAQ,EACjH,EAEF,CACE,GAAI,cACJ,MAAO,mBACP,MAAQA,IAAwC,CAC9C,GAAGA,EACH,MAAO,CAAE,GAAGA,EAAS,MAAO,gBAAiB,EAAA,EAC7C,MAAO,CAAE,GAAGA,EAAS,MAAO,kBAAmB,EAAA,CAAM,EACvD,CAEJ,EAEO,SAAS+Y,GAAa,CAAE,QAAA3H,GAA8B,CAC3D,KAAM,CACJ,SAAApR,EACA,QAAA8Q,EACA,UAAA4G,EACA,eAAAQ,EACA,cAAAE,EACA,eAAAE,EACA,uBAAAC,EACA,gBAAAX,EACA,uBAAAa,CAAA,EACEjB,GAAA,EACE,CAAE,SAAU3N,EAAe,eAAgBmP,CAAA,EAAwBlY,GAAA,EACnE,CAACmY,EAAaC,CAAc,EAAItZ,EAAAA,SAAS,EAAE,EAC3CuZ,EAAe1Z,EAAAA,OAAgC,IAAI,EACnD,CAAC2Z,EAAiBC,CAAkB,EAAIzZ,EAAAA,SAAwB,IAAI,EAEpE0Z,EAAyBjD,GAAoB,CACjD6B,EAAgBjO,IAAU,CACxB,GAAGA,EACH,MAAO,CAAE,GAAGA,EAAK,MAAO,KAAAoM,CAAA,CAAK,EAC7B,CACJ,EAEMkD,EAAyBC,GAAyB,CACtDtB,EAAgBjO,IAAU,CACxB,GAAGA,EACH,MAAO,CAAE,GAAGA,EAAK,MAAO,UAAAuP,CAAA,CAAU,EAClC,CACJ,EAEMC,GAAqBjgB,GAA2C,CAKpE,GAJA0e,EAAgBjO,IAAU,CACxB,GAAGA,EACH,MAAO,CAAE,GAAGA,EAAK,MAAO,GAAGzQ,CAAA,CAAQ,EACnC,EACEqQ,EAAe,CACjB,MAAM6P,EAAyC,CAAA,EAC3ClgB,EAAQ,kBAAoB,SAC9BkgB,EAAS,gBAAkBlgB,EAAQ,iBAEjC,OAAO,KAAKkgB,CAAQ,EAAE,OAAS,GACjCV,EAAoBU,CAAQ,CAEhC,CACF,EAEMC,EAA+B5P,cAAavQ,GAA8C,CAC9F0e,EAAgBjO,IAAU,CACxB,GAAGA,EACH,SAAU,CAAE,GAAGA,EAAK,SAAU,GAAGzQ,CAAA,CAAQ,EACzC,CACJ,EAAG,CAAC0e,CAAc,CAAC,EAoBnB,GAlBArY,EAAAA,UAAU,IAAM,CACd,MAAMT,EAAYuM,GAAiB,CACjC,MAAM0L,EAAU1L,EAA8E,OAC1F0L,GAAQ,eACVsC,EAA6B,CAAE,cAAetC,EAAO,aAAA,CAAe,EAElE,OAAOA,GAAQ,mBAAsB,UACvCsC,EAA6B,CAAE,kBAAmBtC,EAAO,iBAAA,CAAmB,EAEzEoB,EAAA,CACP,EAEA,cAAO,iBAAiB,uBAAwBrZ,CAAQ,EACjD,IAAM,CACX,OAAO,oBAAoB,uBAAwBA,CAAQ,CAC7D,CACF,EAAG,CAACua,EAA8BlB,CAAsB,CAAC,EAErD3H,GAAW,CAAC9Q,EACd,OACEkC,EAAAA,IAAC,OAAI,UAAWe,EAAO,aACrB,SAAAf,EAAAA,IAAC,IAAA,CAAE,iCAAqB,CAAA,CAC1B,EAIJ,MAAM0X,GAAgBC,GAAqB,CACzC,MAAMC,EAAShB,GAAQ,KAAM9e,GAASA,EAAK,KAAO6f,CAAQ,EACrDC,GACL5B,EAAe,IAAM4B,EAAO,MAAM9Z,CAAQ,CAAC,CAC7C,EAEM+Z,GAAe,IAAM,CACzB,MAAMhjB,EAAOuhB,EAAA,EACP0B,EAAO,IAAI,KAAK,CAACjjB,CAAI,EAAG,CAAE,KAAM,mBAAoB,EACpDsI,EAAM,IAAI,gBAAgB2a,CAAI,EAC9BC,EAAO,SAAS,cAAc,GAAG,EACvCA,EAAK,KAAO5a,EACZ4a,EAAK,SAAW,sBAAsB,IAAI,KAAA,EAAO,cAAc,MAAM,EAAG,EAAE,CAAC,QAC3EA,EAAK,MAAA,EACL,IAAI,gBAAgB5a,CAAG,CACzB,EAEM6a,GAAgBvO,GAA+C,CACnE,MAAMwO,EAAOxO,EAAM,OAAO,QAAQ,CAAC,EACnC,GAAI,CAACwO,EAAM,OACX,MAAMC,EAAS,IAAI,WACnBA,EAAO,OAAS,IAAM,CACpB,GAAI,CACF,MAAM/X,EAAO,OAAO+X,EAAO,QAAW,SAAWA,EAAO,OAAS,GACjE7B,EAAuBlW,CAAI,EAC3BgX,EAAmB,IAAI,CACzB,OAASjiB,EAAO,CACd,QAAQ,MAAMA,CAAK,EACnBiiB,EAAmB,4DAA4D,CACjF,CACF,EACAe,EAAO,QAAU,IAAM,CACrBf,EAAmB,oCAAoC,CACzD,EACAe,EAAO,WAAWD,CAAI,EACtBxO,EAAM,OAAO,MAAQ,EACvB,EAsNM0O,IApNiC,IAAM,CAC3C,MAAMC,EAAqC,CACzC,GAAI,WACJ,KAAM,KACN,MAAO,0BACP,SAAU,CAAC,YAAa,cAAe,SAAU,SAAU,SAAU,UAAU,EAC/E,QACE7V,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,aACrB,SAAA,CAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,UACrB,SAAA,CAAAf,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAM,CACK,QAAQ,qDAAqD,GAE/E,OAAO,cAAc,IAAI,YAAY,qBAAqB,CAAC,CAC7D,EACD,SAAA,4BAAA,CAAA,EAGDA,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAWH,EAAKkB,EAAO,YAAY,EACnC,QAAS,IAAM,CACK,QAAQ,mEAAmE,GAE7F,OAAO,cAAc,IAAI,YAAY,oBAAoB,CAAC,CAC5D,EACD,SAAA,wBAAA,CAAA,QAGA,SAAA,CAAO,KAAK,SAAS,QAAS8W,GAAc,SAAA,uBAE7C,EACA7X,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAM,CACbiX,EAAa,SAAS,MAAA,CACxB,EACD,SAAA,sBAAA,CAAA,EAGDjX,EAAAA,IAAC,QAAA,CACC,IAAKiX,EACL,KAAK,OACL,OAAO,mBACP,MAAO,CAAE,QAAS,MAAA,EAClB,SAAUe,EAAA,CAAA,CACZ,EACF,EACCd,GACClX,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,SAAU,MAAO,CAAE,YAAa,UAAW,MAAO,SAAA,EACtE,SAAAmW,EACH,EAEF3U,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,SACrB,SAAA,CAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,SACrB,SAAA,CAAAwB,OAAC,MAAA,CAAI,SAAA,CAAA,uBAAqBiU,GAAYd,GAAiB,OAAS,IAAI,EAAE,MAAIc,GAAYd,GAAiB,OAAS,IAAI,CAAA,EAAE,SACrH,MAAA,CAAI,SAAA,CAAA,sBAAoBiB,GAAe7Y,EAAS,SAAS,aAAa,CAAA,CAAA,CAAE,CAAA,EAC3E,EACAkC,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAM,CACRuW,EAAA,CACP,EACD,SAAA,+BAAA,CAAA,CAED,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EAIE8B,EAAkC,CACtC,GAAI,QACJ,KAAM,KACN,MAAO,sBACP,SAAU,CAAC,QAAS,OAAQ,QAAS,UAAW,OAAQ,WAAW,EACnE,QACE9V,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,aACrB,SAAA,CAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,YACrB,SAAA,CAAAf,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,aAAc,SAAA,QAAK,EAC1Cf,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,WACnB,SAAA,CAAC,QAAS,OAAQ,QAAQ,EAAkB,IAAKoT,GACjD5R,EAAAA,KAAC,QAAA,CAEC,UAAW1C,EAAKkB,EAAO,YAAajD,EAAS,MAAM,OAASqW,GAAQpT,EAAO,qBAAqB,CAAC,EAEjG,SAAA,CAAAf,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,QAASlC,EAAS,MAAM,OAASqW,EACjC,SAAU,IAAMiD,EAAsBjD,CAAI,CAAA,CAAA,EAE3CA,IAAS,QAAU,OAASA,IAAS,OAAS,SAAW,QAAA,CAAA,EARrDA,CAAA,CAUR,CAAA,CACH,CAAA,EACF,EAEA5R,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,YACrB,SAAA,CAAAf,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,aAAc,SAAA,eAAY,EACjDf,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,WACnB,SAAA,CAAC,QAAS,SAAU,QAAS,SAAS,EAAkB,IAAKsT,GAC7D9R,EAAAA,KAAC,QAAA,CAEC,UAAW1C,EAAKkB,EAAO,YAAajD,EAAS,MAAM,YAAcuW,GAAStT,EAAO,qBAAqB,CAAC,EAEvG,SAAA,CAAAf,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,QAASlC,EAAS,MAAM,YAAcuW,EACtC,SAAU,IAAMgD,EAAsBhD,CAAK,CAAA,CAAA,EAE5CA,IAAU,QACP,QACAA,IAAU,SACR,SACAA,IAAU,QACR,OACA,WAAA,CAAA,EAdHA,CAAA,CAgBR,CAAA,CACH,CAAA,EACF,EAEA9R,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,YACrB,SAAA,CAAAwB,EAAAA,KAAC,QAAA,CAAM,UAAWxB,EAAO,YACvB,SAAA,CAAAf,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASlC,EAAS,MAAM,kBACxB,SAAW2L,GACTuM,EAAgBjO,KAAU,CACxB,GAAGA,GACH,MAAO,CAAE,GAAGA,GAAK,MAAO,kBAAmB0B,EAAM,OAAO,OAAA,CAAQ,EAChE,CAAA,CAAA,EAEJ,wBAAA,EAEJ,EACAlH,EAAAA,KAAC,QAAA,CAAM,UAAWxB,EAAO,YACvB,SAAA,CAAAf,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASlC,EAAS,MAAM,cACxB,SAAW2L,GACTuM,EAAgBjO,KAAU,CACxB,GAAGA,GACH,MAAO,CAAE,GAAGA,GAAK,MAAO,cAAe0B,EAAM,OAAO,OAAA,CAAQ,EAC5D,CAAA,CAAA,EAEJ,uBAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EAIE6O,EAAkC,CACtC,GAAI,QACJ,KAAM,KACN,MAAO,QACP,SAAU,CAAC,QAAS,WAAY,OAAO,EACvC,QACE/V,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,aACrB,SAAA,CAAAwB,EAAAA,KAAC,QAAA,CAAM,UAAWxB,EAAO,YACvB,SAAA,CAAAf,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASlC,EAAS,MAAM,gBACxB,SAAW2L,GAAU8N,GAAkB,CAAE,gBAAiB9N,EAAM,OAAO,OAAA,CAAS,CAAA,CAAA,EAChF,wCAAA,EAEJ,EACAzJ,EAAAA,IAAC,IAAA,CAAE,UAAWe,EAAO,mBAAoB,SAAA,6EAAA,CAEzC,CAAA,CAAA,CACF,CAAA,EAIEwX,EAAiC,CACrC,GAAI,OACJ,KAAM,KACN,MAAO,iBACP,SAAU,CAAC,QAAS,MAAO,MAAO,UAAW,SAAS,EACtD,QACEhW,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,aACrB,SAAA,CAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,SACrB,SAAA,CAAAf,EAAAA,IAAC,OAAI,SAAA,gBAAA,CAAc,SAClB,MAAA,CAAI,SAAA,CAAA,0BAAwB,IAAI,KAAK,eAAe,OAAO,EAAE,OAAO,IAAI,IAAM,CAAA,CAAA,CAAE,CAAA,EACnF,EACAuC,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,UACrB,SAAA,CAAAf,EAAAA,IAAC,IAAA,CAAE,UAAWe,EAAO,WAAY,KAAK,oDAAoD,OAAO,SAAS,IAAI,aAAa,SAAA,kBAAA,CAE3H,EACAf,EAAAA,IAAC,IAAA,CAAE,UAAWe,EAAO,WAAY,KAAK,wDAAwD,OAAO,SAAS,IAAI,aAAa,SAAA,eAAA,CAE/H,EACAf,EAAAA,IAAC,IAAA,CAAE,UAAWe,EAAO,WAAY,KAAK,wDAAwD,OAAO,SAAS,IAAI,aAAa,SAAA,wBAAA,CAE/H,EACAf,EAAAA,IAAC,IAAA,CAAE,UAAWe,EAAO,WAAY,KAAK,yDAAyD,OAAO,SAAS,IAAI,aAAa,SAAA,eAAA,CAEhI,CAAA,EACF,EACAf,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,mBAAoB,SAAA,gDAAA,CAE3C,CAAA,CAAA,CACF,CAAA,EAIJ,MAAO,CAACqX,EAAiBC,EAAcC,EAAcC,CAAW,CAClE,GAAA,EAEkC,OAAQC,GACnCzB,EACU,GAAGyB,EAAQ,KAAK,IAAIA,EAAQ,SAAS,KAAK,GAAG,CAAC,GAAG,YAAA,EAClD,SAASzB,EAAY,YAAA,CAAa,EAFvB,EAG1B,EAED,OACExU,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,aACrB,SAAA,CAAAwB,EAAAA,KAAC,SAAA,CAAO,UAAWxB,EAAO,eACxB,SAAA,CAAAwB,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,cACrB,SAAA,CAAAf,EAAAA,IAAC,MAAG,SAAA,kBAAA,CAAgB,EACpBuC,EAAAA,KAAC,MAAA,CAAI,UAAW1C,EAAKkB,EAAO,cAAeyU,IAAc,SAAWzU,EAAO,sBAAsB,CAAC,EAC/F,SAAA,CAAAyU,IAAc,UAAY,eAC1BA,IAAc,SAAW,gBACzBA,IAAc,QAAU1X,EAAS,aAAe,wBAAwB6Y,GAAe7Y,EAAS,WAAW,CAAC,EAAA,CAAA,CAC/G,CAAA,EACF,EACAkC,EAAAA,IAAC,UAAO,UAAWe,EAAO,YAAa,KAAK,SAAS,QAASmO,EAAS,SAAA,WAAA,CAEvE,CAAA,EACF,EAEA3M,EAAAA,KAAC,MAAA,CAAI,UAAWxB,EAAO,UACrB,SAAA,CAAAf,EAAAA,IAAC,OAAA,CAAK,UAAWe,EAAO,WAAY,SAAA,KAAE,EACtCf,EAAAA,IAAC,QAAA,CACC,UAAWe,EAAO,YAClB,KAAK,SACL,YAAY,+BACZ,MAAOgW,EACP,SAAWtN,GAAUuN,EAAevN,EAAM,OAAO,KAAK,CAAA,CAAA,CACxD,EACF,EAEAzJ,EAAAA,IAAC,OAAI,UAAWe,EAAO,QACpB,SAAA6V,GAAQ,IAAKgB,GACZ5X,EAAAA,IAAC,SAAA,CAEC,KAAK,SACL,UAAWe,EAAO,aAClB,QAAS,IAAM2W,GAAaE,EAAO,EAAE,EAEpC,SAAAA,EAAO,KAAA,EALHA,EAAO,EAAA,CAOf,EACH,EAEA5X,EAAAA,IAAC,OAAI,UAAWe,EAAO,SACpB,SAAAoX,GAAiB,IAAKK,GACrBxY,EAAAA,IAACyY,GAAA,CAAoC,KAAMD,EAAQ,KAAM,MAAOA,EAAQ,MACrE,WAAQ,OAAA,EADcA,EAAQ,EAEjC,CACD,CAAA,CACH,EAEAjW,EAAAA,KAAC,SAAA,CAAO,UAAWxB,EAAO,cACxB,SAAA,CAAAf,EAAAA,IAAC,SAAA,CAAO,UAAWe,EAAO,YAAa,KAAK,SAAS,QAASmV,EAAe,SAAA,gCAAA,CAE7E,EACAlW,EAAAA,IAAC,UAAO,UAAWe,EAAO,YAAa,KAAK,SAAS,QAASmO,EAAS,SAAA,QAAA,CAEvE,CAAA,CAAA,CACF,CAAA,EACF,CAEJ,CAQA,SAASuJ,GAAmB,CAAE,KAAApW,EAAM,MAAAL,EAAO,SAAAR,GAAqC,CAC9E,KAAM,CAACkX,EAAUC,CAAW,EAAIjb,EAAAA,SAAS,EAAI,EAC7C,OACE6E,EAAAA,KAAC,UAAA,CAAQ,UAAWxB,EAAO,QACzB,SAAA,CAAAwB,EAAAA,KAAC,SAAA,CACC,KAAK,SACL,UAAWxB,EAAO,cAClB,QAAS,IAAM4X,EAAa5Q,GAAS,CAACA,CAAI,EAC1C,gBAAe2Q,EAEf,SAAA,CAAAnW,OAAC,KAAA,CACC,SAAA,CAAAvC,EAAAA,IAAC,OAAA,CAAK,UAAWe,EAAO,kBAAoB,SAAAsB,EAAK,EAChDL,CAAA,EACH,EACAhC,EAAAA,IAAC,OAAA,CAAK,UAAWH,EAAKkB,EAAO,aAAc,CAAC2X,GAAY3X,EAAO,yBAAyB,CAAC,EAAG,SAAA,GAAA,CAAC,CAAA,CAAA,CAAA,EAE9F2X,GAAY1Y,EAAAA,IAAC,MAAA,CAAI,UAAWe,EAAO,eAAiB,SAAAS,CAAA,CAAS,CAAA,EAChE,CAEJ,CCvdI,OAAO,OAAW,KACpB4T,GAAgB,KAAA,EAGlB,SAASwD,IAAM,CACb,KAAM,CAAC1kB,EAAQ2kB,CAAS,EAAInb,EAAAA,SAAkB,CAAA,CAAE,EAC1C,CAACob,EAAeC,CAAgB,EAAIrb,EAAAA,SAAuB,IAAI,EAC/D,CAACvJ,EAAe6kB,CAAgB,EAAItb,EAAAA,SAAyB,CAAA,CAAE,EAC/D,CAACub,EAAwBC,CAAyB,EAAIxb,EAAAA,SAAiC,CAAA,CAAE,EACzF,CAACyb,EAAsBC,CAAuB,EAAI1b,EAAAA,SAA8B,IAAI,EACpF,CAACsS,EAAWC,CAAY,EAAIvS,EAAAA,SAAS,EAAI,EACzC,CAAC2b,EAAWC,CAAY,EAAI5b,EAAAA,SAAS,EAAK,EAC1C,CAAC6b,EAAkBC,CAAmB,EAAI9b,EAAAA,SAAkC,IAAI,EAChF,CAAC+b,EAAeC,CAAgB,EAAIhc,EAAAA,SAAS,EAAK,EAClD,CAACic,EAAmBC,EAAoB,EAAIlc,EAAAA,SAAS,EAAK,EAC1D,CAACtG,EAAeyiB,EAAgB,EAAInc,EAAAA,SAAS,CAAE,YAAa,GAAI,cAAe,GAAM,EACrF,CAACoc,GAAcC,EAAe,EAAIrc,EAAAA,SAAS,EAAK,EAChD,CAACgX,GAAWsF,EAAY,EAAItc,EAAAA,SAAoB,QAAQ,EACxDuc,EAAc1c,EAAAA,OAAO,EAAK,EAEhCI,EAAAA,UAAU,IAAM,CACTsc,EAAY,UACfA,EAAY,QAAU,GACtBC,EAAA,EAEJ,EAAG,CAAA,CAAE,EAELvc,EAAAA,UAAU,IAAM,CACd,MAAMwc,EAAqBC,GAAkB,CAC3CC,GAAe,EAAI,EAAE,MAAOnlB,GAAU,QAAQ,MAAM,sBAAuBA,CAAK,CAAC,CACnF,EACMolB,EAAoBF,GAAkB,CAC1CG,GAAA,EAAkB,MAAOrlB,GAAU,QAAQ,MAAM,qBAAsBA,CAAK,CAAC,CAC/E,EAEA,cAAO,iBAAiB,sBAAuBilB,CAAiB,EAChE,OAAO,iBAAiB,qBAAsBG,CAAgB,EAEvD,IAAM,CACX,OAAO,oBAAoB,sBAAuBH,CAAiB,EACnE,OAAO,oBAAoB,qBAAsBG,CAAgB,CACnE,CACF,EAAG,CAAA,CAAE,EAEL3c,EAAAA,UAAU,IAAM,CACd,MAAM6c,EAAW/Q,GAAiB,CAChC,MAAM0L,EAAU1L,EAAiD,OAC7D0L,GAAQ,UAAU,OAAO,MAC3B6E,GAAa7E,EAAO,SAAS,MAAM,IAAiB,CAExD,EACA,cAAO,iBAAiB,uBAAwBqF,CAAO,EACvDR,GAAa5E,GAAgB,cAAc,MAAM,IAAiB,EAC3D,IAAM,CACX,OAAO,oBAAoB,uBAAwBoF,CAAO,CAC5D,CACF,EAAG,CAAA,CAAE,EAEL,MAAMC,EAAiB,IAAM,CAC3B,MAAMC,EAAqB,CAAC,SAAU,QAAS,MAAM,EAC/CC,EAAeD,EAAM,QAAQhG,EAAS,EACtCkG,EAAYF,GAAOC,EAAe,GAAKD,EAAM,MAAM,GAAK,SACxD1S,EAAUoN,GAAgB,OAAQrN,IAAU,CAChD,GAAGA,EACH,MAAO,CAAE,GAAGA,EAAK,MAAO,KAAM6S,CAAA,CAAS,EACvC,EACFZ,GAAahS,EAAQ,MAAM,IAAiB,CAC9C,EAEM6S,EAAanG,KAAc,SAAW,SAAWA,KAAc,QAAU,OAAS,SAExF,eAAewF,GAAgB,CAC7B,GAAI,CAEF,MAAMY,EAAoB,SAAS,cAAc,iCAAiC,GAAG,aAAa,SAAS,EACrGC,EAAY,SAAS,cAAc,iCAAiC,GAAG,aAAa,iBAAiB,EAC3G,QAAQ,IAAI,yBAA0BD,EAAmB,cAAeC,CAAS,EAGjF,MAAMC,EAAa,IACbC,EAAiB,aAAa,QAAQ,WAAW,EAGjDC,EAAa,MAAMlnB,EAAG,OAAO,MAAA,EAC7BmnB,GAAY,MAAMnnB,EAAG,MAAM,MAAA,EAEjC,QAAQ,IAAI,oBAAoBknB,CAAU,YAAYC,EAAS,oBAAoBF,CAAc,EAAE,EAG/FC,IAAe,GAAKC,KAAc,GAAKF,IAAmBD,GAE1D,QAAQ,IADNC,IAAmBD,EACT,8BAA8BC,CAAc,OAAOD,CAAU,mBAE7D,0CAF+E,EAI7F,MAAM5lB,GAAapB,CAAE,EACrB,aAAa,QAAQ,YAAagnB,CAAU,GAE5C,QAAQ,IAAI,wCAAwC,EAItD,MAAMI,GAAe,MAAMpnB,EAAG,OAAO,QAAA,EACrC6kB,EAAUuC,EAAY,EACtBnL,EAAa,EAAK,CACpB,OAAS/a,EAAY,CACnB,QAAQ,MAAM,4BAA6BA,CAAK,EAChD,QAAQ,MAAM,iBAAkB,CAC9B,KAAMA,GAAO,KACb,QAASA,GAAO,QAChB,SAAUA,GAAO,SACjB,MAAOA,GAAO,KAAA,CACf,EACD+a,EAAa,EAAK,CACpB,CACF,CAEA,eAAeoL,EAAY7mB,EAAc,CACvCukB,EAAiBvkB,CAAK,EACtB,MAAM8mB,EAAQ,MAAMtnB,EAAG,cAAc,MAAM,SAAS,EAAE,OAAOQ,EAAM,EAAE,EAAE,QAAA,EACvE,QAAQ,IAAI,oCAAoCA,EAAM,EAAE,IAAK8mB,CAAK,EAGlEA,EAAM,KAAK,CAACjoB,EAAGE,IAAM,IAAI,KAAKA,EAAE,SAAS,EAAE,QAAA,EAAY,IAAI,KAAKF,EAAE,SAAS,EAAE,SAAS,EAGtF,MAAMkoB,EAAqC,CAAA,EAC3C,UAAW5mB,KAAQ2mB,EAAO,CACxB,MAAMlnB,EAAQ,MAAMJ,EAAG,MAAM,MAAM,gBAAgB,EAAE,OAAOW,EAAK,EAAE,EAAE,QAAA,EACrE4mB,EAAW5mB,EAAK,EAAE,EAAIP,EAAM,OAC5B,QAAQ,IAAI,kBAAkBO,EAAK,KAAK,MAAMA,EAAK,EAAE,MAAMP,EAAM,MAAM,uCAAuCO,EAAK,SAAS,QAAU,CAAC,EAAE,EACzI,QAAQ,IAAI,YAAaP,EAAM,IAAIqB,IAAKA,GAAE,EAAE,CAAC,CAC/C,CAEAyjB,EAA0BqC,CAAU,EACpCvC,EAAiBsC,CAAK,CACxB,CAEA,SAASE,GAAiBxmB,EAA4B,CACpDokB,EAAwBpkB,CAAY,EACpC4kB,GAAqB,EAAI,CAC3B,CAEA,SAAS6B,IAAuB,CAC9B7B,GAAqB,EAAK,EAC1BN,EAAa,EAAI,CACnB,CAEA,SAASoC,IAAsB,CAC7B9B,GAAqB,EAAK,EAC1BR,EAAwB,IAAI,CAC9B,CAEA,eAAeuC,IAAwB,CAErC,GADArC,EAAa,EAAK,EACdH,GAAwBL,EAAe,CAEzC,MAAM8C,EAAW,MAAM5nB,EAAG,iBACvB,MAAM,kBAAkB,EACxB,OAAO,WAAW,EAClB,QAAA,EACA,MAAM,CAAC,EACP,QAAA,EAEC4nB,EAAS,OAAS,GAAKA,EAAS,CAAC,GACnCpC,EAAoBoC,EAAS,CAAC,CAAC,CAEnC,CACF,CAEA,SAASC,IAAsB,CAC7BvC,EAAa,EAAK,EAClBF,EAAwB,IAAI,CAC9B,CAEA,SAAS0C,IAAqB,CAC5BtC,EAAoB,IAAI,CAC1B,CAEA,SAASuC,IAAwB,CAC/BvC,EAAoB,IAAI,EACpBL,GACFG,EAAa,EAAI,CAErB,CAEA,GAAItJ,EACF,OACEzN,OAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,WAAY,wBAAyB,UAAW,QAAA,EAC7E,SAAA,CAAAvC,EAAAA,IAAC,MAAG,SAAA,sBAAA,CAAoB,EACxBA,EAAAA,IAAC,KAAE,SAAA,iBAAA,CAAe,CAAA,EACpB,EAKJ,GAAIyZ,EACF,OACEzZ,EAAAA,IAAC,MAAA,CAAI,MAAO,CAAE,WAAY,yBACxB,SAAAA,EAAAA,IAAC6P,GAAA,CAAU,QAAS,IAAM6J,EAAiB,EAAK,EAAG,EACrD,EAIJ,GAAII,GACF,OACE9Z,EAAAA,IAAC,MAAA,CAAI,MAAO,CAAE,WAAY,yBACxB,SAAAA,EAAAA,IAAC6W,GAAA,CAAa,QAAS,IAAMkD,GAAgB,EAAK,EAAG,EACvD,EAKJ,GAAIR,EACF,aACG,MAAA,CAAI,MAAO,CAAE,WAAY,yBACxB,SAAAvZ,EAAAA,IAACiP,GAAA,CACC,QAASsK,EACT,QAASuC,GACT,WAAYC,EAAA,CAAA,EAEhB,EAKJ,GAAIpC,GAAqBR,GAAwBL,EAC/C,OACEvW,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,WAAY,wBAAyB,SAAU,QAAS,OAAQ,QAAA,EAC7F,SAAA,CAAAvC,EAAAA,IAAC,SAAA,CACC,QAAS0b,GACT,MAAO,CACL,QAAS,cACT,WAAY,2BACZ,MAAO,4BACP,OAAQ,OACR,aAAc,MACd,OAAQ,UACR,aAAc,MAAA,EAEjB,SAAA,UAAA,CAAA,QAIA,KAAA,CAAG,MAAO,CAAE,aAAc,QAAA,EAAY,SAAA,wBAAqB,EAC5D1b,EAAAA,IAAC,IAAA,CAAE,MAAO,CAAE,MAAO,8BAA+B,aAAc,MAAA,EAC7D,SAAAmZ,EAAqB,KAAA,CACxB,SAEC,MAAA,CAAI,MAAO,CAAE,aAAc,QAC1B,SAAA,CAAAnZ,EAAAA,IAAC,QAAA,CAAM,MAAO,CAAE,QAAS,QAAS,WAAY,MAAO,aAAc,QAAA,EAAY,SAAA,mBAAA,CAE/E,QACC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,IAAK,SAAU,SAAU,QACrD,SAAA,CAAC,EAAG,GAAI,GAAI,EAAE,EAAE,IAAKrH,GACpBqH,EAAAA,IAAC,SAAA,CAEC,QAAS,IAAM6Z,GAAiB,CAAE,GAAGziB,EAAe,YAAauB,EAAO,EACxE,MAAO,CACL,QAAS,iBACT,WAAYvB,EAAc,cAAgBuB,EAAQ,uBAAyB,4BAC3E,MAAOvB,EAAc,cAAgBuB,EAAQ,4BAA8B,4BAC3E,OAAQ,OACR,aAAc,MACd,OAAQ,UACR,SAAU,OACV,WAAY,KAAA,EAGb,SAAAA,CAAA,EAbIA,CAAA,CAeR,CAAA,CACH,CAAA,EACF,SAEC,MAAA,CAAI,MAAO,CAAE,aAAc,QAC1B,SAAA,CAAA4J,EAAAA,KAAC,QAAA,CAAM,MAAO,CAAE,QAAS,OAAQ,WAAY,SAAU,OAAQ,SAAA,EAC7D,SAAA,CAAAvC,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,QAAS5I,EAAc,cACvB,SAAW3D,GAAMomB,GAAiB,CAAE,GAAGziB,EAAe,cAAe3D,EAAE,OAAO,QAAS,EACvF,MAAO,CAAE,YAAa,SAAU,MAAO,UAAW,OAAQ,UAAW,OAAQ,SAAA,CAAU,CAAA,EAEzFuM,EAAAA,IAAC,QAAK,SAAA,iCAAA,CAA+B,CAAA,EACvC,EACAA,EAAAA,IAAC,IAAA,CAAE,MAAO,CAAE,SAAU,WAAY,MAAO,8BAA+B,UAAW,SAAU,WAAY,SAAA,EAAa,SAAA,8EAAA,CAEtH,CAAA,EACF,EAEAA,EAAAA,IAAC,SAAA,CACC,QAASyb,GACT,MAAO,CACL,QAAS,YACT,WAAY,uBACZ,MAAO,4BACP,OAAQ,OACR,aAAc,MACd,OAAQ,UACR,SAAU,SACV,WAAY,MACZ,MAAO,MAAA,EAEV,SAAA,mBAAA,CAAA,CAED,EACF,EAKJ,GAAIpC,GAAaF,GAAwBL,EACvC,aACG,MAAA,CAAI,MAAO,CAAE,WAAY,yBACxB,SAAA9Y,EAAAA,IAACgE,GAAA,CACC,QAAS8U,EAAc,GACvB,gBAAiB,CAACK,EAAqB,EAAE,EACzC,YAAa/hB,EAAc,YAC3B,cAAeA,EAAc,cAC7B,WAAYukB,GACZ,SAAUE,EAAA,CAAA,EAEd,EAIJ,GAAI/C,EACF,OACEvW,EAAAA,KAAC,OAAI,MAAO,CAAE,QAAS,OAAQ,WAAY,yBACzC,SAAA,CAAAvC,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM+Y,EAAiB,IAAI,EACpC,MAAO,CACL,QAAS,cACT,WAAY,2BACZ,MAAO,4BACP,OAAQ,OACR,aAAc,MACd,OAAQ,UACR,aAAc,MAAA,EAEjB,SAAA,oBAAA,CAAA,SAIA,KAAA,CAAG,SAAA,CAAA,MAAID,EAAc,KAAA,EAAM,EAE5B9Y,EAAAA,IAAC,MAAG,MAAO,CAAE,UAAW,OAAQ,aAAc,MAAA,EAAU,SAAA,WAAA,CAAS,EACjEA,EAAAA,IAAC,MAAA,CACC,MAAO,CACL,QAAS,OACT,oBAAqB,wCACrB,IAAK,MAAA,EAGN,SAAA7L,EAAc,IAAKQ,GAClB4N,EAAAA,KAAC,MAAA,CAEC,MAAO,CACL,QAAS,SACT,WAAY,0BACZ,OAAQ,qCACR,aAAc,MACd,OAAQ,UACR,WAAY,UAAA,EAEd,aAAe9O,GAAM,CACnBA,EAAE,cAAc,MAAM,YAAc,uBACpCA,EAAE,cAAc,MAAM,UAAY,kBACpC,EACA,aAAeA,GAAM,CACnBA,EAAE,cAAc,MAAM,YAAc,2BACpCA,EAAE,cAAc,MAAM,UAAY,eACpC,EAEA,SAAA,CAAAuM,MAAC,MAAG,MAAO,CAAE,aAAc,QAAA,EAAa,WAAK,MAAM,EACnDA,EAAAA,IAAC,IAAA,CAAE,MAAO,CAAE,SAAU,SAAU,MAAO,8BAA+B,aAAc,MAAA,EACjF,SAAArL,EAAK,WAAA,CACR,EACA4N,OAAC,OAAI,MAAO,CAAE,SAAU,UAAW,MAAO,+BACxC,SAAA,CAAAvC,EAAAA,IAAC,OAAA,CAAK,MAAO,CAAE,YAAa,QACzB,SAAArL,EAAK,aAAe,OACjB,YACAA,EAAK,aAAe,SACpB,YACA,YACN,SACC,OAAA,CAAM,SAAA,CAAAskB,EAAuBtkB,EAAK,EAAE,GAAKA,EAAK,SAAS,QAAU,EAAE,WAAA,CAAA,CAAS,CAAA,EAC/E,EACAqL,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMwb,GAAiB7mB,CAAI,EACpC,MAAO,CACL,UAAW,OACX,QAAS,cACT,WAAY,uBACZ,MAAO,4BACP,OAAQ,OACR,aAAc,MACd,OAAQ,UACR,MAAO,MAAA,EAEV,SAAA,oBAAA,CAAA,CAED,CAAA,EA9CKA,EAAK,EAAA,CAgDb,CAAA,CAAA,CACH,EACF,EAIJ,eAAe0lB,GAAe2B,EAAmB,GAAM,CACrD,GAAI,CACF,MAAMhoB,EAAG,OAAO,MAAA,EAChB,MAAMA,EAAG,cAAc,MAAA,EACvB,MAAMA,EAAG,MAAM,MAAA,EACf,MAAMoB,GAAapB,CAAE,EACrB,MAAMonB,EAAe,MAAMpnB,EAAG,OAAO,QAAA,EACrC6kB,EAAUuC,CAAY,EACtB,IAAIa,EACJ,GAAI,UAAU,SAAS,SACrB,GAAI,CAEFA,GADiB,MAAM,UAAU,QAAQ,SAAA,GACZ,OAAS,MACxC,OAAS/mB,EAAO,CACd,QAAQ,KAAK,0BAA2BA,CAAK,CAC/C,CAEF,MAAMigB,EAAS,CACb,cAAe,IAAI,KAAA,EAAO,YAAA,EAC1B,kBAAA8G,CAAA,EAEF,OAAO,cAAc,IAAI,YAAY,uBAAwB,CAAE,OAAA9G,CAAA,CAAQ,CAAC,EACpE6G,GACF,MAAM,uCAAuC,CAEjD,OAAS9mB,EAAO,CACd,QAAQ,MAAM,iBAAkBA,CAAK,EACjC8mB,GACF,MAAM,2CAA2C,CAErD,CACF,CAEA,eAAezB,IAAkB,CAC/B,GAAI,CACF,MAAMvmB,EAAG,OAAA,EACT,aAAa,WAAW,WAAW,EACnC,aAAa,WAAW,2BAA2B,EACnD,aAAa,WAAW,eAAe,EACvC,OAAO,SAAS,OAAA,CAClB,OAASkB,EAAO,CACd,QAAQ,MAAM,gBAAiBA,CAAK,EACpC,MAAM,iCAAiC,CACzC,CACF,CAGA,SAASgnB,GAAiB1nB,EAA8B,CACtD,MAAM6N,EAAO7N,EAAM,KAAO,OAAS,KAAOA,EAAM,KAAO,aAAe,KAAOA,EAAM,KAAO,WAAa,OAAS,KAC1Gka,EAAQla,EAAM,KAAO,OAAS,UAAYA,EAAM,KAAO,aAAe,UAAYA,EAAM,KAAO,WAAa,UAAY,UAE9H,MAAO,CACL,GAAIA,EAAM,GACV,KAAMA,EAAM,MACZ,YAAa,GAAGA,EAAM,gBAAgB,MAAM,aAC5C,KAAA6N,EACA,MAAAqM,CAAA,CAEJ,CAEA,MAAMoM,GAAoB,SAAS,cAAc,iCAAiC,GAAG,aAAa,SAAS,GAAK,UAEhH,OACEvY,EAAAA,KAAC,OAAI,MAAO,CAAE,QAAS,OAAQ,WAAY,yBACzC,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,eAAgB,gBAAiB,WAAY,SAAU,aAAc,MAAA,EAClG,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAvC,EAAAA,IAAC,MAAG,SAAA,sBAAA,CAAoB,EACxBA,EAAAA,IAAC,IAAA,CAAE,MAAO,CAAE,SAAU,SAAU,MAAO,8BAA+B,UAAW,QAAA,EAAY,SAAA,oDAAA,CAE7F,EACAuC,EAAAA,KAAC,IAAA,CAAE,MAAO,CAAE,SAAU,UAAW,MAAO,mCAAoC,UAAW,SAAA,EAAa,SAAA,CAAA,IAChGuY,EAAA,CAAA,CACJ,CAAA,EACF,EACAvY,OAAC,OAAI,MAAO,CAAE,QAAS,OAAQ,IAAK,UAClC,SAAA,CAAAA,EAAAA,KAAC,SAAA,CACC,QAASkY,EACT,MAAO,4BAA4BI,CAAU,IAC7C,MAAO,CACL,QAAS,iBACT,WAAY,gCACZ,MAAO,UACP,OAAQ,OACR,aAAc,MACd,OAAQ,UACR,SAAU,OACV,WAAY,MACZ,QAAS,OACT,WAAY,SACZ,IAAK,QAAA,EAER,SAAA,CAAA,MACKA,CAAA,CAAA,CAAA,EAEN7a,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM0Z,EAAiB,EAAI,EACpC,MAAO,CACL,QAAS,iBACT,WAAY,uBACZ,MAAO,4BACP,OAAQ,OACR,aAAc,MACd,OAAQ,UACR,SAAU,OACV,WAAY,MACZ,QAAS,OACT,WAAY,SACZ,IAAK,QAAA,EAER,SAAA,cAAA,CAAA,EAGD1Z,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM+Z,GAAgB,EAAI,EACnC,MAAO,CACL,QAAS,iBACT,WAAY,oBACZ,MAAO,4BACP,OAAQ,OACR,aAAc,MACd,OAAQ,UACR,SAAU,OACV,WAAY,MACZ,QAAS,OACT,WAAY,SACZ,IAAK,QAAA,EAER,SAAA,kBAAA,CAAA,CAED,CAAA,CACF,CAAA,EACF,EAEA/Z,EAAAA,IAAC,MAAG,MAAO,CAAE,UAAW,EAAG,aAAc,MAAA,EAAU,SAAA,kBAAA,CAAgB,EACnEA,EAAAA,IAAC,MAAA,CACC,MAAO,CACL,QAAS,OACT,oBAAqB,wCACrB,IAAK,QAAA,EAGN,SAAA9L,EAAO,IAAKM,GACXwL,EAAAA,IAACsR,GAAA,CAEC,MAAO4K,GAAiB1nB,CAAK,EAC7B,SAAWF,GAAY,CACrB,MAAMwkB,EAAgB5kB,EAAO,KAAKuB,GAAKA,EAAE,KAAOnB,CAAO,EACnDwkB,KAA2BA,CAAa,CAC9C,EACA,cAAa,cAActkB,EAAM,EAAE,EAAA,EAN9BA,EAAM,EAAA,CAQd,CAAA,CAAA,CACH,EACF,CAEJ,CAEA2nB,GAAS,WAAW,SAAS,eAAe,MAAM,CAAE,EAAE,aACnDha,GAAM,WAAN,CACC,SAAAnC,MAAC4Y,KAAI,CAAA,CACP,CACF","x_google_ignoreList":[0,1,2,21]}