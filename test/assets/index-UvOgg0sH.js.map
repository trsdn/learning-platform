{"version":3,"file":"index-UvOgg0sH.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/modules/storage/database.ts","../../src/modules/storage/json-loader.ts","../../src/modules/storage/seed-data.ts","../../src/modules/core/types/services.ts","../../src/modules/core/entities/practice-session.ts","../../src/modules/core/services/practice-session-service.ts","../../src/modules/core/entities/spaced-repetition-item.ts","../../src/modules/core/services/spaced-repetition-service.ts","../../src/modules/storage/adapters/repositories-simple.ts","../../src/modules/storage/factory.ts","../../src/modules/core/services/audio-service.ts","../../src/modules/ui/components/audio-button.tsx","../../src/modules/ui/design-tokens.ts","../../src/modules/ui/components/common/Card.tsx","../../src/modules/ui/components/common/FeedbackCard.tsx","../../src/modules/ui/components/forms/Input.tsx","../../src/modules/ui/components/forms/Checkbox.tsx","../../src/modules/ui/components/forms/Select.tsx","../../src/modules/ui/components/forms/Slider.tsx","../../src/modules/ui/components/practice-session.tsx","../../src/modules/ui/components/common/StatCard.tsx","../../src/modules/ui/components/common/Button.tsx","../../src/modules/ui/components/session-results.tsx","../../src/modules/ui/components/common/MasteryBar.tsx","../../src/modules/ui/components/dashboard.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import Dexie, { Table } from 'dexie';\nimport type {\n  Topic,\n  LearningPath,\n  Task,\n  AnswerHistory,\n  UserProgress,\n  PracticeSession,\n  SpacedRepetitionItem,\n} from '@core/types/services';\n\n/**\n * IndexedDB database schema using Dexie\n */\nexport class LearningPlatformDB extends Dexie {\n  // Tables\n  topics!: Table<Topic, string>;\n  learningPaths!: Table<LearningPath, string>;\n  tasks!: Table<Task, string>;\n  answerHistory!: Table<AnswerHistory, string>;\n  userProgress!: Table<UserProgress, string>;\n  practiceSessions!: Table<PracticeSession, string>;\n  spacedRepetition!: Table<SpacedRepetitionItem, string>;\n\n  constructor() {\n    // Use environment-specific database name\n    const dbName = import.meta.env.VITE_DB_NAME || 'mindforge-academy';\n    super(dbName);\n\n    this.version(1).stores({\n      topics: 'id, title, isActive, createdAt',\n      learningPaths: 'id, topicId, difficulty, isActive, createdAt',\n      tasks: 'id, learningPathId, type, *metadata.tags, metadata.difficulty, createdAt',\n      answerHistory: 'id, taskId, sessionId, timestamp, isCorrect',\n      userProgress: 'id, topicId, learningPathId, *milestones.lastActivity',\n      practiceSessions: 'id, execution.status, execution.startedAt, execution.completedAt, createdAt',\n      spacedRepetition: 'id, taskId, schedule.nextReview, algorithm.interval, createdAt',\n    });\n  }\n}\n\n// Create singleton instance\nexport const db = new LearningPlatformDB();","import type { Topic, LearningPath, Task } from '@core/types/services';\n\n/**\n * Interface for learning path JSON files\n */\ninterface LearningPathData {\n  learningPath: Omit<LearningPath, 'createdAt' | 'updatedAt'> & { createdAt?: string };\n  tasks: Omit<Task, 'createdAt' | 'updatedAt'>[];\n}\n\n/**\n * Load all learning path JSON files from public/learning-paths/ directory\n * Uses fetch API to load files from public directory\n */\nexport async function loadLearningPathsFromJSON(): Promise<{\n  topics: Topic[];\n  learningPaths: LearningPath[];\n  tasks: Task[];\n}> {\n  const topics: Map<string, Topic> = new Map();\n  const learningPaths: LearningPath[] = [];\n  const tasks: Task[] = [];\n\n  // Learning path files to load (topic -> filenames)\n  const learningPathFiles: Record<string, string[]> = {\n    mathematik: ['algebra-basics.json', 'geometry-basics.json', 'advanced-tasks.json', 'brueche-grundlagen.json'],\n    biologie: ['zellbiologie.json', 'genetik-basics.json'],\n    spanisch: ['spanisch-grundlagen.json', 'begruessung-vorstellung.json', 'familie-persoenliches.json', 'zahlen-farben-tiere.json', 'vokabeltest-karteikarten.json'],\n    test: ['all-task-types.json'],\n  };\n\n  // Load each learning path\n  for (const [topicId, files] of Object.entries(learningPathFiles)) {\n    // Create topic if it doesn't exist\n    if (!topics.has(topicId)) {\n      const topic: Topic = createTopicFromId(topicId);\n      topics.set(topicId, topic);\n    }\n\n    // Load each file for this topic\n    for (const filename of files) {\n      try {\n        // Use relative path to work with base URL (e.g., /learning-platform/)\n        const baseUrl = (import.meta as any).env?.BASE_URL || '/';\n        const path = `${baseUrl}learning-paths/${topicId}/${filename}`;\n        const response = await fetch(path);\n\n        if (!response.ok) {\n          console.warn(`Failed to load ${path}: ${response.status}`);\n          continue;\n        }\n\n        const data: LearningPathData = await response.json();\n\n        // Build task IDs array from tasks\n        const taskIds = data.tasks.map((task) => task.id);\n\n        // Add learning path with task IDs\n        const learningPath: LearningPath = {\n          ...data.learningPath,\n          taskIds, // Add task IDs\n          createdAt: data.learningPath.createdAt ? new Date(data.learningPath.createdAt) : new Date('2024-01-01'),\n          updatedAt: data.learningPath.createdAt ? new Date(data.learningPath.createdAt) : new Date('2024-01-01'),\n        };\n        learningPaths.push(learningPath);\n\n        // Add learning path ID to topic\n        const topic = topics.get(topicId)!;\n        if (!topic.learningPathIds.includes(learningPath.id)) {\n          topic.learningPathIds.push(learningPath.id);\n        }\n\n        // Add tasks\n        for (const taskData of data.tasks) {\n          const task: Task = {\n            ...taskData,\n            createdAt: new Date('2024-01-01'),\n            updatedAt: new Date('2024-01-01'),\n          };\n          tasks.push(task);\n        }\n      } catch (error) {\n        console.error(`Failed to load learning path ${topicId}/${filename}:`, error);\n      }\n    }\n  }\n\n  return {\n    topics: Array.from(topics.values()),\n    learningPaths,\n    tasks,\n  };\n}\n\n/**\n * Create a Topic object from topic ID\n */\nfunction createTopicFromId(topicId: string): Topic {\n  const topicConfig: Record<string, Partial<Topic>> = {\n    test: {\n      id: 'test',\n      title: 'Test & Demo',\n      description: 'Demonstriert alle Aufgabentypen der Plattform',\n      metadata: {\n        estimatedHours: 1,\n        difficultyLevel: 'beginner',\n        prerequisites: [],\n      },\n    },\n    mathematik: {\n      id: 'mathematik',\n      title: 'Mathematik',\n      description: 'Grundlagen der Mathematik: Algebra, Geometrie und mehr',\n      metadata: {\n        estimatedHours: 40,\n        difficultyLevel: 'intermediate',\n        prerequisites: [],\n      },\n    },\n    biologie: {\n      id: 'biologie',\n      title: 'Biologie',\n      description: 'Einführung in die Biologie: Zellen, Genetik und Ökosysteme',\n      metadata: {\n        estimatedHours: 35,\n        difficultyLevel: 'beginner',\n        prerequisites: [],\n      },\n    },\n    spanisch: {\n      id: 'spanisch',\n      title: 'Spanisch',\n      description: 'Lerne Spanisch: Vokabeln, Grammatik und Konversation',\n      metadata: {\n        estimatedHours: 50,\n        difficultyLevel: 'beginner',\n        prerequisites: [],\n      },\n    },\n    chemie: {\n      id: 'chemie',\n      title: 'Chemie',\n      description: 'Grundlagen der Chemie: Atome, Moleküle und Reaktionen',\n      metadata: {\n        estimatedHours: 40,\n        difficultyLevel: 'intermediate',\n        prerequisites: [],\n      },\n    },\n    physik: {\n      id: 'physik',\n      title: 'Physik',\n      description: 'Einführung in die Physik: Kräfte, Energie und Bewegung',\n      metadata: {\n        estimatedHours: 45,\n        difficultyLevel: 'intermediate',\n        prerequisites: [],\n      },\n    },\n  };\n\n  const config = topicConfig[topicId] || {\n    id: topicId,\n    title: topicId.charAt(0).toUpperCase() + topicId.slice(1),\n    description: `Lernmaterialien für ${topicId}`,\n    metadata: {\n      estimatedHours: 30,\n      difficultyLevel: 'beginner',\n      prerequisites: [],\n    },\n  };\n\n  return {\n    id: config.id!,\n    title: config.title!,\n    description: config.description!,\n    learningPathIds: [],\n    isActive: true,\n    metadata: config.metadata!,\n    createdAt: new Date('2024-01-01'),\n    updatedAt: new Date('2024-01-01'),\n  };\n}\n\n","import { loadLearningPathsFromJSON } from './json-loader';\n\n/**\n * All data is loaded from JSON files in public/learning-paths/\n * No sample/fallback data is needed.\n */\n\n/**\n * Seeds the database with learning data from JSON files\n */\nexport async function seedDatabase(db: any): Promise<void> {\n  // Clear existing data\n  console.log('🗑️ Clearing existing database...');\n  const beforeTopics = await db.topics.count();\n  const beforePaths = await db.learningPaths.count();\n  const beforeTasks = await db.tasks.count();\n  console.log(`Before clear: ${beforeTopics} topics, ${beforePaths} paths, ${beforeTasks} tasks`);\n\n  await db.topics.clear();\n  await db.learningPaths.clear();\n  await db.tasks.clear();\n\n  const afterClear = await db.tasks.count();\n  console.log(`After clear: ${afterClear} tasks remaining`);\n\n  // Load from JSON files\n  console.log('📂 Loading learning paths from JSON files...');\n  const data = await loadLearningPathsFromJSON();\n\n  if (data.topics.length === 0) {\n    throw new Error('No learning paths found in JSON files!');\n  }\n\n  console.log(`Saving to database: ${data.topics.length} topics, ${data.learningPaths.length} learning paths, ${data.tasks.length} tasks`);\n  console.log('Topics:', data.topics.map(t => t.id));\n  console.log('Learning paths:', data.learningPaths.map(lp => `${lp.id} (${lp.taskIds?.length || 0} taskIds)`));\n  console.log('Tasks:', data.tasks.map(t => `${t.id} (learningPathId: ${t.learningPathId})`));\n\n  try {\n    await db.topics.bulkAdd(data.topics);\n    console.log('✓ Topics saved');\n  } catch (err: any) {\n    console.log('⚠️ Topics exist, using bulkPut to update...');\n    await db.topics.bulkPut(data.topics);\n    console.log('✓ Topics updated');\n  }\n\n  try {\n    await db.learningPaths.bulkAdd(data.learningPaths);\n    console.log('✓ Learning paths saved');\n  } catch (err: any) {\n    console.log('⚠️ Learning paths exist, using bulkPut to update...');\n    await db.learningPaths.bulkPut(data.learningPaths);\n    console.log('✓ Learning paths updated');\n  }\n\n  try {\n    await db.tasks.bulkAdd(data.tasks);\n    console.log('✓ Tasks saved');\n  } catch (err: any) {\n    console.error('❌ Error saving tasks with bulkAdd:', err.message);\n    console.log('⚠️ Some tasks already exist, using bulkPut to update...');\n    try {\n      await db.tasks.bulkPut(data.tasks);\n      console.log('✓ Tasks updated with bulkPut');\n    } catch (putErr: any) {\n      console.error('❌ Error with bulkPut:', putErr.message);\n    }\n  }\n\n  console.log(\n    `✅ Loaded from JSON: ${data.topics.length} topics, ${data.learningPaths.length} learning paths, ${data.tasks.length} tasks`\n  );\n\n  // Verify what was actually saved\n  const savedTopics = await db.topics.count();\n  const savedPaths = await db.learningPaths.count();\n  const savedTasks = await db.tasks.count();\n  console.log(`✅ Verified in DB: ${savedTopics} topics, ${savedPaths} learning paths, ${savedTasks} tasks`);\n}","/**\n * Core Service Interfaces for Learning Platform\n * These contracts define the boundaries between modules\n */\n\n// Domain Types\nexport interface Topic {\n  id: string;\n  title: string;\n  description: string;\n  learningPathIds: string[];\n  isActive: boolean;\n  metadata: {\n    estimatedHours: number;\n    difficultyLevel: 'beginner' | 'intermediate' | 'advanced';\n    prerequisites: string[];\n  };\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface LearningPath {\n  id: string;\n  topicId: string;\n  title: string;\n  description: string;\n  difficulty: 'easy' | 'medium' | 'hard';\n  taskIds: string[];\n  estimatedTime: number;\n  isActive: boolean;\n  requirements: {\n    minimumAccuracy: number;\n    requiredTasks: number;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport type TaskType = 'multiple-choice' | 'cloze-deletion' | 'true-false' | 'ordering' | 'matching' | 'multiple-select' | 'slider' | 'word-scramble' | 'flashcard' | 'text-input';\n\nexport interface Task {\n  id: string;\n  learningPathId: string;\n  templateId: string;\n  type: TaskType;\n  content: MultipleChoiceContent | ClozeDeletionContent | TrueFalseContent | OrderingContent | MatchingContent | MultipleSelectContent | SliderContent | WordScrambleContent | FlashcardContent | TextInputContent;\n  metadata: {\n    difficulty: 'easy' | 'medium' | 'hard';\n    tags: string[];\n    estimatedTime: number;\n    points: number;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface MultipleChoiceContent {\n  question: string;\n  options: string[];\n  correctAnswer: number;\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface ClozeDeletionContent {\n  text: string; // Text with {{blanks}} marked\n  blanks: Array<{\n    index: number;\n    correctAnswer: string;\n    alternatives?: string[]; // Alternative correct answers\n  }>;\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface TrueFalseContent {\n  statement: string;\n  correctAnswer: boolean;\n  requireJustification?: boolean; // If true, user must explain why\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface OrderingContent {\n  question: string;\n  items: string[]; // Items to be ordered\n  correctOrder: number[]; // Indices in correct order\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface MatchingContent {\n  question: string;\n  pairs: Array<{\n    left: string;\n    right: string;\n  }>;\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface MultipleSelectContent {\n  question: string;\n  options: string[];\n  correctAnswers: number[]; // Array of correct indices\n  minRequired?: number; // Minimum selections required\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface SliderContent {\n  question: string;\n  min: number;\n  max: number;\n  step?: number; // Default: 1\n  correctValue: number;\n  tolerance?: number; // ±tolerance for correct (default: 0)\n  unit?: string; // e.g., \"°C\", \"%\", \"cm\"\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface WordScrambleContent {\n  question: string;\n  scrambledWord: string;\n  correctWord: string;\n  showLength?: boolean; // Show word length as hint\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface FlashcardContent {\n  front: string; // The word/phrase shown initially\n  back: string; // The translation/answer (hidden until revealed)\n  frontLanguage: 'de' | 'es' | 'en'; // Language of front side\n  backLanguage: 'de' | 'es' | 'en'; // Language of back side\n  explanation?: string; // Optional additional context\n  hint?: string; // Optional hint\n}\n\nexport interface TextInputContent {\n  question: string;\n  correctAnswer: string;\n  alternatives?: string[]; // Alternative correct answers\n  caseSensitive?: boolean; // Default: false\n  explanation?: string;\n  hint?: string;\n}\n\nexport interface AnswerHistory {\n  id: string;\n  taskId: string;\n  sessionId: string;\n  userAnswer: string | string[];\n  isCorrect: boolean;\n  timeSpent: number;\n  confidence: number;\n  metadata: {\n    attemptNumber: number;\n    hintsUsed: number;\n    deviceType: 'mobile' | 'desktop' | 'tablet';\n    browserInfo: string;\n  };\n  timestamp: Date;\n}\n\nexport interface UserProgress {\n  id: string;\n  topicId: string;\n  learningPathId?: string;\n  statistics: {\n    completedTasks: number;\n    totalTasks: number;\n    correctAnswers: number;\n    totalAttempts: number;\n    accuracyRate: number;\n    timeSpent: number;\n    streakDays: number;\n    masteryLevel: number;\n  };\n  milestones: {\n    firstCompleted: Date;\n    lastActivity: Date;\n    bestStreak: number;\n    totalSessions: number;\n  };\n  preferences: {\n    preferredDifficulty: 'easy' | 'medium' | 'hard';\n    preferredSessionLength: number;\n    reminderSettings: {\n      enabled: boolean;\n      frequency: 'daily' | 'weekly';\n      time: string;\n    };\n  };\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface PracticeSession {\n  id: string;\n  configuration: {\n    topicId: string;\n    learningPathIds: string[];\n    targetCount: number;\n    includeReview: boolean;\n    difficultyFilter?: 'easy' | 'medium' | 'hard';\n  };\n  execution: {\n    taskIds: string[];\n    completedCount: number;\n    correctCount: number;\n    status: 'planned' | 'active' | 'paused' | 'completed' | 'abandoned';\n    startedAt?: Date;\n    completedAt?: Date;\n    totalTimeSpent: number;\n  };\n  results: {\n    accuracy: number;\n    averageTime: number;\n    difficultyDistribution: Record<string, number>;\n    improvementAreas: string[];\n  };\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface SpacedRepetitionItem {\n  id: string;\n  taskId: string;\n  algorithm: {\n    interval: number;\n    repetition: number;\n    efactor: number;\n  };\n  schedule: {\n    nextReview: Date;\n    lastReviewed?: Date;\n    totalReviews: number;\n    consecutiveCorrect: number;\n  };\n  performance: {\n    averageAccuracy: number;\n    averageTime: number;\n    difficultyRating: number;\n    lastGrade: number;\n  };\n  metadata: {\n    introduced: Date;\n    graduated: boolean;\n    lapseCount: number;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Service Interfaces\n\n/**\n * Core domain service for managing topics and learning paths\n */\nexport interface ILearningContentService {\n  // Topic Management\n  getTopics(): Promise<Topic[]>;\n  getTopic(id: string): Promise<Topic | null>;\n  getTopicByTitle(title: string): Promise<Topic | null>;\n\n  // Learning Path Management\n  getLearningPaths(topicId: string): Promise<LearningPath[]>;\n  getLearningPath(id: string): Promise<LearningPath | null>;\n\n  // Task Management\n  getTasks(learningPathId: string): Promise<Task[]>;\n  getTask(id: string): Promise<Task | null>;\n  searchTasks(query: string, filters: TaskSearchFilters): Promise<Task[]>;\n}\n\nexport interface TaskSearchFilters {\n  topicId?: string;\n  learningPathId?: string;\n  difficulty?: 'easy' | 'medium' | 'hard';\n  tags?: string[];\n  type?: string;\n}\n\n/**\n * Spaced repetition algorithm service\n */\nexport interface ISpacedRepetitionService {\n  // Algorithm Management\n  getNextTasks(userId: string, count: number): Promise<Task[]>;\n  recordAnswer(taskId: string, isCorrect: boolean, grade: number): Promise<void>;\n  getRepetitionData(taskId: string): Promise<SpacedRepetitionItem | null>;\n\n  // Review Scheduling\n  getTasksDue(userId: string): Promise<Task[]>;\n  getReviewSchedule(userId: string, days: number): Promise<ReviewSchedule[]>;\n  rescheduleTask(taskId: string, newDate: Date): Promise<void>;\n}\n\nexport interface ReviewSchedule {\n  date: Date;\n  taskCount: number;\n  estimatedTime: number;\n}\n\n/**\n * Practice session management service\n */\nexport interface IPracticeSessionService {\n  // Session Lifecycle\n  createSession(config: SessionConfiguration): Promise<PracticeSession>;\n  getSession(id: string): Promise<PracticeSession | null>;\n  updateSession(id: string, updates: Partial<PracticeSession>): Promise<void>;\n  completeSession(id: string): Promise<PracticeSession>;\n  pauseSession(id: string): Promise<void>;\n  resumeSession(id: string): Promise<void>;\n  abandonSession(id: string): Promise<void>;\n\n  // Session Management\n  getActiveSessions(userId: string): Promise<PracticeSession[]>;\n  getRecentSessions(userId: string, limit: number): Promise<PracticeSession[]>;\n}\n\nexport interface SessionConfiguration {\n  topicId: string;\n  learningPathIds: string[];\n  targetCount: number;\n  includeReview: boolean;\n  difficultyFilter?: 'easy' | 'medium' | 'hard';\n}\n\n/**\n * User progress tracking service\n */\nexport interface IProgressTrackingService {\n  // Progress Queries\n  getTopicProgress(userId: string, topicId: string): Promise<UserProgress | null>;\n  getLearningPathProgress(userId: string, learningPathId: string): Promise<UserProgress | null>;\n  getAllProgress(userId: string): Promise<UserProgress[]>;\n\n  // Progress Updates\n  recordTaskCompletion(userId: string, taskId: string, isCorrect: boolean, timeSpent: number): Promise<void>;\n  updateStreakDays(userId: string): Promise<void>;\n  recalculateMasteryLevel(userId: string, topicId: string): Promise<number>;\n\n  // Analytics\n  getProgressSummary(userId: string): Promise<ProgressSummary>;\n  getWeeklyStats(userId: string): Promise<WeeklyStats[]>;\n}\n\nexport interface ProgressSummary {\n  totalTopics: number;\n  completedTopics: number;\n  totalTasksCompleted: number;\n  overallAccuracy: number;\n  totalTimeSpent: number;\n  currentStreak: number;\n  longestStreak: number;\n}\n\nexport interface WeeklyStats {\n  week: string; // ISO week string\n  tasksCompleted: number;\n  accuracy: number;\n  timeSpent: number;\n  topicsStudied: string[];\n}\n\n/**\n * Answer history tracking service\n */\nexport interface IAnswerHistoryService {\n  // Recording Answers\n  recordAnswer(answer: Omit<AnswerHistory, 'id' | 'timestamp'>): Promise<AnswerHistory>;\n\n  // Querying History\n  getTaskHistory(taskId: string, userId: string): Promise<AnswerHistory[]>;\n  getUserHistory(userId: string, limit?: number): Promise<AnswerHistory[]>;\n  getSessionHistory(sessionId: string): Promise<AnswerHistory[]>;\n\n  // Analytics\n  getAccuracyTrend(userId: string, days: number): Promise<AccuracyTrend[]>;\n  getDifficultyAnalysis(userId: string, topicId: string): Promise<DifficultyAnalysis>;\n}\n\nexport interface AccuracyTrend {\n  date: Date;\n  accuracy: number;\n  taskCount: number;\n}\n\nexport interface DifficultyAnalysis {\n  easy: { total: number; correct: number; accuracy: number };\n  medium: { total: number; correct: number; accuracy: number };\n  hard: { total: number; correct: number; accuracy: number };\n}\n\n// Error Types\nexport class LearningPlatformError extends Error {\n  constructor(\n    message: string,\n    public code: string,\n    public context?: Record<string, any>\n  ) {\n    super(message);\n    this.name = 'LearningPlatformError';\n  }\n}\n\nexport class ValidationError extends LearningPlatformError {\n  constructor(message: string, context?: Record<string, any>) {\n    super(message, 'VALIDATION_ERROR', context);\n    this.name = 'ValidationError';\n  }\n}\n\nexport class NotFoundError extends LearningPlatformError {\n  constructor(resource: string, id: string) {\n    super(`${resource} with id ${id} not found`, 'NOT_FOUND', { resource, id });\n    this.name = 'NotFoundError';\n  }\n}\n\nexport class BusinessRuleError extends LearningPlatformError {\n  constructor(message: string, context?: Record<string, any>) {\n    super(message, 'BUSINESS_RULE_VIOLATION', context);\n    this.name = 'BusinessRuleError';\n  }\n}","import { PracticeSession, ValidationError } from '../types/entities';\n\n/**\n * PracticeSession entity for managing learning sessions\n */\nexport class PracticeSessionEntity implements PracticeSession {\n  id: string;\n  configuration: {\n    topicId: string;\n    learningPathIds: string[];\n    targetCount: number;\n    includeReview: boolean;\n    difficultyFilter?: 'easy' | 'medium' | 'hard';\n  };\n  execution: {\n    taskIds: string[];\n    completedCount: number;\n    correctCount: number;\n    status: 'planned' | 'active' | 'paused' | 'completed' | 'abandoned';\n    startedAt?: Date;\n    completedAt?: Date;\n    totalTimeSpent: number;\n  };\n  results: {\n    accuracy: number;\n    averageTime: number;\n    difficultyDistribution: Record<string, number>;\n    improvementAreas: string[];\n  };\n  createdAt: Date;\n  updatedAt: Date;\n\n  constructor(\n    data: Omit<PracticeSession, 'createdAt' | 'updatedAt'> & {\n      createdAt?: Date;\n      updatedAt?: Date;\n    }\n  ) {\n    PracticeSessionEntity.validate(data);\n\n    this.id = data.id;\n    this.configuration = { ...data.configuration, learningPathIds: [...data.configuration.learningPathIds] };\n    this.execution = {\n      taskIds: [...data.execution.taskIds],\n      completedCount: data.execution.completedCount,\n      correctCount: data.execution.correctCount,\n      status: data.execution.status,\n      totalTimeSpent: data.execution.totalTimeSpent,\n    };\n    if (data.execution.startedAt) {\n      this.execution.startedAt = new Date(data.execution.startedAt);\n    }\n    if (data.execution.completedAt) {\n      this.execution.completedAt = new Date(data.execution.completedAt);\n    }\n    this.results = {\n      ...data.results,\n      difficultyDistribution: { ...data.results.difficultyDistribution },\n      improvementAreas: [...data.results.improvementAreas],\n    };\n    this.createdAt = data.createdAt || new Date();\n    this.updatedAt = data.updatedAt || new Date();\n  }\n\n  /**\n   * Validates practice session data\n   */\n  static validate(data: Partial<PracticeSession>): void {\n    // Target count validation (5-50)\n    if (data.configuration?.targetCount !== undefined) {\n      if (data.configuration.targetCount < 5 || data.configuration.targetCount > 50) {\n        throw new ValidationError('Target count must be between 5 and 50', {\n          field: 'targetCount',\n          value: data.configuration.targetCount,\n        });\n      }\n    }\n\n    // Status validation\n    if (data.execution?.status !== undefined) {\n      const validStatuses = ['planned', 'active', 'paused', 'completed', 'abandoned'];\n      if (!validStatuses.includes(data.execution.status)) {\n        throw new ValidationError('Invalid session status', {\n          field: 'status',\n          value: data.execution.status,\n          validValues: validStatuses,\n        });\n      }\n    }\n  }\n\n  /**\n   * Creates a new session\n   */\n  static create(\n    id: string,\n    topicId: string,\n    learningPathIds: string[],\n    taskIds: string[],\n    config: {\n      targetCount: number;\n      includeReview: boolean;\n      difficultyFilter?: 'easy' | 'medium' | 'hard';\n    }\n  ): PracticeSessionEntity {\n    const configuration: PracticeSession['configuration'] = {\n      topicId,\n      learningPathIds,\n      targetCount: config.targetCount,\n      includeReview: config.includeReview,\n    };\n    if (config.difficultyFilter) {\n      configuration.difficultyFilter = config.difficultyFilter;\n    }\n\n    return new PracticeSessionEntity({\n      id,\n      configuration,\n      execution: {\n        taskIds,\n        completedCount: 0,\n        correctCount: 0,\n        status: 'planned',\n        totalTimeSpent: 0,\n      },\n      results: {\n        accuracy: 0,\n        averageTime: 0,\n        difficultyDistribution: {},\n        improvementAreas: [],\n      },\n    });\n  }\n\n  /**\n   * Starts the session\n   */\n  start(): void {\n    if (this.execution.status !== 'planned' && this.execution.status !== 'paused') {\n      throw new Error('Can only start planned or paused sessions');\n    }\n\n    this.execution.status = 'active';\n    if (!this.execution.startedAt) {\n      this.execution.startedAt = new Date();\n    }\n    this.updatedAt = new Date();\n  }\n\n  /**\n   * Pauses the session\n   */\n  pause(): void {\n    if (this.execution.status !== 'active') {\n      throw new Error('Can only pause active sessions');\n    }\n\n    this.execution.status = 'paused';\n    this.updatedAt = new Date();\n  }\n\n  /**\n   * Resumes the session\n   */\n  resume(): void {\n    if (this.execution.status !== 'paused') {\n      throw new Error('Can only resume paused sessions');\n    }\n\n    this.execution.status = 'active';\n    this.updatedAt = new Date();\n  }\n\n  /**\n   * Records an answer\n   */\n  recordAnswer(isCorrect: boolean, timeSpent: number): void {\n    if (this.execution.status !== 'active') {\n      throw new Error('Session must be active to record answers');\n    }\n\n    this.execution.completedCount++;\n    if (isCorrect) {\n      this.execution.correctCount++;\n    }\n    this.execution.totalTimeSpent += timeSpent;\n\n    // Recalculate results\n    this.updateResults();\n    this.updatedAt = new Date();\n  }\n\n  /**\n   * Completes the session\n   */\n  complete(): void {\n    if (this.execution.status === 'completed' || this.execution.status === 'abandoned') {\n      throw new Error('Session already finalized');\n    }\n\n    this.execution.status = 'completed';\n    this.execution.completedAt = new Date();\n    this.updateResults();\n    this.updatedAt = new Date();\n  }\n\n  /**\n   * Abandons the session\n   */\n  abandon(): void {\n    if (this.execution.status === 'completed' || this.execution.status === 'abandoned') {\n      throw new Error('Session already finalized');\n    }\n\n    this.execution.status = 'abandoned';\n    this.updatedAt = new Date();\n  }\n\n  /**\n   * Updates calculated results\n   */\n  private updateResults(): void {\n    // Calculate accuracy\n    if (this.execution.completedCount > 0) {\n      this.results.accuracy = (this.execution.correctCount / this.execution.completedCount) * 100;\n    }\n\n    // Calculate average time\n    if (this.execution.completedCount > 0) {\n      this.results.averageTime = this.execution.totalTimeSpent / this.execution.completedCount;\n    }\n  }\n\n  /**\n   * Gets progress percentage\n   */\n  getProgress(): number {\n    return (this.execution.completedCount / this.configuration.targetCount) * 100;\n  }\n\n  /**\n   * Checks if session is complete\n   */\n  isComplete(): boolean {\n    return this.execution.completedCount >= this.configuration.targetCount;\n  }\n\n  /**\n   * Gets remaining tasks count\n   */\n  getRemainingCount(): number {\n    return Math.max(0, this.configuration.targetCount - this.execution.completedCount);\n  }\n\n  /**\n   * Converts to plain object\n   */\n  toJSON(): PracticeSession {\n    const result: PracticeSession = {\n      id: this.id,\n      configuration: {\n        ...this.configuration,\n        learningPathIds: [...this.configuration.learningPathIds],\n      },\n      execution: {\n        ...this.execution,\n        taskIds: [...this.execution.taskIds],\n      },\n      results: {\n        ...this.results,\n        difficultyDistribution: { ...this.results.difficultyDistribution },\n        improvementAreas: [...this.results.improvementAreas],\n      },\n      createdAt: this.createdAt,\n      updatedAt: this.updatedAt,\n    };\n\n    if (this.configuration.difficultyFilter) {\n      result.configuration.difficultyFilter = this.configuration.difficultyFilter;\n    }\n    if (this.execution.startedAt) {\n      result.execution.startedAt = this.execution.startedAt;\n    }\n    if (this.execution.completedAt) {\n      result.execution.completedAt = this.execution.completedAt;\n    }\n\n    return result;\n  }\n\n  /**\n   * Creates from plain object\n   */\n  static fromJSON(data: PracticeSession): PracticeSessionEntity {\n    return new PracticeSessionEntity(data);\n  }\n}","import type {\n  IPracticeSessionService,\n  PracticeSession,\n  SessionConfiguration,\n} from '../types/services';\nimport type {\n  IPracticeSessionRepository,\n  ITaskRepository,\n  ISpacedRepetitionRepository,\n} from '@storage/types/adapters';\nimport { PracticeSessionEntity } from '../entities/practice-session';\nimport { NotFoundError } from '../types/entities';\n\n/**\n * Practice Session Service for managing learning sessions\n */\nexport class PracticeSessionService implements IPracticeSessionService {\n  constructor(\n    private sessionRepository: IPracticeSessionRepository,\n    private taskRepository: ITaskRepository,\n    private spacedRepRepository: ISpacedRepetitionRepository\n  ) {}\n\n  /**\n   * Creates a new practice session\n   */\n  async createSession(config: SessionConfiguration): Promise<PracticeSession> {\n    // Get tasks for the session\n    const taskIds = await this.selectTasksForSession(config);\n\n    // Create session entity\n    const sessionId = `session-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    const sessionConfig: {\n      targetCount: number;\n      includeReview: boolean;\n      difficultyFilter?: 'easy' | 'medium' | 'hard';\n    } = {\n      targetCount: config.targetCount,\n      includeReview: config.includeReview,\n    };\n    if (config.difficultyFilter) {\n      sessionConfig.difficultyFilter = config.difficultyFilter;\n    }\n\n    const sessionEntity = PracticeSessionEntity.create(\n      sessionId,\n      config.topicId,\n      config.learningPathIds,\n      taskIds,\n      sessionConfig\n    );\n\n    // Save to repository\n    return await this.sessionRepository.create(sessionEntity.toJSON());\n  }\n\n  /**\n   * Gets a session by ID\n   */\n  async getSession(id: string): Promise<PracticeSession | null> {\n    return await this.sessionRepository.getById(id);\n  }\n\n  /**\n   * Updates a session\n   */\n  async updateSession(id: string, updates: Partial<PracticeSession>): Promise<void> {\n    await this.sessionRepository.update(id, updates);\n  }\n\n  /**\n   * Completes a session\n   */\n  async completeSession(id: string): Promise<PracticeSession> {\n    const session = await this.sessionRepository.getById(id);\n    if (!session) {\n      throw new NotFoundError('PracticeSession', id);\n    }\n\n    const sessionEntity = PracticeSessionEntity.fromJSON(session);\n    sessionEntity.complete();\n\n    return await this.sessionRepository.update(id, sessionEntity.toJSON());\n  }\n\n  /**\n   * Pauses a session\n   */\n  async pauseSession(id: string): Promise<void> {\n    const session = await this.sessionRepository.getById(id);\n    if (!session) {\n      throw new NotFoundError('PracticeSession', id);\n    }\n\n    const sessionEntity = PracticeSessionEntity.fromJSON(session);\n    sessionEntity.pause();\n\n    await this.sessionRepository.update(id, sessionEntity.toJSON());\n  }\n\n  /**\n   * Resumes a session\n   */\n  async resumeSession(id: string): Promise<void> {\n    const session = await this.sessionRepository.getById(id);\n    if (!session) {\n      throw new NotFoundError('PracticeSession', id);\n    }\n\n    const sessionEntity = PracticeSessionEntity.fromJSON(session);\n    sessionEntity.resume();\n\n    await this.sessionRepository.update(id, sessionEntity.toJSON());\n  }\n\n  /**\n   * Abandons a session\n   */\n  async abandonSession(id: string): Promise<void> {\n    const session = await this.sessionRepository.getById(id);\n    if (!session) {\n      throw new NotFoundError('PracticeSession', id);\n    }\n\n    const sessionEntity = PracticeSessionEntity.fromJSON(session);\n    sessionEntity.abandon();\n\n    await this.sessionRepository.update(id, sessionEntity.toJSON());\n  }\n\n  /**\n   * Gets active sessions for a user\n   */\n  async getActiveSessions(userId: string): Promise<PracticeSession[]> {\n    return await this.sessionRepository.getActive(userId);\n  }\n\n  /**\n   * Gets recent sessions for a user\n   */\n  async getRecentSessions(userId: string, limit: number): Promise<PracticeSession[]> {\n    return await this.sessionRepository.getRecent(userId, limit);\n  }\n\n  /**\n   * Records an answer in the session\n   */\n  async recordSessionAnswer(\n    sessionId: string,\n    isCorrect: boolean,\n    timeSpent: number\n  ): Promise<void> {\n    const session = await this.sessionRepository.getById(sessionId);\n    if (!session) {\n      throw new NotFoundError('PracticeSession', sessionId);\n    }\n\n    const sessionEntity = PracticeSessionEntity.fromJSON(session);\n\n    // Start session if it's still planned\n    if (sessionEntity.execution.status === 'planned') {\n      sessionEntity.start();\n    }\n\n    sessionEntity.recordAnswer(isCorrect, timeSpent);\n\n    // Auto-complete if target reached\n    if (sessionEntity.isComplete()) {\n      sessionEntity.complete();\n    }\n\n    await this.sessionRepository.update(sessionId, sessionEntity.toJSON());\n  }\n\n  /**\n   * Selects tasks for the session based on configuration\n   */\n  private async selectTasksForSession(config: SessionConfiguration): Promise<string[]> {\n    const selectedTaskIds: string[] = [];\n    let remainingCount = config.targetCount;\n\n    console.log(`Selecting tasks: targetCount=${config.targetCount}, learningPaths=${config.learningPathIds.join(',')}`);\n\n    // Get review tasks if requested\n    if (config.includeReview && remainingCount > 0) {\n      const dueItems = await this.spacedRepRepository.getDue(new Date());\n      const reviewTaskIds = dueItems\n        .slice(0, Math.min(dueItems.length, Math.ceil(config.targetCount * 0.3))) // 30% review\n        .map((item) => item.taskId);\n\n      console.log(`Review tasks found: ${reviewTaskIds.length}`);\n      selectedTaskIds.push(...reviewTaskIds);\n      remainingCount -= reviewTaskIds.length;\n    }\n\n    // Get new tasks from learning paths\n    if (remainingCount > 0) {\n      const filters: any = {\n        learningPathIds: config.learningPathIds,\n        excludeIds: selectedTaskIds,\n      };\n      if (config.difficultyFilter) {\n        filters.difficulty = config.difficultyFilter;\n      }\n\n      console.log(`Requesting ${remainingCount} new tasks with filters:`, filters);\n      const newTasks = await this.taskRepository.getRandomTasks(remainingCount, filters);\n      console.log(`Got ${newTasks.length} tasks:`, newTasks.map(t => t.id));\n\n      selectedTaskIds.push(...newTasks.map((task) => task.id));\n    }\n\n    console.log(`Total selected tasks: ${selectedTaskIds.length}`);\n    return selectedTaskIds;\n  }\n}","import { SpacedRepetitionItem, ValidationError } from '../types/entities';\n\n/**\n * SpacedRepetitionItem entity with SM-2 algorithm implementation\n */\nexport class SpacedRepetitionItemEntity implements SpacedRepetitionItem {\n  id: string;\n  taskId: string;\n  algorithm: {\n    interval: number;\n    repetition: number;\n    efactor: number;\n  };\n  schedule: {\n    nextReview: Date;\n    lastReviewed?: Date;\n    totalReviews: number;\n    consecutiveCorrect: number;\n  };\n  performance: {\n    averageAccuracy: number;\n    averageTime: number;\n    difficultyRating: number;\n    lastGrade: number;\n  };\n  metadata: {\n    introduced: Date;\n    graduated: boolean;\n    lapseCount: number;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n\n  constructor(\n    data: Omit<SpacedRepetitionItem, 'createdAt' | 'updatedAt'> & {\n      createdAt?: Date;\n      updatedAt?: Date;\n    }\n  ) {\n    SpacedRepetitionItemEntity.validate(data);\n\n    this.id = data.id;\n    this.taskId = data.taskId;\n    this.algorithm = { ...data.algorithm };\n    this.schedule = { ...data.schedule, nextReview: new Date(data.schedule.nextReview) };\n    if (data.schedule.lastReviewed) {\n      this.schedule.lastReviewed = new Date(data.schedule.lastReviewed);\n    }\n    this.performance = { ...data.performance };\n    this.metadata = { ...data.metadata, introduced: new Date(data.metadata.introduced) };\n    this.createdAt = data.createdAt || new Date();\n    this.updatedAt = data.updatedAt || new Date();\n  }\n\n  /**\n   * Validates spaced repetition data\n   */\n  static validate(data: Partial<SpacedRepetitionItem>): void {\n    // Efactor validation (1.3-2.5)\n    if (data.algorithm?.efactor !== undefined) {\n      if (data.algorithm.efactor < 1.3 || data.algorithm.efactor > 2.5) {\n        throw new ValidationError('Efactor must be between 1.3 and 2.5', {\n          field: 'efactor',\n          value: data.algorithm.efactor,\n        });\n      }\n    }\n\n    // Interval validation (max 365 days)\n    if (data.algorithm?.interval !== undefined) {\n      if (data.algorithm.interval < 0 || data.algorithm.interval > 365) {\n        throw new ValidationError('Interval must be between 0 and 365 days', {\n          field: 'interval',\n          value: data.algorithm.interval,\n        });\n      }\n    }\n\n    // Grade validation (0-5)\n    if (data.performance?.lastGrade !== undefined) {\n      if (data.performance.lastGrade < 0 || data.performance.lastGrade > 5) {\n        throw new ValidationError('Grade must be between 0 and 5', {\n          field: 'lastGrade',\n          value: data.performance.lastGrade,\n        });\n      }\n    }\n\n    // Accuracy validation (0-100)\n    if (data.performance?.averageAccuracy !== undefined) {\n      if (data.performance.averageAccuracy < 0 || data.performance.averageAccuracy > 100) {\n        throw new ValidationError('Average accuracy must be between 0 and 100', {\n          field: 'averageAccuracy',\n          value: data.performance.averageAccuracy,\n        });\n      }\n    }\n  }\n\n  /**\n   * Creates a new spaced repetition item with default values\n   */\n  static createNew(taskId: string, id: string): SpacedRepetitionItemEntity {\n    return new SpacedRepetitionItemEntity({\n      id,\n      taskId,\n      algorithm: {\n        interval: 1,\n        repetition: 0,\n        efactor: 2.5,\n      },\n      schedule: {\n        nextReview: new Date(Date.now() + 24 * 60 * 60 * 1000), // Tomorrow\n        totalReviews: 0,\n        consecutiveCorrect: 0,\n      },\n      performance: {\n        averageAccuracy: 0,\n        averageTime: 0,\n        difficultyRating: 3,\n        lastGrade: 0,\n      },\n      metadata: {\n        introduced: new Date(),\n        graduated: false,\n        lapseCount: 0,\n      },\n    });\n  }\n\n  /**\n   * Updates the item after answering with SM-2 algorithm\n   * @param grade - Quality of answer (0-5): 0=complete blackout, 5=perfect response\n   * @param timeSpent - Time spent on the question in milliseconds\n   */\n  recordAnswer(grade: number, timeSpent: number): void {\n    if (grade < 0 || grade > 5) {\n      throw new ValidationError('Grade must be between 0 and 5', {\n        field: 'grade',\n        value: grade,\n      });\n    }\n\n    // Update performance metrics\n    this.performance.lastGrade = grade;\n    this.updateAverageAccuracy(grade >= 3);\n    this.updateAverageTime(timeSpent);\n\n    // Update schedule\n    this.schedule.totalReviews++;\n    this.schedule.lastReviewed = new Date();\n\n    // Apply SM-2 algorithm\n    if (grade < 3) {\n      // Failed - reset\n      this.algorithm.repetition = 0;\n      this.algorithm.interval = 1;\n      this.schedule.consecutiveCorrect = 0;\n      this.metadata.lapseCount++;\n      this.metadata.graduated = false;\n    } else {\n      // Passed - calculate new interval\n      this.schedule.consecutiveCorrect++;\n\n      // Calculate new efactor\n      // EF' = EF + (0.1 - (5 - q) * (0.08 + (5 - q) * 0.02))\n      const efactorChange = 0.1 - (5 - grade) * (0.08 + (5 - grade) * 0.02);\n      this.algorithm.efactor = Math.max(1.3, this.algorithm.efactor + efactorChange);\n      this.algorithm.efactor = Math.min(2.5, this.algorithm.efactor);\n\n      // Calculate new interval based on repetition count\n      if (this.algorithm.repetition === 0) {\n        this.algorithm.interval = 1;\n      } else if (this.algorithm.repetition === 1) {\n        this.algorithm.interval = 6;\n      } else {\n        this.algorithm.interval = Math.round(this.algorithm.interval * this.algorithm.efactor);\n      }\n\n      // Cap at maximum interval\n      this.algorithm.interval = Math.min(365, this.algorithm.interval);\n\n      this.algorithm.repetition++;\n\n      // Mark as graduated after 2+ successful reviews\n      if (this.algorithm.repetition >= 2) {\n        this.metadata.graduated = true;\n      }\n    }\n\n    // Calculate next review date\n    this.schedule.nextReview = new Date(\n      Date.now() + this.algorithm.interval * 24 * 60 * 60 * 1000\n    );\n\n    this.updatedAt = new Date();\n  }\n\n  /**\n   * Updates average accuracy\n   */\n  private updateAverageAccuracy(correct: boolean): void {\n    const totalReviews = this.schedule.totalReviews;\n    const currentSum = (this.performance.averageAccuracy / 100) * (totalReviews - 1);\n    const newSum = currentSum + (correct ? 1 : 0);\n    this.performance.averageAccuracy = (newSum / totalReviews) * 100;\n  }\n\n  /**\n   * Updates average time\n   */\n  private updateAverageTime(timeSpent: number): void {\n    const totalReviews = this.schedule.totalReviews;\n    const currentSum = this.performance.averageTime * (totalReviews - 1);\n    const newSum = currentSum + timeSpent;\n    this.performance.averageTime = newSum / totalReviews;\n  }\n\n  /**\n   * Checks if the item is due for review\n   */\n  isDue(): boolean {\n    return this.schedule.nextReview.getTime() <= Date.now();\n  }\n\n  /**\n   * Gets days until next review\n   */\n  daysUntilReview(): number {\n    const diff = this.schedule.nextReview.getTime() - Date.now();\n    return Math.ceil(diff / (24 * 60 * 60 * 1000));\n  }\n\n  /**\n   * Converts to plain object\n   */\n  toJSON(): SpacedRepetitionItem {\n    const result: SpacedRepetitionItem = {\n      id: this.id,\n      taskId: this.taskId,\n      algorithm: { ...this.algorithm },\n      schedule: {\n        nextReview: this.schedule.nextReview,\n        totalReviews: this.schedule.totalReviews,\n        consecutiveCorrect: this.schedule.consecutiveCorrect,\n      },\n      performance: { ...this.performance },\n      metadata: {\n        introduced: this.metadata.introduced,\n        graduated: this.metadata.graduated,\n        lapseCount: this.metadata.lapseCount,\n      },\n      createdAt: this.createdAt,\n      updatedAt: this.updatedAt,\n    };\n\n    if (this.schedule.lastReviewed) {\n      result.schedule.lastReviewed = this.schedule.lastReviewed;\n    }\n\n    return result;\n  }\n\n  /**\n   * Creates from plain object\n   */\n  static fromJSON(data: SpacedRepetitionItem): SpacedRepetitionItemEntity {\n    return new SpacedRepetitionItemEntity(data);\n  }\n}","import type {\n  ISpacedRepetitionService,\n  Task,\n  SpacedRepetitionItem,\n  ReviewSchedule,\n} from '../types/services';\nimport type { ISpacedRepetitionRepository, ITaskRepository } from '@storage/types/adapters';\nimport { SpacedRepetitionItemEntity } from '../entities/spaced-repetition-item';\nimport { NotFoundError } from '../types/entities';\n\n/**\n * Spaced Repetition Service implementing SM-2 algorithm\n */\nexport class SpacedRepetitionService implements ISpacedRepetitionService {\n  constructor(\n    private spacedRepRepository: ISpacedRepetitionRepository,\n    private taskRepository: ITaskRepository\n  ) {}\n\n  /**\n   * Gets the next tasks for review based on spaced repetition\n   */\n  async getNextTasks(_userId: string, count: number): Promise<Task[]> {\n    // Get all items due for review\n    const dueItems = await this.spacedRepRepository.getDue(new Date());\n\n    // Sort by priority (more lapses = higher priority)\n    const sortedItems = dueItems.sort((a, b) => {\n      // Prioritize items with more lapses\n      if (b.metadata.lapseCount !== a.metadata.lapseCount) {\n        return b.metadata.lapseCount - a.metadata.lapseCount;\n      }\n      // Then by how overdue they are\n      return a.schedule.nextReview.getTime() - b.schedule.nextReview.getTime();\n    });\n\n    // Get the requested number of items\n    const selectedItems = sortedItems.slice(0, count);\n\n    // Fetch the corresponding tasks\n    const tasks: Task[] = [];\n    for (const item of selectedItems) {\n      const task = await this.taskRepository.getById(item.taskId);\n      if (task) {\n        tasks.push(task);\n      }\n    }\n\n    return tasks;\n  }\n\n  /**\n   * Records an answer and updates the spaced repetition data\n   */\n  async recordAnswer(taskId: string, _isCorrect: boolean, grade: number): Promise<void> {\n    // Validate grade\n    if (grade < 0 || grade > 5) {\n      throw new Error('Grade must be between 0 and 5');\n    }\n\n    // Get or create spaced repetition item\n    let srItem = await this.spacedRepRepository.getByTaskId(taskId);\n\n    if (!srItem) {\n      // Create new item for first review\n      const newItem = SpacedRepetitionItemEntity.createNew(\n        taskId,\n        `sr-${taskId}-${Date.now()}`\n      );\n      srItem = await this.spacedRepRepository.create(newItem.toJSON());\n    }\n\n    // Convert to entity and record answer\n    const srEntity = SpacedRepetitionItemEntity.fromJSON(srItem);\n    srEntity.recordAnswer(grade, 0); // timeSpent handled separately in answer history\n\n    // Update in repository\n    await this.spacedRepRepository.update(srItem.id, srEntity.toJSON());\n  }\n\n  /**\n   * Gets the spaced repetition data for a task\n   */\n  async getRepetitionData(taskId: string): Promise<SpacedRepetitionItem | null> {\n    return await this.spacedRepRepository.getByTaskId(taskId);\n  }\n\n  /**\n   * Gets all tasks due for review\n   */\n  async getTasksDue(_userId: string): Promise<Task[]> {\n    const dueItems = await this.spacedRepRepository.getDue(new Date());\n\n    const tasks: Task[] = [];\n    for (const item of dueItems) {\n      const task = await this.taskRepository.getById(item.taskId);\n      if (task) {\n        tasks.push(task);\n      }\n    }\n\n    return tasks;\n  }\n\n  /**\n   * Gets the review schedule for the next N days\n   */\n  async getReviewSchedule(_userId: string, days: number): Promise<ReviewSchedule[]> {\n    const schedule: ReviewSchedule[] = [];\n    const now = new Date();\n\n    for (let i = 0; i < days; i++) {\n      const date = new Date(now);\n      date.setDate(date.getDate() + i);\n      date.setHours(23, 59, 59, 999); // End of day\n\n      const items = await this.spacedRepRepository.getByNextReviewDate(date);\n\n      let estimatedTime = 0;\n      for (const item of items) {\n        // Use average time or default to 30 seconds per task\n        estimatedTime += item.performance.averageTime || 30000;\n      }\n\n      schedule.push({\n        date,\n        taskCount: items.length,\n        estimatedTime: Math.round(estimatedTime / 1000), // Convert to seconds\n      });\n    }\n\n    return schedule;\n  }\n\n  /**\n   * Manually reschedules a task to a new date\n   */\n  async rescheduleTask(taskId: string, newDate: Date): Promise<void> {\n    const srItem = await this.spacedRepRepository.getByTaskId(taskId);\n\n    if (!srItem) {\n      throw new NotFoundError('SpacedRepetitionItem', taskId);\n    }\n\n    // Update the next review date\n    await this.spacedRepRepository.updateSchedule(srItem.id, {\n      ...srItem.schedule,\n      nextReview: newDate,\n    });\n  }\n\n  /**\n   * Gets statistics about the spaced repetition system\n   */\n  async getStatistics(_userId: string): Promise<{\n    totalItems: number;\n    dueToday: number;\n    graduated: number;\n    averageInterval: number;\n    averageAccuracy: number;\n  }> {\n    // This would need a custom query or iteration\n    // For now, return placeholder\n    const allItems = await this.spacedRepRepository.getAll();\n    const dueItems = await this.spacedRepRepository.getDue(new Date());\n\n    const graduated = allItems.filter((item) => item.metadata.graduated).length;\n    const totalInterval = allItems.reduce((sum, item) => sum + item.algorithm.interval, 0);\n    const totalAccuracy = allItems.reduce((sum, item) => sum + item.performance.averageAccuracy, 0);\n\n    return {\n      totalItems: allItems.length,\n      dueToday: dueItems.length,\n      graduated,\n      averageInterval: allItems.length > 0 ? totalInterval / allItems.length : 0,\n      averageAccuracy: allItems.length > 0 ? totalAccuracy / allItems.length : 0,\n    };\n  }\n}","/**\n * Simplified repository implementations for IndexedDB using Dexie\n * These provide basic functionality to get the platform working\n */\n\nimport type { Table } from 'dexie';\nimport type {\n  Topic,\n  LearningPath,\n  Task,\n  AnswerHistory,\n  UserProgress,\n  PracticeSession,\n  SpacedRepetitionItem,\n} from '@core/types/services';\nimport type {\n  ITopicRepository,\n  ILearningPathRepository,\n  ITaskRepository,\n  IAnswerHistoryRepository,\n  IUserProgressRepository,\n  IPracticeSessionRepository,\n  ISpacedRepetitionRepository,\n} from '@storage/types/adapters';\n\n/**\n * Topic repository\n */\nexport class TopicRepository implements Partial<ITopicRepository> {\n  constructor(private table: Table<Topic, string>) {}\n\n  async create(topic: Topic): Promise<Topic> {\n    await this.table.add(topic);\n    return topic;\n  }\n\n  async getById(id: string): Promise<Topic | null> {\n    return (await this.table.get(id)) || null;\n  }\n\n  async getAll(): Promise<Topic[]> {\n    return await this.table.toArray();\n  }\n\n  async update(id: string, updates: Partial<Topic>): Promise<Topic> {\n    await this.table.update(id, updates);\n    return (await this.table.get(id))!;\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.table.delete(id);\n  }\n\n  async getActive(): Promise<Topic[]> {\n    return await this.table.where('isActive').equals(1).toArray();\n  }\n\n  async search(query: string): Promise<Topic[]> {\n    const lowerQuery = query.toLowerCase();\n    return await this.table\n      .filter((t) => t.title.toLowerCase().includes(lowerQuery))\n      .toArray();\n  }\n\n  // Stub methods\n  async getByTitle(_title: string): Promise<Topic | null> {\n    return null;\n  }\n  async createMany(_entities: any[]): Promise<Topic[]> {\n    return [];\n  }\n  async updateMany(_updates: any[]): Promise<void> {}\n  async deleteMany(_ids: string[]): Promise<void> {}\n  async count(): Promise<number> {\n    return await this.table.count();\n  }\n  async exists(id: string): Promise<boolean> {\n    return !!(await this.table.get(id));\n  }\n}\n\n/**\n * LearningPath repository\n */\nexport class LearningPathRepository implements Partial<ILearningPathRepository> {\n  constructor(private table: Table<LearningPath, string>) {}\n\n  async create(path: LearningPath): Promise<LearningPath> {\n    await this.table.add(path);\n    return path;\n  }\n\n  async getById(id: string): Promise<LearningPath | null> {\n    return (await this.table.get(id)) || null;\n  }\n\n  async getAll(): Promise<LearningPath[]> {\n    return await this.table.toArray();\n  }\n\n  async update(id: string, updates: Partial<LearningPath>): Promise<LearningPath> {\n    await this.table.update(id, updates);\n    return (await this.table.get(id))!;\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.table.delete(id);\n  }\n\n  async getByTopicId(topicId: string): Promise<LearningPath[]> {\n    return await this.table.where('topicId').equals(topicId).toArray();\n  }\n\n  async getByDifficulty(difficulty: 'easy' | 'medium' | 'hard'): Promise<LearningPath[]> {\n    return await this.table.where('difficulty').equals(difficulty).toArray();\n  }\n\n  async getActive(): Promise<LearningPath[]> {\n    return await this.table.where('isActive').equals(1).toArray();\n  }\n\n  // Stub methods\n  async searchByTitle(_query: string): Promise<LearningPath[]> {\n    return [];\n  }\n  async createMany(_entities: any[]): Promise<LearningPath[]> {\n    return [];\n  }\n  async updateMany(_updates: any[]): Promise<void> {}\n  async deleteMany(_ids: string[]): Promise<void> {}\n  async count(): Promise<number> {\n    return await this.table.count();\n  }\n  async exists(id: string): Promise<boolean> {\n    return !!(await this.table.get(id));\n  }\n}\n\n/**\n * Task repository\n */\nexport class TaskRepository implements Partial<ITaskRepository> {\n  constructor(private table: Table<Task, string>) {}\n\n  async create(task: Task): Promise<Task> {\n    await this.table.add(task);\n    return task;\n  }\n\n  async getById(id: string): Promise<Task | null> {\n    return (await this.table.get(id)) || null;\n  }\n\n  async getAll(): Promise<Task[]> {\n    return await this.table.toArray();\n  }\n\n  async update(id: string, updates: Partial<Task>): Promise<Task> {\n    await this.table.update(id, updates);\n    return (await this.table.get(id))!;\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.table.delete(id);\n  }\n\n  async getByLearningPathId(learningPathId: string): Promise<Task[]> {\n    return await this.table.where('learningPathId').equals(learningPathId).toArray();\n  }\n\n  async getRandomTasks(\n    count: number,\n    filters?: {\n      learningPathIds?: string[];\n      difficulty?: string;\n      excludeIds?: string[];\n    }\n  ): Promise<Task[]> {\n    console.log(`[TaskRepository] getRandomTasks called: count=${count}, filters=`, filters);\n\n    let tasks: Task[];\n    if (filters?.learningPathIds) {\n      tasks = await this.table\n        .where('learningPathId')\n        .anyOf(filters.learningPathIds)\n        .toArray();\n      console.log(`[TaskRepository] Found ${tasks.length} tasks for learning paths:`, filters.learningPathIds);\n      console.log(`[TaskRepository] Task IDs:`, tasks.map(t => t.id));\n    } else {\n      tasks = await this.table.toArray();\n      console.log(`[TaskRepository] Found ${tasks.length} tasks (no filter)`);\n    }\n\n    if (filters?.excludeIds) {\n      const beforeExclude = tasks.length;\n      tasks = tasks.filter((t) => !filters.excludeIds!.includes(t.id));\n      console.log(`[TaskRepository] After excluding IDs: ${beforeExclude} -> ${tasks.length} tasks`);\n    }\n\n    // Shuffle tasks\n    const shuffled = tasks.sort(() => Math.random() - 0.5);\n\n    // If we have fewer tasks than requested, repeat tasks to reach count\n    const result: Task[] = [];\n    if (shuffled.length === 0) {\n      console.log(`[TaskRepository] No tasks available!`);\n      return result;\n    }\n\n    for (let i = 0; i < count; i++) {\n      const task = shuffled[i % shuffled.length];\n      if (task) {\n        result.push(task);\n      }\n    }\n\n    console.log(`[TaskRepository] Returning ${result.length} tasks (${shuffled.length} unique, repeated to reach ${count})`);\n    return result;\n  }\n\n  // Stub methods\n  async getByLearningPathIds(_ids: string[]): Promise<Task[]> {\n    return [];\n  }\n  async getByType(_type: string): Promise<Task[]> {\n    return [];\n  }\n  async getByDifficulty(_difficulty: 'easy' | 'medium' | 'hard'): Promise<Task[]> {\n    return [];\n  }\n  async getByTags(_tags: string[]): Promise<Task[]> {\n    return [];\n  }\n  async search(_query: any): Promise<Task[]> {\n    return [];\n  }\n  async createMany(_entities: any[]): Promise<Task[]> {\n    return [];\n  }\n  async updateMany(_updates: any[]): Promise<void> {}\n  async deleteMany(_ids: string[]): Promise<void> {}\n  async count(): Promise<number> {\n    return await this.table.count();\n  }\n  async exists(id: string): Promise<boolean> {\n    return !!(await this.table.get(id));\n  }\n}\n\n/**\n * AnswerHistory repository\n */\nexport class AnswerHistoryRepository implements Partial<IAnswerHistoryRepository> {\n  constructor(private table: Table<AnswerHistory, string>) {}\n\n  async create(history: AnswerHistory): Promise<AnswerHistory> {\n    await this.table.add(history);\n    return history;\n  }\n\n  async getById(id: string): Promise<AnswerHistory | null> {\n    return (await this.table.get(id)) || null;\n  }\n\n  async getAll(): Promise<AnswerHistory[]> {\n    return await this.table.toArray();\n  }\n\n  async update(id: string, updates: Partial<AnswerHistory>): Promise<AnswerHistory> {\n    await this.table.update(id, updates);\n    return (await this.table.get(id))!;\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.table.delete(id);\n  }\n\n  async getByTaskId(taskId: string): Promise<AnswerHistory[]> {\n    return await this.table.where('taskId').equals(taskId).toArray();\n  }\n\n  async getBySessionId(sessionId: string): Promise<AnswerHistory[]> {\n    return await this.table.where('sessionId').equals(sessionId).toArray();\n  }\n\n  // Stub methods\n  async getByUserId(_userId: string, _limit?: number): Promise<AnswerHistory[]> {\n    return [];\n  }\n  async getByDateRange(_startDate: Date, _endDate: Date): Promise<AnswerHistory[]> {\n    return [];\n  }\n  async getCorrectAnswers(taskId: string): Promise<AnswerHistory[]> {\n    return await this.table.where('taskId').equals(taskId).filter((h) => h.isCorrect).toArray();\n  }\n  async getIncorrectAnswers(taskId: string): Promise<AnswerHistory[]> {\n    return await this.table.where('taskId').equals(taskId).filter((h) => !h.isCorrect).toArray();\n  }\n  async getAccuracyForPeriod(_userId: string, _startDate: Date, _endDate: Date): Promise<number> {\n    return 0;\n  }\n  async createMany(_entities: any[]): Promise<AnswerHistory[]> {\n    return [];\n  }\n  async updateMany(_updates: any[]): Promise<void> {}\n  async deleteMany(_ids: string[]): Promise<void> {}\n  async count(): Promise<number> {\n    return await this.table.count();\n  }\n  async exists(id: string): Promise<boolean> {\n    return !!(await this.table.get(id));\n  }\n}\n\n/**\n * UserProgress repository\n */\nexport class UserProgressRepository implements Partial<IUserProgressRepository> {\n  constructor(private table: Table<UserProgress, string>) {}\n\n  async create(progress: UserProgress): Promise<UserProgress> {\n    await this.table.add(progress);\n    return progress;\n  }\n\n  async getById(id: string): Promise<UserProgress | null> {\n    return (await this.table.get(id)) || null;\n  }\n\n  async getAll(): Promise<UserProgress[]> {\n    return await this.table.toArray();\n  }\n\n  async update(id: string, updates: Partial<UserProgress>): Promise<UserProgress> {\n    await this.table.update(id, updates);\n    return (await this.table.get(id))!;\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.table.delete(id);\n  }\n\n  async getByTopicId(topicId: string): Promise<UserProgress | null> {\n    const results = await this.table.where('topicId').equals(topicId).toArray();\n    return results[0] || null;\n  }\n\n  async getByLearningPathId(learningPathId: string): Promise<UserProgress | null> {\n    const results = await this.table.where('learningPathId').equals(learningPathId).toArray();\n    return results[0] || null;\n  }\n\n  // Stub methods\n  async getByUserId(_userId: string): Promise<UserProgress[]> {\n    return [];\n  }\n  async updateStatistics(_id: string, _stats: any): Promise<void> {}\n  async incrementTaskCount(_id: string, _correct: boolean): Promise<void> {}\n  async updateStreak(_id: string, _streakDays: number): Promise<void> {}\n  async createMany(_entities: any[]): Promise<UserProgress[]> {\n    return [];\n  }\n  async updateMany(_updates: any[]): Promise<void> {}\n  async deleteMany(_ids: string[]): Promise<void> {}\n  async count(): Promise<number> {\n    return await this.table.count();\n  }\n  async exists(id: string): Promise<boolean> {\n    return !!(await this.table.get(id));\n  }\n}\n\n/**\n * PracticeSession repository\n */\nexport class PracticeSessionRepository implements Partial<IPracticeSessionRepository> {\n  constructor(private table: Table<PracticeSession, string>) {}\n\n  async create(session: PracticeSession): Promise<PracticeSession> {\n    await this.table.add(session);\n    return session;\n  }\n\n  async getById(id: string): Promise<PracticeSession | null> {\n    return (await this.table.get(id)) || null;\n  }\n\n  async getAll(): Promise<PracticeSession[]> {\n    return await this.table.toArray();\n  }\n\n  async update(id: string, updates: Partial<PracticeSession>): Promise<PracticeSession> {\n    await this.table.update(id, updates);\n    return (await this.table.get(id))!;\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.table.delete(id);\n  }\n\n  async getActive(_userId: string): Promise<PracticeSession[]> {\n    return await this.table\n      .where('execution.status')\n      .anyOf(['planned', 'active', 'paused'])\n      .toArray();\n  }\n\n  async getRecent(_userId: string, limit: number): Promise<PracticeSession[]> {\n    return await this.table.orderBy('createdAt').reverse().limit(limit).toArray();\n  }\n\n  async getByStatus(status: any): Promise<PracticeSession[]> {\n    return await this.table.where('execution.status').equals(status).toArray();\n  }\n\n  // Stub methods\n  async getByUserId(_userId: string): Promise<PracticeSession[]> {\n    return [];\n  }\n  async getByDateRange(_startDate: Date, _endDate: Date): Promise<PracticeSession[]> {\n    return [];\n  }\n  async updateStatus(_id: string, _status: any): Promise<void> {}\n  async incrementProgress(_id: string, _correct: boolean, _timeSpent: number): Promise<void> {}\n  async createMany(_entities: any[]): Promise<PracticeSession[]> {\n    return [];\n  }\n  async updateMany(_updates: any[]): Promise<void> {}\n  async deleteMany(_ids: string[]): Promise<void> {}\n  async count(): Promise<number> {\n    return await this.table.count();\n  }\n  async exists(id: string): Promise<boolean> {\n    return !!(await this.table.get(id));\n  }\n}\n\n/**\n * SpacedRepetition repository\n */\nexport class SpacedRepetitionRepository implements Partial<ISpacedRepetitionRepository> {\n  constructor(private table: Table<SpacedRepetitionItem, string>) {}\n\n  async create(item: SpacedRepetitionItem): Promise<SpacedRepetitionItem> {\n    await this.table.add(item);\n    return item;\n  }\n\n  async getById(id: string): Promise<SpacedRepetitionItem | null> {\n    return (await this.table.get(id)) || null;\n  }\n\n  async getAll(): Promise<SpacedRepetitionItem[]> {\n    return await this.table.toArray();\n  }\n\n  async update(id: string, updates: Partial<SpacedRepetitionItem>): Promise<SpacedRepetitionItem> {\n    await this.table.update(id, updates);\n    return (await this.table.get(id))!;\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.table.delete(id);\n  }\n\n  async getByTaskId(taskId: string): Promise<SpacedRepetitionItem | null> {\n    const items = await this.table.where('taskId').equals(taskId).toArray();\n    return items[0] || null;\n  }\n\n  async getDue(date: Date): Promise<SpacedRepetitionItem[]> {\n    return await this.table.where('schedule.nextReview').belowOrEqual(date).toArray();\n  }\n\n  // Stub methods\n  async getByNextReviewDate(_date: Date): Promise<SpacedRepetitionItem[]> {\n    return [];\n  }\n  async updateAlgorithmData(_id: string, _algorithm: any): Promise<void> {}\n  async updateSchedule(_id: string, _schedule: any): Promise<void> {}\n  async updatePerformance(_id: string, _performance: any): Promise<void> {}\n  async getReviewCalendar(_startDate: Date, _endDate: Date): Promise<any[]> {\n    return [];\n  }\n  async createMany(_entities: any[]): Promise<SpacedRepetitionItem[]> {\n    return [];\n  }\n  async updateMany(_updates: any[]): Promise<void> {}\n  async deleteMany(_ids: string[]): Promise<void> {}\n  async count(): Promise<number> {\n    return await this.table.count();\n  }\n  async exists(id: string): Promise<boolean> {\n    return !!(await this.table.get(id));\n  }\n}","import { db } from './database';\nimport {\n  TopicRepository,\n  LearningPathRepository,\n  TaskRepository,\n  AnswerHistoryRepository,\n  UserProgressRepository,\n  PracticeSessionRepository,\n  SpacedRepetitionRepository,\n} from './adapters/repositories-simple';\nimport type {\n  ITopicRepository,\n  ILearningPathRepository,\n  ITaskRepository,\n  IAnswerHistoryRepository,\n  IUserProgressRepository,\n  IPracticeSessionRepository,\n  ISpacedRepetitionRepository,\n} from './types/adapters';\n\n/**\n * Storage factory for creating repository instances\n */\nexport class StorageFactory {\n  private static topicRepo: ITopicRepository;\n  private static learningPathRepo: ILearningPathRepository;\n  private static taskRepo: ITaskRepository;\n  private static answerHistoryRepo: IAnswerHistoryRepository;\n  private static userProgressRepo: IUserProgressRepository;\n  private static practiceSessionRepo: IPracticeSessionRepository;\n  private static spacedRepetitionRepo: ISpacedRepetitionRepository;\n\n  /**\n   * Gets the Topic repository\n   */\n  static getTopicRepository(): any {\n    if (!this.topicRepo) {\n      this.topicRepo = new TopicRepository(db.topics) as any;\n    }\n    return this.topicRepo;\n  }\n\n  /**\n   * Gets the LearningPath repository\n   */\n  static getLearningPathRepository(): any {\n    if (!this.learningPathRepo) {\n      this.learningPathRepo = new LearningPathRepository(db.learningPaths) as any;\n    }\n    return this.learningPathRepo;\n  }\n\n  /**\n   * Gets the Task repository\n   */\n  static getTaskRepository(): any {\n    if (!this.taskRepo) {\n      this.taskRepo = new TaskRepository(db.tasks) as any;\n    }\n    return this.taskRepo;\n  }\n\n  /**\n   * Gets the AnswerHistory repository\n   */\n  static getAnswerHistoryRepository(): any {\n    if (!this.answerHistoryRepo) {\n      this.answerHistoryRepo = new AnswerHistoryRepository(db.answerHistory) as any;\n    }\n    return this.answerHistoryRepo;\n  }\n\n  /**\n   * Gets the UserProgress repository\n   */\n  static getUserProgressRepository(): any {\n    if (!this.userProgressRepo) {\n      this.userProgressRepo = new UserProgressRepository(db.userProgress) as any;\n    }\n    return this.userProgressRepo;\n  }\n\n  /**\n   * Gets the PracticeSession repository\n   */\n  static getPracticeSessionRepository(): any {\n    if (!this.practiceSessionRepo) {\n      this.practiceSessionRepo = new PracticeSessionRepository(db.practiceSessions) as any;\n    }\n    return this.practiceSessionRepo;\n  }\n\n  /**\n   * Gets the SpacedRepetition repository\n   */\n  static getSpacedRepetitionRepository(): any {\n    if (!this.spacedRepetitionRepo) {\n      this.spacedRepetitionRepo = new SpacedRepetitionRepository(db.spacedRepetition) as any;\n    }\n    return this.spacedRepetitionRepo;\n  }\n\n  /**\n   * Resets all repository instances (useful for testing)\n   */\n  static reset(): void {\n    this.topicRepo = null as any;\n    this.learningPathRepo = null as any;\n    this.taskRepo = null as any;\n    this.answerHistoryRepo = null as any;\n    this.userProgressRepo = null as any;\n    this.practiceSessionRepo = null as any;\n    this.spacedRepetitionRepo = null as any;\n  }\n}\n\n/**\n * Convenience functions for getting repositories\n */\nexport const getTopicRepository = () => StorageFactory.getTopicRepository();\nexport const getLearningPathRepository = () => StorageFactory.getLearningPathRepository();\nexport const getTaskRepository = () => StorageFactory.getTaskRepository();\nexport const getAnswerHistoryRepository = () => StorageFactory.getAnswerHistoryRepository();\nexport const getUserProgressRepository = () => StorageFactory.getUserProgressRepository();\nexport const getPracticeSessionRepository = () => StorageFactory.getPracticeSessionRepository();\nexport const getSpacedRepetitionRepository = () => StorageFactory.getSpacedRepetitionRepository();","/**\n * Audio Service\n * Handles playback of Spanish pronunciation audio files\n */\n\ninterface AudioManifest {\n  [spanishText: string]: string; // Maps Spanish text to audio filename\n}\n\nclass AudioService {\n  private manifest: AudioManifest | null = null;\n  private audioCache: Map<string, HTMLAudioElement> = new Map();\n  private getBasePath = () => {\n    // For GitHub Pages, extract base from the current path\n    const path = window.location.pathname;\n    // If path starts with /learning-platform/, use that as base\n    if (path.startsWith('/learning-platform/')) {\n      return '/learning-platform/';\n    }\n    return '/';\n  };\n  private get manifestPath() {\n    return `${this.getBasePath()}audio/spanish/manifest.json`;\n  }\n  private get audioBasePath() {\n    return `${this.getBasePath()}audio/spanish/`;\n  }\n  private isInitialized = false;\n  private currentlyPlaying: HTMLAudioElement | null = null;\n\n  /**\n   * Initialize the audio service by loading the manifest\n   */\n  async initialize(): Promise<void> {\n    if (this.isInitialized) return;\n\n    try {\n      const response = await fetch(this.manifestPath);\n      if (!response.ok) {\n        throw new Error(`Failed to load audio manifest: ${response.statusText}`);\n      }\n\n      this.manifest = await response.json();\n      this.isInitialized = true;\n      console.log('✓ Audio service initialized with', Object.keys(this.manifest || {}).length, 'audio files');\n    } catch (error) {\n      console.warn('⚠️ Failed to initialize audio service:', error);\n      this.manifest = {};\n      this.isInitialized = true; // Mark as initialized even on error to prevent retry loops\n    }\n  }\n\n  /**\n   * Play audio for Spanish text\n   * @param text - The Spanish text to pronounce\n   * @returns Promise that resolves when audio finishes playing\n   */\n  async playSpanish(text: string): Promise<void> {\n    // Ensure initialized\n    if (!this.isInitialized) {\n      await this.initialize();\n    }\n\n    // Check if audio file exists in manifest\n    if (!this.manifest || !this.manifest[text]) {\n      console.warn(`⚠️ No audio file found for: \"${text}\"`);\n      throw new Error(`Audio not available for: ${text}`);\n    }\n\n    const filename = this.manifest[text];\n    const audioPath = this.audioBasePath + filename;\n\n    // Stop any currently playing audio\n    if (this.currentlyPlaying) {\n      this.currentlyPlaying.pause();\n      this.currentlyPlaying.currentTime = 0;\n    }\n\n    // Get or create audio element\n    let audio = this.audioCache.get(audioPath);\n    if (!audio) {\n      audio = new Audio(audioPath);\n      this.audioCache.set(audioPath, audio);\n    }\n\n    // Play the audio\n    this.currentlyPlaying = audio;\n\n    return new Promise((resolve, reject) => {\n      if (!audio) {\n        reject(new Error('Audio element not found'));\n        return;\n      }\n\n      const handleEnded = () => {\n        cleanup();\n        this.currentlyPlaying = null;\n        resolve();\n      };\n\n      const handleError = () => {\n        cleanup();\n        this.currentlyPlaying = null;\n        reject(new Error(`Failed to play audio: ${audioPath}`));\n      };\n\n      const cleanup = () => {\n        audio!.removeEventListener('ended', handleEnded);\n        audio!.removeEventListener('error', handleError);\n      };\n\n      audio.addEventListener('ended', handleEnded);\n      audio.addEventListener('error', handleError);\n\n      // Reset and play\n      audio.currentTime = 0;\n      audio.play().catch((error) => {\n        cleanup();\n        this.currentlyPlaying = null;\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Check if audio is available for given Spanish text\n   * @param text - The Spanish text to check\n   * @returns true if audio file exists\n   */\n  hasAudio(text: string): boolean {\n    // If not initialized yet, initialize synchronously by checking if we expect this text\n    // This is a workaround since hasAudio is called during render (can't be async)\n    if (!this.isInitialized) {\n      // Return false during initialization - buttons will appear after first render\n      return false;\n    }\n    return Boolean(this.manifest && this.manifest[text]);\n  }\n\n  /**\n   * Stop any currently playing audio\n   */\n  stopPlayback(): void {\n    if (this.currentlyPlaying) {\n      this.currentlyPlaying.pause();\n      this.currentlyPlaying.currentTime = 0;\n      this.currentlyPlaying = null;\n    }\n  }\n\n  /**\n   * Clear the audio cache\n   */\n  clearCache(): void {\n    this.audioCache.clear();\n  }\n}\n\n// Export singleton instance\nexport const audioService = new AudioService();\n\n// Export class for testing\nexport { AudioService };\n","import { useState } from 'react';\nimport { audioService } from '@core/services/audio-service';\n\ninterface AudioButtonProps {\n  text: string;\n  className?: string;\n  disabled?: boolean;\n  size?: 'small' | 'medium' | 'large';\n}\n\n// SVG Icons\nconst VolumeIcon = ({ size }: { size: string }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    style={{ width: size, height: size }}\n  >\n    <path d=\"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\" />\n  </svg>\n);\n\nconst VolumeOffIcon = ({ size }: { size: string }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    style={{ width: size, height: size }}\n  >\n    <path d=\"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z\" />\n  </svg>\n);\n\n/**\n * Audio Button Component\n * Plays Spanish pronunciation when clicked\n */\nexport function AudioButton({ text, className = '', disabled = false, size = 'medium' }: AudioButtonProps) {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Check if audio is available for this text\n  const hasAudio = audioService.hasAudio(text);\n\n  const handleClick = async () => {\n    if (isPlaying || disabled || !hasAudio) return;\n\n    setIsPlaying(true);\n    setError(null);\n\n    try {\n      await audioService.playSpanish(text);\n    } catch (err) {\n      console.error('Failed to play audio:', err);\n      setError('Audio playback failed');\n    } finally {\n      setIsPlaying(false);\n    }\n  };\n\n  // Size styles\n  const sizeClasses = {\n    small: 'w-7 h-7',\n    medium: 'w-9 h-9',\n    large: 'w-11 h-11'\n  };\n\n  const iconSizes = {\n    small: '16px',\n    medium: '20px',\n    large: '24px'\n  };\n\n  // Determine button state\n  const isDisabled = disabled || !hasAudio;\n  const buttonClasses = `\n    ${sizeClasses[size]}\n    inline-flex items-center justify-center\n    rounded-lg\n    transition-all duration-200\n    shadow-sm hover:shadow-md\n    ${isDisabled\n      ? 'bg-gray-100 text-gray-400 cursor-not-allowed border border-gray-200'\n      : isPlaying\n        ? 'bg-blue-600 text-white scale-95'\n        : 'bg-gradient-to-br from-blue-500 to-blue-600 text-white hover:from-blue-600 hover:to-blue-700 active:scale-95 cursor-pointer'\n    }\n    ${className}\n  `;\n\n  return (\n    <button\n      onClick={handleClick}\n      disabled={isDisabled}\n      className={buttonClasses}\n      title={\n        !hasAudio\n          ? 'Audio nicht verfügbar'\n          : isPlaying\n            ? 'Spielt ab...'\n            : `Aussprache abspielen: ${text}`\n      }\n      aria-label={`Spanische Aussprache für ${text} abspielen`}\n      type=\"button\"\n    >\n      {isPlaying ? (\n        <div style={{ animation: 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite' }}>\n          <VolumeIcon size={iconSizes[size]} />\n        </div>\n      ) : !hasAudio || error ? (\n        <VolumeOffIcon size={iconSizes[size]} />\n      ) : (\n        <VolumeIcon size={iconSizes[size]} />\n      )}\n    </button>\n  );\n}\n\ninterface AudioButtonInlineProps {\n  text: string;\n  className?: string;\n}\n\n/**\n * Inline Audio Button with Text\n * Shows the Spanish text with a small audio button next to it\n */\nexport function AudioButtonInline({ text, className = '' }: AudioButtonInlineProps) {\n  return (\n    <span className={`inline-flex items-center gap-2 ${className}`}>\n      <span>{text}</span>\n      <AudioButton text={text} size=\"small\" />\n    </span>\n  );\n}\n","/**\n * Design System Tokens\n *\n * Centralized design tokens for the learning platform.\n * These tokens ensure consistency across all UI components.\n */\n\n// ============================================================================\n// COLOR PALETTE\n// ============================================================================\n\nexport const colors = {\n  // Primary colors (Blue)\n  primary: {\n    50: '#eff6ff',\n    100: '#dbeafe',\n    200: '#bfdbfe',\n    300: '#93c5fd',\n    400: '#60a5fa',\n    500: '#3b82f6', // Main primary\n    600: '#2563eb',\n    700: '#1d4ed8',\n    800: '#1e40af',\n    900: '#1e3a8a',\n  },\n\n  // Success colors (Green)\n  success: {\n    50: '#f0fdf4',\n    100: '#dcfce7',\n    200: '#bbf7d0',\n    300: '#86efac',\n    400: '#4ade80',\n    500: '#10b981', // Main success\n    600: '#16a34a',\n    700: '#15803d',\n    800: '#166534',\n    900: '#14532d',\n  },\n\n  // Error colors (Red)\n  error: {\n    50: '#fef2f2',\n    100: '#fee2e2',\n    200: '#fecaca',\n    300: '#fca5a5',\n    400: '#f87171',\n    500: '#ef4444', // Main error\n    600: '#dc2626',\n    700: '#b91c1c',\n    800: '#991b1b',\n    900: '#7f1d1d',\n  },\n\n  // Warning colors (Amber/Orange)\n  warning: {\n    50: '#fffbeb',\n    100: '#fef3c7',\n    200: '#fde68a',\n    300: '#fcd34d',\n    400: '#fbbf24',\n    500: '#f59e0b', // Main warning\n    600: '#d97706',\n    700: '#b45309',\n    800: '#92400e',\n    900: '#78350f',\n  },\n\n  // Info colors (Purple)\n  info: {\n    50: '#faf5ff',\n    100: '#f3e8ff',\n    200: '#e9d5ff',\n    300: '#d8b4fe',\n    400: '#c084fc',\n    500: '#8b5cf6', // Main info\n    600: '#9333ea',\n    700: '#7e22ce',\n    800: '#6b21a8',\n    900: '#581c87',\n  },\n\n  // Neutral/Gray colors\n  neutral: {\n    0: '#ffffff',\n    50: '#f9fafb',\n    100: '#f3f4f6',\n    200: '#e5e7eb',\n    300: '#d1d5db',\n    400: '#9ca3af',\n    500: '#6b7280',\n    600: '#4b5563',\n    700: '#374151',\n    800: '#1f2937',\n    900: '#111827',\n    1000: '#000000',\n  },\n} as const;\n\n// Semantic color aliases for easier usage\nexport const semanticColors = {\n  // Text colors\n  text: {\n    primary: colors.neutral[900],\n    secondary: colors.neutral[600],\n    tertiary: colors.neutral[500],\n    disabled: colors.neutral[400],\n    inverse: colors.neutral[0],\n  },\n\n  // Background colors\n  background: {\n    primary: colors.neutral[0],\n    secondary: colors.neutral[50],\n    tertiary: colors.neutral[100],\n    inverse: colors.neutral[900],\n  },\n\n  // Border colors\n  border: {\n    light: colors.neutral[200],\n    base: colors.neutral[300],\n    dark: colors.neutral[400],\n  },\n\n  // Interactive states\n  interactive: {\n    primary: colors.primary[500],\n    primaryHover: colors.primary[600],\n    primaryActive: colors.primary[700],\n    primaryDisabled: colors.neutral[400],\n  },\n\n  // Feedback colors\n  feedback: {\n    success: colors.success[500],\n    successLight: colors.success[100],\n    successBorder: colors.success[300],\n    error: colors.error[500],\n    errorLight: colors.error[100],\n    errorBorder: colors.error[300],\n    warning: colors.warning[500],\n    warningLight: colors.warning[100],\n    warningBorder: colors.warning[400],\n    info: colors.info[500],\n    infoLight: colors.info[100],\n    infoBorder: colors.info[300],\n  },\n} as const;\n\n// ============================================================================\n// SPACING SCALE\n// ============================================================================\n\nexport const spacing = {\n  0: '0',\n  0.5: '0.125rem', // 2px\n  1: '0.25rem',    // 4px\n  1.5: '0.375rem', // 6px\n  2: '0.5rem',     // 8px\n  2.5: '0.625rem', // 10px\n  3: '0.75rem',    // 12px\n  3.5: '0.875rem', // 14px\n  4: '1rem',       // 16px\n  5: '1.25rem',    // 20px\n  6: '1.5rem',     // 24px\n  7: '1.75rem',    // 28px\n  8: '2rem',       // 32px\n  9: '2.25rem',    // 36px\n  10: '2.5rem',    // 40px\n  11: '2.75rem',   // 44px\n  12: '3rem',      // 48px\n  14: '3.5rem',    // 56px\n  16: '4rem',      // 64px\n  20: '5rem',      // 80px\n  24: '6rem',      // 96px\n  32: '8rem',      // 128px\n} as const;\n\n// ============================================================================\n// TYPOGRAPHY\n// ============================================================================\n\nexport const typography = {\n  // Font families\n  fontFamily: {\n    sans: 'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n    mono: 'ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\n  },\n\n  // Font sizes\n  fontSize: {\n    xs: '0.75rem',      // 12px\n    sm: '0.875rem',     // 14px\n    base: '1rem',       // 16px\n    lg: '1.125rem',     // 18px\n    xl: '1.25rem',      // 20px\n    '2xl': '1.5rem',    // 24px\n    '3xl': '1.875rem',  // 30px\n    '4xl': '2.25rem',   // 36px\n    '5xl': '3rem',      // 48px\n    '6xl': '3.75rem',   // 60px\n  },\n\n  // Font weights\n  fontWeight: {\n    light: '300',\n    normal: '400',\n    medium: '500',\n    semibold: '600',\n    bold: '700',\n    extrabold: '800',\n  },\n\n  // Line heights\n  lineHeight: {\n    none: '1',\n    tight: '1.25',\n    snug: '1.375',\n    normal: '1.5',\n    relaxed: '1.625',\n    loose: '2',\n  },\n\n  // Letter spacing\n  letterSpacing: {\n    tighter: '-0.05em',\n    tight: '-0.025em',\n    normal: '0',\n    wide: '0.025em',\n    wider: '0.05em',\n    widest: '0.1em',\n  },\n} as const;\n\n// ============================================================================\n// SHADOWS\n// ============================================================================\n\nexport const shadows = {\n  none: 'none',\n  xs: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\n  sm: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1)',\n  base: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1)',\n  md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1)',\n  lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1)',\n  xl: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1)',\n  '2xl': '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\n  inner: 'inset 0 2px 4px 0 rgba(0, 0, 0, 0.05)',\n} as const;\n\n// ============================================================================\n// BORDER RADIUS\n// ============================================================================\n\nexport const borderRadius = {\n  none: '0',\n  xs: '0.125rem',   // 2px\n  sm: '0.25rem',    // 4px\n  base: '0.375rem', // 6px\n  md: '0.5rem',     // 8px\n  lg: '0.75rem',    // 12px\n  xl: '1rem',       // 16px\n  '2xl': '1.5rem',  // 24px\n  '3xl': '2rem',    // 32px\n  full: '9999px',\n} as const;\n\n// ============================================================================\n// TRANSITIONS & ANIMATIONS\n// ============================================================================\n\nexport const transitions = {\n  // Durations\n  duration: {\n    instant: '0ms',\n    fast: '150ms',\n    base: '200ms',\n    slow: '300ms',\n    slower: '500ms',\n  },\n\n  // Timing functions\n  timing: {\n    linear: 'linear',\n    ease: 'ease',\n    easeIn: 'ease-in',\n    easeOut: 'ease-out',\n    easeInOut: 'ease-in-out',\n    spring: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  },\n\n  // Common transition presets\n  presets: {\n    fast: 'all 150ms cubic-bezier(0.4, 0, 0.2, 1)',\n    base: 'all 200ms cubic-bezier(0.4, 0, 0.2, 1)',\n    slow: 'all 300ms cubic-bezier(0.4, 0, 0.2, 1)',\n    colors: 'background-color 200ms cubic-bezier(0.4, 0, 0.2, 1), border-color 200ms cubic-bezier(0.4, 0, 0.2, 1), color 200ms cubic-bezier(0.4, 0, 0.2, 1)',\n  },\n} as const;\n\n// ============================================================================\n// BREAKPOINTS (for responsive design)\n// ============================================================================\n\nexport const breakpoints = {\n  xs: '0px',\n  sm: '640px',\n  md: '768px',\n  lg: '1024px',\n  xl: '1280px',\n  '2xl': '1536px',\n} as const;\n\n// ============================================================================\n// Z-INDEX SCALE\n// ============================================================================\n\nexport const zIndex = {\n  auto: 'auto',\n  0: '0',\n  10: '10',\n  20: '20',\n  30: '30',\n  40: '40',\n  50: '50',\n  dropdown: '1000',\n  sticky: '1020',\n  fixed: '1030',\n  modal: '1040',\n  popover: '1050',\n  tooltip: '1060',\n} as const;\n\n// ============================================================================\n// COMPONENT-SPECIFIC TOKENS\n// ============================================================================\n\nexport const components = {\n  button: {\n    // Heights\n    height: {\n      sm: spacing[8],\n      md: spacing[10],\n      lg: spacing[12],\n    },\n    // Padding\n    padding: {\n      sm: `${spacing[2]} ${spacing[3]}`,\n      md: `${spacing[2.5]} ${spacing[4]}`,\n      lg: `${spacing[3]} ${spacing[6]}`,\n    },\n    // Font sizes\n    fontSize: {\n      sm: typography.fontSize.sm,\n      md: typography.fontSize.base,\n      lg: typography.fontSize.lg,\n    },\n    // Border radius\n    borderRadius: borderRadius.md,\n  },\n\n  input: {\n    // Heights\n    height: {\n      sm: spacing[8],\n      md: spacing[10],\n      lg: spacing[12],\n    },\n    // Padding\n    padding: {\n      sm: `${spacing[1.5]} ${spacing[3]}`,\n      md: `${spacing[2]} ${spacing[3.5]}`,\n      lg: `${spacing[2.5]} ${spacing[4]}`,\n    },\n    // Border\n    borderWidth: '2px',\n    borderRadius: borderRadius.md,\n  },\n\n  card: {\n    // Padding\n    padding: {\n      sm: spacing[4],\n      md: spacing[6],\n      lg: spacing[8],\n    },\n    // Border radius\n    borderRadius: borderRadius.lg,\n    // Shadows\n    shadow: shadows.sm,\n  },\n} as const;\n\n// ============================================================================\n// UTILITY FUNCTIONS\n// ============================================================================\n\n/**\n * Get a color value from the palette\n * @example getColor('primary', 500) // returns '#3b82f6'\n */\nexport function getColor(colorName: keyof typeof colors, shade: keyof typeof colors.primary): string {\n  const colorGroup = colors[colorName];\n  if (!colorGroup || typeof colorGroup === 'string') {\n    return colors.neutral[500];\n  }\n  return (colorGroup as any)[shade] || colors.neutral[500];\n}\n\n/**\n * Get a spacing value\n * @example getSpacing(4) // returns '1rem'\n */\nexport function getSpacing(size: keyof typeof spacing): string {\n  return spacing[size];\n}\n\n/**\n * Create a transition string\n * @example createTransition('opacity', 'base') // returns 'opacity 200ms cubic-bezier(0.4, 0, 0.2, 1)'\n */\nexport function createTransition(\n  property: string,\n  speed: keyof typeof transitions.duration = 'base'\n): string {\n  return `${property} ${transitions.duration[speed]} ${transitions.timing.spring}`;\n}\n\n// ============================================================================\n// TYPE EXPORTS\n// ============================================================================\n\nexport type ColorName = keyof typeof colors;\nexport type ColorShade = keyof typeof colors.primary;\nexport type SpacingSize = keyof typeof spacing;\nexport type FontSize = keyof typeof typography.fontSize;\nexport type FontWeight = keyof typeof typography.fontWeight;\nexport type Shadow = keyof typeof shadows;\nexport type BorderRadius = keyof typeof borderRadius;\nexport type Breakpoint = keyof typeof breakpoints;\nexport type ZIndex = keyof typeof zIndex;\n","import React from 'react';\nimport {\n  semanticColors,\n  components,\n  transitions,\n} from '@ui/design-tokens';\n\nexport type CardPadding = 'small' | 'medium' | 'large';\n\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Padding size variant\n   * @default 'medium'\n   */\n  padding?: CardPadding;\n\n  /**\n   * Whether to show shadow\n   * @default true\n   */\n  shadow?: boolean;\n\n  /**\n   * Whether to show border\n   * @default true\n   */\n  border?: boolean;\n\n  /**\n   * Custom border color (overrides default)\n   */\n  borderColor?: string;\n\n  /**\n   * Background color (overrides default)\n   */\n  backgroundColor?: string;\n\n  /**\n   * Card content\n   */\n  children: React.ReactNode;\n}\n\n/**\n * Card Component\n *\n * A versatile container component with consistent styling using design tokens.\n * Serves as the foundation for more specialized card components.\n *\n * @example\n * ```tsx\n * <Card padding=\"medium\" shadow>\n *   <h3>Card Title</h3>\n *   <p>Card content goes here</p>\n * </Card>\n *\n * <Card padding=\"large\" border={false}>\n *   <div>Custom content</div>\n * </Card>\n * ```\n */\nexport function Card({\n  padding = 'medium',\n  shadow = true,\n  border = true,\n  borderColor,\n  backgroundColor,\n  children,\n  className = '',\n  style = {},\n  ...props\n}: CardProps) {\n  const paddingValue = getPaddingValue(padding);\n\n  const cardStyles: React.CSSProperties = {\n    backgroundColor: backgroundColor || semanticColors.background.primary,\n    borderRadius: components.card.borderRadius,\n    border: border\n      ? `1px solid ${borderColor || semanticColors.border.light}`\n      : 'none',\n    boxShadow: shadow ? components.card.shadow : 'none',\n    padding: paddingValue,\n    transition: transitions.presets.fast,\n    ...style,\n  };\n\n  return (\n    <div {...props} style={cardStyles} className={className}>\n      {children}\n    </div>\n  );\n}\n\n// ============================================================================\n// HELPER FUNCTIONS\n// ============================================================================\n\nfunction getPaddingValue(padding: CardPadding): string {\n  switch (padding) {\n    case 'small':\n      return components.card.padding.sm;\n    case 'medium':\n      return components.card.padding.md;\n    case 'large':\n      return components.card.padding.lg;\n  }\n}\n\n// ============================================================================\n// EXPORTS\n// ============================================================================\n\nexport default Card;\n","import React from 'react';\nimport { Card } from './Card';\nimport {\n  semanticColors,\n  typography,\n  spacing,\n  borderRadius,\n} from '@ui/design-tokens';\n\nexport type FeedbackVariant = 'success' | 'error' | 'warning' | 'info';\n\nexport interface FeedbackCardProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Visual variant determining color scheme\n   */\n  variant: FeedbackVariant;\n\n  /**\n   * Optional title/heading\n   */\n  title?: string;\n\n  /**\n   * Main message content\n   */\n  message?: string;\n\n  /**\n   * Whether the card can be dismissed\n   * @default false\n   */\n  dismissible?: boolean;\n\n  /**\n   * Callback when dismissed\n   */\n  onDismiss?: () => void;\n\n  /**\n   * Custom content (overrides message if provided)\n   */\n  children?: React.ReactNode;\n}\n\n/**\n * FeedbackCard Component\n *\n * A specialized card for displaying feedback messages (success, error, warning, info).\n * Features color-coded variants, optional icons, and dismiss functionality.\n *\n * @example\n * ```tsx\n * <FeedbackCard\n *   variant=\"success\"\n *   title=\"Success!\"\n *   message=\"Your answer is correct\"\n * />\n *\n * <FeedbackCard\n *   variant=\"error\"\n *   message=\"Incorrect answer. Try again!\"\n *   dismissible\n *   onDismiss={handleDismiss}\n * />\n *\n * <FeedbackCard variant=\"warning\">\n *   <p>Custom warning content</p>\n * </FeedbackCard>\n * ```\n */\nexport function FeedbackCard({\n  variant,\n  title,\n  message,\n  dismissible = false,\n  onDismiss,\n  children,\n  className = '',\n  style = {},\n  ...props\n}: FeedbackCardProps) {\n  const colors = React.useMemo(() => getVariantColors(variant), [variant]);\n  const icon = React.useMemo(() => getVariantIcon(variant), [variant]);\n\n  const containerStyles = React.useMemo(\n    () => ({\n      backgroundColor: colors.background,\n      borderColor: colors.border,\n      position: 'relative' as const,\n      ...style,\n    }),\n    [colors.background, colors.border, style]\n  );\n\n  return (\n    <Card\n      {...props}\n      padding=\"medium\"\n      shadow={false}\n      border\n      borderColor={colors.border}\n      backgroundColor={colors.background}\n      style={containerStyles}\n      className={className}\n      role={variant === 'error' || variant === 'warning' ? 'alert' : 'status'}\n      aria-live={variant === 'error' || variant === 'warning' ? 'assertive' : 'polite'}\n      aria-atomic=\"true\"\n    >\n      <div\n        style={{\n          display: 'flex',\n          gap: spacing[3],\n          alignItems: 'flex-start',\n        }}\n      >\n        {/* Icon */}\n        <div\n          style={{\n            fontSize: typography.fontSize.xl,\n            lineHeight: typography.lineHeight.none,\n            flexShrink: 0,\n            marginTop: spacing[0.5],\n          }}\n          aria-hidden=\"true\"\n        >\n          {icon}\n        </div>\n\n        {/* Content */}\n        <div style={{ flex: 1 }}>\n          {title && (\n            <h4\n              style={{\n                margin: 0,\n                marginBottom: spacing[1],\n                fontSize: typography.fontSize.base,\n                fontWeight: typography.fontWeight.semibold,\n                color: colors.text,\n              }}\n            >\n              {title}\n            </h4>\n          )}\n\n          {children ? (\n            <div\n              style={{\n                fontSize: typography.fontSize.sm,\n                color: colors.text,\n                lineHeight: typography.lineHeight.relaxed,\n              }}\n            >\n              {children}\n            </div>\n          ) : (\n            message && (\n              <p\n                style={{\n                  margin: 0,\n                  fontSize: typography.fontSize.sm,\n                  color: colors.text,\n                  lineHeight: typography.lineHeight.relaxed,\n                }}\n              >\n                {message}\n              </p>\n            )\n          )}\n        </div>\n\n        {/* Dismiss Button */}\n        {dismissible && onDismiss && (\n          <button\n            onClick={onDismiss}\n            style={{\n              background: 'none',\n              border: 'none',\n              padding: spacing[1],\n              cursor: 'pointer',\n              fontSize: typography.fontSize.lg,\n              lineHeight: typography.lineHeight.none,\n              color: colors.text,\n              opacity: 0.6,\n              transition: 'opacity 150ms',\n              borderRadius: borderRadius.sm,\n            }}\n            onMouseEnter={(e) => {\n              e.currentTarget.style.opacity = '1';\n            }}\n            onMouseLeave={(e) => {\n              e.currentTarget.style.opacity = '0.6';\n            }}\n            aria-label={`Dismiss ${variant} message`}\n          >\n            <span aria-hidden=\"true\">✕</span>\n          </button>\n        )}\n      </div>\n    </Card>\n  );\n}\n\n// ============================================================================\n// VARIANT HELPERS\n// ============================================================================\n\ninterface VariantColors {\n  background: string;\n  border: string;\n  text: string;\n}\n\nfunction getVariantColors(variant: FeedbackVariant): VariantColors {\n  switch (variant) {\n    case 'success':\n      return {\n        background: semanticColors.feedback.successLight,\n        border: semanticColors.feedback.successBorder,\n        text: semanticColors.feedback.success,\n      };\n\n    case 'error':\n      return {\n        background: semanticColors.feedback.errorLight,\n        border: semanticColors.feedback.errorBorder,\n        text: semanticColors.feedback.error,\n      };\n\n    case 'warning':\n      return {\n        background: semanticColors.feedback.warningLight,\n        border: semanticColors.feedback.warningBorder,\n        text: semanticColors.feedback.warning,\n      };\n\n    case 'info':\n      return {\n        background: semanticColors.feedback.infoLight,\n        border: semanticColors.feedback.infoBorder,\n        text: semanticColors.feedback.info,\n      };\n\n    default:\n      return {\n        background: semanticColors.feedback.infoLight,\n        border: semanticColors.feedback.infoBorder,\n        text: semanticColors.feedback.info,\n      };\n  }\n}\n\nfunction getVariantIcon(variant: FeedbackVariant): string {\n  switch (variant) {\n    case 'success':\n      return '✓';\n    case 'error':\n      return '✗';\n    case 'warning':\n      return '⚠';\n    case 'info':\n      return 'ℹ';\n    default:\n      return 'ℹ';\n  }\n}\n\n// ============================================================================\n// EXPORTS\n// ============================================================================\n\nexport default FeedbackCard;\n","import React from 'react';\nimport {\n  semanticColors,\n  spacing,\n  typography,\n  borderRadius,\n  transitions,\n} from '@ui/design-tokens';\n\nexport interface InputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  /**\n   * Current input value\n   */\n  value: string;\n\n  /**\n   * Change handler\n   */\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n\n  /**\n   * Whether the input is in an error state\n   * @default false\n   */\n  error?: boolean;\n\n  /**\n   * Whether the input is in a success state\n   * @default false\n   */\n  success?: boolean;\n\n  /**\n   * Helper text displayed below the input\n   */\n  helperText?: string;\n\n  /**\n   * Whether the input should take full width of container\n   * @default false\n   */\n  fullWidth?: boolean;\n}\n\n/**\n * Input Component\n *\n * A reusable text input component with validation states and accessibility features.\n * Used in cloze deletion, text input tasks, and word scramble.\n *\n * @example\n * ```tsx\n * <Input\n *   value={answer}\n *   onChange={(e) => setAnswer(e.target.value)}\n *   placeholder=\"Enter your answer\"\n *   error={showFeedback && !isCorrect}\n *   success={showFeedback && isCorrect}\n * />\n * ```\n */\nexport function Input({\n  value,\n  onChange,\n  error = false,\n  success = false,\n  helperText,\n  fullWidth = false,\n  disabled = false,\n  className = '',\n  style = {},\n  id,\n  ...props\n}: InputProps) {\n  const [isFocused, setIsFocused] = React.useState(false);\n  const helperId = helperText ? `${id || 'input'}-helper` : undefined;\n\n  const getBorderColor = () => {\n    if (disabled) return semanticColors.border.light;\n    if (error) return semanticColors.feedback.errorBorder;\n    if (success) return semanticColors.feedback.successBorder;\n    if (isFocused) return semanticColors.interactive.primary;\n    return semanticColors.border.base;\n  };\n\n  const getBackgroundColor = () => {\n    if (disabled) return semanticColors.background.tertiary;\n    if (error) return semanticColors.feedback.errorLight;\n    if (success) return semanticColors.feedback.successLight;\n    return semanticColors.background.primary;\n  };\n\n  const inputStyles: React.CSSProperties = {\n    width: fullWidth ? '100%' : 'auto',\n    padding: `${spacing[2]} ${spacing[3]}`,\n    fontSize: typography.fontSize.base,\n    fontFamily: typography.fontFamily.sans,\n    color: disabled ? semanticColors.text.disabled : semanticColors.text.primary,\n    backgroundColor: getBackgroundColor(),\n    border: `2px solid ${getBorderColor()}`,\n    borderRadius: borderRadius.md,\n    outline: 'none',\n    transition: transitions.presets.fast,\n    cursor: disabled ? 'not-allowed' : 'text',\n    boxShadow: isFocused && !disabled ? `0 0 0 3px ${semanticColors.interactive.primary}20` : 'none',\n    ...style,\n  };\n\n  return (\n    <div style={{ display: 'inline-block', width: fullWidth ? '100%' : 'auto' }}>\n      <input\n        {...props}\n        id={id}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n        style={inputStyles}\n        className={className}\n        aria-invalid={error ? \"true\" : \"false\"}\n        aria-describedby={helperId}\n        onFocus={(e) => {\n          setIsFocused(true);\n          props.onFocus?.(e);\n        }}\n        onBlur={(e) => {\n          setIsFocused(false);\n          props.onBlur?.(e);\n        }}\n      />\n\n      {helperText && (\n        <div\n          id={helperId}\n          style={{\n            marginTop: spacing[1],\n            fontSize: typography.fontSize.sm,\n            color: error\n              ? semanticColors.feedback.error\n              : success\n              ? semanticColors.feedback.success\n              : semanticColors.text.secondary,\n          }}\n        >\n          {helperText}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Input;\n","import React from 'react';\nimport {\n  semanticColors,\n  spacing,\n  typography,\n  borderRadius,\n  transitions,\n  colors,\n} from '@ui/design-tokens';\n\nexport interface CheckboxProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type' | 'onChange'> {\n  /**\n   * Whether the checkbox is checked\n   */\n  checked: boolean;\n\n  /**\n   * Change handler\n   */\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n\n  /**\n   * Label content (text or React node)\n   */\n  label?: React.ReactNode;\n\n  /**\n   * Whether the checkbox is in an error state\n   * @default false\n   */\n  error?: boolean;\n\n  /**\n   * Whether the checkbox is in a success state\n   * @default false\n   */\n  success?: boolean;\n}\n\n/**\n * Checkbox Component\n *\n * A reusable checkbox component with custom styling and validation states.\n * Used in multiple-select tasks.\n *\n * @example\n * ```tsx\n * <Checkbox\n *   checked={isSelected}\n *   onChange={(e) => setIsSelected(e.target.checked)}\n *   label=\"Option A\"\n *   success={showFeedback && isCorrect}\n *   error={showFeedback && !isCorrect}\n * />\n * ```\n */\nexport function Checkbox({\n  checked,\n  onChange,\n  label,\n  error = false,\n  success = false,\n  disabled = false,\n  className = '',\n  style = {},\n  id,\n  ...props\n}: CheckboxProps) {\n  const generatedId = React.useId();\n  const checkboxId = id || `checkbox-${generatedId}`;\n\n  const getCheckboxColor = () => {\n    if (disabled) return semanticColors.border.light;\n    if (error) return semanticColors.feedback.errorBorder;\n    if (success) return semanticColors.feedback.successBorder;\n    if (checked) return colors.primary[500];\n    return semanticColors.border.base;\n  };\n\n  const getBackgroundColor = () => {\n    if (disabled && checked) return semanticColors.background.tertiary;\n    if (checked) return colors.primary[500];\n    if (error) return semanticColors.feedback.errorLight;\n    if (success) return semanticColors.feedback.successLight;\n    return semanticColors.background.primary;\n  };\n\n  const containerStyles: React.CSSProperties = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    userSelect: 'none',\n    ...style,\n  };\n\n  const checkboxStyles: React.CSSProperties = {\n    width: '1.25rem',\n    height: '1.25rem',\n    marginRight: label ? spacing[2] : 0,\n    appearance: 'none',\n    backgroundColor: getBackgroundColor(),\n    border: `2px solid ${getCheckboxColor()}`,\n    borderRadius: borderRadius.sm,\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    transition: transitions.presets.fast,\n    position: 'relative',\n    flexShrink: 0,\n  };\n\n  // Checkmark styles (created using ::after pseudo-element via inline style workaround)\n  const checkmarkOverlayStyles: React.CSSProperties = checked\n    ? {\n        position: 'absolute',\n        left: '0.35rem',\n        top: '0.15rem',\n        width: '0.4rem',\n        height: '0.7rem',\n        border: 'solid white',\n        borderWidth: '0 2px 2px 0',\n        transform: 'rotate(45deg)',\n        pointerEvents: 'none',\n      }\n    : { display: 'none' };\n\n  return (\n    <label htmlFor={checkboxId} style={containerStyles} className={className}>\n      <div style={{ position: 'relative', display: 'inline-flex' }}>\n        <input\n          {...props}\n          type=\"checkbox\"\n          id={checkboxId}\n          checked={checked}\n          onChange={onChange}\n          disabled={disabled}\n          style={checkboxStyles}\n          aria-checked={checked}\n          aria-invalid={error}\n          onFocus={(e) => {\n            if (!disabled) {\n              e.currentTarget.style.outline = `2px solid ${colors.primary[300]}`;\n              e.currentTarget.style.outlineOffset = '2px';\n            }\n            props.onFocus?.(e);\n          }}\n          onBlur={(e) => {\n            e.currentTarget.style.outline = 'none';\n            props.onBlur?.(e);\n          }}\n        />\n        <div style={checkmarkOverlayStyles} />\n      </div>\n\n      {label && (\n        <span\n          style={{\n            fontSize: typography.fontSize.base,\n            color: disabled ? semanticColors.text.disabled : semanticColors.text.primary,\n            lineHeight: typography.lineHeight.normal,\n          }}\n        >\n          {label}\n        </span>\n      )}\n    </label>\n  );\n}\n\nexport default Checkbox;\n","import React from 'react';\nimport {\n  semanticColors,\n  spacing,\n  typography,\n  borderRadius,\n  transitions,\n} from '@ui/design-tokens';\n\nexport interface SelectOption {\n  value: string;\n  label: string;\n  disabled?: boolean;\n}\n\nexport interface SelectProps {\n  /**\n   * Current selected value\n   */\n  value: string;\n\n  /**\n   * Change handler\n   */\n  onChange: (value: string) => void;\n\n  /**\n   * Array of options\n   */\n  options: SelectOption[];\n\n  /**\n   * Whether the select is disabled\n   * @default false\n   */\n  disabled?: boolean;\n\n  /**\n   * Placeholder text when no value selected\n   */\n  placeholder?: string;\n\n  /**\n   * Whether the select is in an error state\n   * @default false\n   */\n  error?: boolean;\n\n  /**\n   * Whether the select is in a success state\n   * @default false\n   */\n  success?: boolean;\n\n  /**\n   * Full width of container\n   * @default false\n   */\n  fullWidth?: boolean;\n\n  /**\n   * CSS class name\n   */\n  className?: string;\n\n  /**\n   * Custom styles\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * ID for the select element\n   */\n  id?: string;\n}\n\n/**\n * Select Component\n *\n * A reusable select dropdown component with validation states.\n * Used in matching tasks and other scenarios requiring selection.\n *\n * @example\n * ```tsx\n * <Select\n *   value={selectedOption}\n *   onChange={setSelectedOption}\n *   options={[\n *     { value: 'a', label: 'Option A' },\n *     { value: 'b', label: 'Option B' },\n *   ]}\n *   placeholder=\"Choose an option\"\n * />\n * ```\n */\nexport function Select({\n  value,\n  onChange,\n  options,\n  disabled = false,\n  placeholder,\n  error = false,\n  success = false,\n  fullWidth = false,\n  className = '',\n  style = {},\n  id,\n}: SelectProps) {\n  const [isFocused, setIsFocused] = React.useState(false);\n\n  const getBorderColor = () => {\n    if (disabled) return semanticColors.border.light;\n    if (error) return semanticColors.feedback.errorBorder;\n    if (success) return semanticColors.feedback.successBorder;\n    if (isFocused) return semanticColors.interactive.primary;\n    return semanticColors.border.base;\n  };\n\n  const getBackgroundColor = () => {\n    if (disabled) return semanticColors.background.tertiary;\n    if (error) return semanticColors.feedback.errorLight;\n    if (success) return semanticColors.feedback.successLight;\n    return semanticColors.background.primary;\n  };\n\n  const selectStyles: React.CSSProperties = {\n    width: fullWidth ? '100%' : 'auto',\n    padding: `${spacing[2]} ${spacing[3]}`,\n    paddingRight: spacing[8], // Room for dropdown arrow\n    fontSize: typography.fontSize.base,\n    fontFamily: typography.fontFamily.sans,\n    color: disabled ? semanticColors.text.disabled : semanticColors.text.primary,\n    backgroundColor: getBackgroundColor(),\n    border: `2px solid ${getBorderColor()}`,\n    borderRadius: borderRadius.md,\n    outline: 'none',\n    transition: transitions.presets.fast,\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    appearance: 'none',\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 12 12'%3E%3Cpath fill='%23666' d='M6 9L1 4h10z'/%3E%3C/svg%3E\")`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: `right ${spacing[2]} center`,\n    boxShadow: isFocused && !disabled ? `0 0 0 3px ${semanticColors.interactive.primary}20` : 'none',\n    ...style,\n  };\n\n  return (\n    <select\n      id={id}\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      disabled={disabled}\n      style={selectStyles}\n      className={className}\n      aria-invalid={error ? \"true\" : \"false\"}\n      onFocus={() => setIsFocused(true)}\n      onBlur={() => setIsFocused(false)}\n    >\n      {placeholder && (\n        <option value=\"\" disabled>\n          {placeholder}\n        </option>\n      )}\n\n      {options.map((option) => (\n        <option key={option.value} value={option.value} disabled={option.disabled}>\n          {option.label}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport default Select;\n","import React from 'react';\nimport {\n  semanticColors,\n  spacing,\n  typography,\n  borderRadius,\n  colors,\n} from '@ui/design-tokens';\n\nexport interface SliderProps {\n  /**\n   * Current slider value\n   */\n  value: number;\n\n  /**\n   * Change handler\n   */\n  onChange: (value: number) => void;\n\n  /**\n   * Minimum value\n   */\n  min: number;\n\n  /**\n   * Maximum value\n   */\n  max: number;\n\n  /**\n   * Step increment\n   * @default 1\n   */\n  step?: number;\n\n  /**\n   * Whether the slider is disabled\n   * @default false\n   */\n  disabled?: boolean;\n\n  /**\n   * Unit to display with value (e.g., \"°C\", \"%\")\n   */\n  unit?: string;\n\n  /**\n   * Whether to show the current value\n   * @default true\n   */\n  showValue?: boolean;\n\n  /**\n   * CSS class name\n   */\n  className?: string;\n\n  /**\n   * Custom styles\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * ID for the slider element\n   */\n  id?: string;\n\n  /**\n   * Aria label for accessibility\n   */\n  'aria-label'?: string;\n}\n\n/**\n * Slider Component\n *\n * A reusable range slider component with value display and unit support.\n * Used in slider tasks for numeric input.\n *\n * @example\n * ```tsx\n * <Slider\n *   value={temperature}\n *   onChange={setTemperature}\n *   min={0}\n *   max={100}\n *   unit=\"°C\"\n *   showValue\n * />\n * ```\n */\nexport function Slider({\n  value,\n  onChange,\n  min,\n  max,\n  step = 1,\n  disabled = false,\n  unit = '',\n  showValue = true,\n  className = '',\n  style = {},\n  id,\n  'aria-label': ariaLabel,\n}: SliderProps) {\n  const percentage = ((value - min) / (max - min)) * 100;\n\n  const containerStyles: React.CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: spacing[2],\n    width: '100%',\n    ...style,\n  };\n\n  const sliderTrackStyles: React.CSSProperties = {\n    position: 'relative',\n    width: '100%',\n    height: '8px',\n    backgroundColor: semanticColors.background.tertiary,\n    borderRadius: borderRadius.full,\n    overflow: 'visible',\n  };\n\n  const sliderFillStyles: React.CSSProperties = {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    height: '100%',\n    width: `${percentage}%`,\n    backgroundColor: disabled ? semanticColors.border.dark : colors.primary[500],\n    borderRadius: borderRadius.full,\n    transition: 'width 0.1s ease',\n  };\n\n  const sliderInputStyles: React.CSSProperties = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    opacity: 0,\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    margin: 0,\n    zIndex: 2,\n  };\n\n  const thumbStyles: React.CSSProperties = {\n    position: 'absolute',\n    left: `calc(${percentage}% - 12px)`,\n    top: '50%',\n    transform: 'translateY(-50%)',\n    width: '24px',\n    height: '24px',\n    backgroundColor: disabled ? semanticColors.border.dark : colors.primary[600],\n    borderRadius: borderRadius.full,\n    border: `3px solid ${semanticColors.background.primary}`,\n    boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n    pointerEvents: 'none',\n    transition: 'left 0.1s ease',\n    zIndex: 1,\n  };\n\n  const valueDisplayStyles: React.CSSProperties = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    fontSize: typography.fontSize.sm,\n    color: semanticColors.text.secondary,\n  };\n\n  return (\n    <div style={containerStyles} className={className}>\n      <div style={sliderTrackStyles}>\n        <div style={sliderFillStyles} />\n        <div style={thumbStyles} />\n        <input\n          type=\"range\"\n          id={id}\n          min={min}\n          max={max}\n          step={step}\n          value={value}\n          onChange={(e) => onChange(Number(e.target.value))}\n          disabled={disabled}\n          style={sliderInputStyles}\n          aria-label={ariaLabel}\n          aria-valuenow={value}\n          aria-valuemin={min}\n          aria-valuemax={max}\n          aria-valuetext={`${value}${unit}`}\n        />\n      </div>\n\n      {showValue && (\n        <div style={valueDisplayStyles}>\n          <span>\n            {min}\n            {unit}\n          </span>\n          <span\n            style={{\n              fontWeight: typography.fontWeight.semibold,\n              color: semanticColors.text.primary,\n              fontSize: typography.fontSize.base,\n            }}\n          >\n            {value}\n            {unit}\n          </span>\n          <span>\n            {max}\n            {unit}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Slider;\n","import React, { useState, useEffect } from 'react';\nimport type { Task, PracticeSession, ClozeDeletionContent, TrueFalseContent, OrderingContent, MatchingContent, MultipleSelectContent, SliderContent, WordScrambleContent, FlashcardContent, TextInputContent } from '@core/types/services';\nimport { db } from '@storage/database';\nimport { PracticeSessionService } from '@core/services/practice-session-service';\nimport { SpacedRepetitionService } from '@core/services/spaced-repetition-service';\nimport {\n  getPracticeSessionRepository,\n  getTaskRepository,\n  getSpacedRepetitionRepository,\n} from '@storage/factory';\nimport { audioService } from '@core/services/audio-service';\nimport { AudioButton } from './audio-button';\nimport { FeedbackCard } from './common/FeedbackCard';\nimport { Input, Checkbox, Select, Slider } from './forms';\n\ninterface Props {\n  topicId: string;\n  learningPathIds: string[];\n  targetCount?: number;\n  includeReview?: boolean;\n  onComplete: () => void;\n  onCancel: () => void;\n}\n\nexport function PracticeSession({ topicId, learningPathIds, targetCount = 10, includeReview = true, onComplete, onCancel }: Props) {\n  const [session, setSession] = useState<PracticeSession | null>(null);\n  const [currentTask, setCurrentTask] = useState<Task | null>(null);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState<number | null>(null);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [startTime, setStartTime] = useState<number>(Date.now());\n\n  // Multiple choice state\n  const [shuffledOptions, setShuffledOptions] = useState<string[]>([]);\n  const [correctAnswerIndex, setCorrectAnswerIndex] = useState<number>(0);\n\n  // Cloze deletion state\n  const [blankAnswers, setBlankAnswers] = useState<string[]>([]);\n\n  // True/False state\n  const [trueFalseAnswer, setTrueFalseAnswer] = useState<boolean | null>(null);\n\n  // Ordering state\n  const [orderedItems, setOrderedItems] = useState<string[]>([]);\n\n  // Matching state\n  const [matchingAnswers, setMatchingAnswers] = useState<Record<number, number>>({});\n  const [shuffledRightColumn, setShuffledRightColumn] = useState<number[]>([]);\n\n  // Multiple Select state\n  const [selectedOptions, setSelectedOptions] = useState<Set<number>>(new Set());\n\n  // Slider state\n  const [sliderValue, setSliderValue] = useState<number>(0);\n\n  // Word Scramble state\n  const [scrambleAnswer, setScrambleAnswer] = useState<string>('');\n\n  // Flashcard state\n  const [flashcardRevealed, setFlashcardRevealed] = useState<boolean>(false);\n  const [flashcardKnown, setFlashcardKnown] = useState<boolean | null>(null);\n\n  // Text Input state\n  const [textInputAnswer, setTextInputAnswer] = useState<string>('');\n\n  // Audio service state\n  const [audioReady, setAudioReady] = useState(false);\n\n  // Initialize session and audio service\n  useEffect(() => {\n    initializeSession();\n    audioService.initialize().then(() => {\n      setAudioReady(true);\n    });\n  }, []);\n\n  // Load current task when session is first loaded\n  useEffect(() => {\n    if (session && session.execution.taskIds.length > 0 && currentTaskIndex === 0) {\n      loadCurrentTask();\n    }\n  }, [session]);\n\n  // Load current task when index changes\n  useEffect(() => {\n    if (session && session.execution.taskIds.length > 0 && currentTaskIndex > 0) {\n      loadCurrentTask();\n    }\n  }, [currentTaskIndex]);\n\n  async function initializeSession() {\n    const sessionService = new PracticeSessionService(\n      getPracticeSessionRepository(),\n      getTaskRepository(),\n      getSpacedRepetitionRepository()\n    );\n\n    const newSession = await sessionService.createSession({\n      topicId,\n      learningPathIds,\n      targetCount,\n      includeReview,\n    });\n\n    setSession(newSession);\n  }\n\n  async function loadCurrentTask() {\n    if (!session || currentTaskIndex >= session.execution.taskIds.length) return;\n\n    const taskId = session.execution.taskIds[currentTaskIndex];\n    if (!taskId) return;\n\n    const task = await db.tasks.get(taskId);\n    if (!task) return;\n\n    setCurrentTask(task);\n    setStartTime(Date.now());\n\n    // Reset all state\n    setSelectedAnswer(null);\n    setTrueFalseAnswer(null);\n    setBlankAnswers([]);\n    setOrderedItems([]);\n    setMatchingAnswers({});\n    setShuffledRightColumn([]);\n    setSelectedOptions(new Set());\n    setSliderValue(0);\n    setScrambleAnswer('');\n    setFlashcardRevealed(false);\n    setFlashcardKnown(null);\n    setTextInputAnswer('');\n\n    // Type-specific initialization\n    if (task.type === 'multiple-choice') {\n      const content = task.content as any;\n      const originalOptions = [...content.options];\n      const originalCorrectAnswer = content.correctAnswer;\n\n      // Create array of indices and shuffle\n      const indices = originalOptions.map((_: any, i: number) => i);\n      for (let i = indices.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [indices[i]!, indices[j]!] = [indices[j]!, indices[i]!];\n      }\n\n      // Apply shuffle to options and find new position of correct answer\n      const shuffled = indices.map(i => originalOptions[i]!);\n      // Find the position where the original correct answer ended up after shuffling\n      const newCorrectIndex = indices.findIndex(originalIndex => originalIndex === originalCorrectAnswer);\n\n      setShuffledOptions(shuffled);\n      setCorrectAnswerIndex(newCorrectIndex);\n    } else if (task.type === 'cloze-deletion') {\n      const content = task.content as ClozeDeletionContent;\n      setBlankAnswers(new Array(content.blanks.length).fill(''));\n    } else if (task.type === 'ordering') {\n      const content = task.content as OrderingContent;\n      // Shuffle items for ordering task\n      const shuffled = [...content.items].sort(() => Math.random() - 0.5);\n      setOrderedItems(shuffled);\n    } else if (task.type === 'matching') {\n      const content = task.content as MatchingContent;\n      // Shuffle right column for matching\n      const indices = content.pairs.map((_, i) => i);\n      for (let i = indices.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [indices[i]!, indices[j]!] = [indices[j]!, indices[i]!];\n      }\n      setShuffledRightColumn(indices);\n      setMatchingAnswers({});\n    } else if (task.type === 'multiple-select') {\n      setSelectedOptions(new Set());\n    } else if (task.type === 'slider') {\n      const content = task.content as SliderContent;\n      setSliderValue(Math.floor((content.min + content.max) / 2)); // Start in middle\n    } else if (task.type === 'word-scramble') {\n      setScrambleAnswer('');\n    }\n  }\n\n  async function handleAnswerSubmit() {\n    if (!currentTask || !session) return;\n\n    let correct = false;\n\n    // Check answer based on task type\n    if (currentTask.type === 'multiple-choice') {\n      if (selectedAnswer === null) return;\n      correct = selectedAnswer === correctAnswerIndex;\n    } else if (currentTask.type === 'cloze-deletion') {\n      const content = currentTask.content as ClozeDeletionContent;\n      correct = content.blanks.every((blank, i) => {\n        const userAnswer = blankAnswers[i]?.trim().toLowerCase() || '';\n        const correctAnswer = blank.correctAnswer.toLowerCase();\n        const alternatives = blank.alternatives?.map(a => a.toLowerCase()) || [];\n        return userAnswer === correctAnswer || alternatives.includes(userAnswer);\n      });\n    } else if (currentTask.type === 'true-false') {\n      if (trueFalseAnswer === null) return;\n      const content = currentTask.content as TrueFalseContent;\n      correct = trueFalseAnswer === content.correctAnswer;\n    } else if (currentTask.type === 'ordering') {\n      const content = currentTask.content as OrderingContent;\n      correct = orderedItems.every((item, i) => {\n        const originalIndex = content.items.indexOf(item);\n        return content.correctOrder[i]! === originalIndex;\n      });\n    } else if (currentTask.type === 'matching') {\n      const content = currentTask.content as MatchingContent;\n      correct = content.pairs.every((_pair, i) => matchingAnswers[i] === i);\n    } else if (currentTask.type === 'multiple-select') {\n      const content = currentTask.content as MultipleSelectContent;\n      if (selectedOptions.size === 0) return;\n      // Check if all correct answers are selected and no wrong ones\n      correct = content.correctAnswers.length === selectedOptions.size &&\n        content.correctAnswers.every(ans => selectedOptions.has(ans));\n    } else if (currentTask.type === 'slider') {\n      const content = currentTask.content as SliderContent;\n      const tolerance = content.tolerance || 0;\n      correct = Math.abs(sliderValue - content.correctValue) <= tolerance;\n    } else if (currentTask.type === 'word-scramble') {\n      if (!scrambleAnswer.trim()) return;\n      const content = currentTask.content as WordScrambleContent;\n      correct = scrambleAnswer.trim().toLowerCase() === content.correctWord.toLowerCase();\n    } else if (currentTask.type === 'flashcard') {\n      if (flashcardKnown === null) return;\n      correct = flashcardKnown;\n    } else if (currentTask.type === 'text-input') {\n      if (!textInputAnswer.trim()) return;\n      const content = currentTask.content as TextInputContent;\n      const caseSensitive = content.caseSensitive || false;\n      const userAnswer = caseSensitive ? textInputAnswer.trim() : textInputAnswer.trim().toLowerCase();\n      const correctAnswer = caseSensitive ? content.correctAnswer : content.correctAnswer.toLowerCase();\n      const alternatives = (content.alternatives || []).map(a => caseSensitive ? a : a.toLowerCase());\n      correct = userAnswer === correctAnswer || alternatives.includes(userAnswer);\n    }\n\n    setIsCorrect(correct);\n    setShowFeedback(true);\n\n    // Calculate time spent\n    const timeSpent = Math.round((Date.now() - startTime) / 1000);\n\n    // Record answer in session\n    const sessionService = new PracticeSessionService(\n      getPracticeSessionRepository(),\n      getTaskRepository(),\n      getSpacedRepetitionRepository()\n    );\n\n    await sessionService.recordSessionAnswer(session.id, correct, timeSpent);\n\n    // Update spaced repetition\n    const spacedRepService = new SpacedRepetitionService(\n      getSpacedRepetitionRepository(),\n      getTaskRepository()\n    );\n\n    // Convert boolean to grade (0-5 scale)\n    const grade = correct ? 4 : 2;\n    await spacedRepService.recordAnswer(currentTask.id, correct, grade);\n\n    // Update session state\n    const updatedSession = await db.practiceSessions.get(session.id);\n    if (updatedSession) {\n      setSession(updatedSession);\n    }\n  }\n\n  function handleSkipTask() {\n    if (!session) return;\n\n    setShowFeedback(false);\n    setSelectedAnswer(null);\n\n    if (currentTaskIndex < session.execution.taskIds.length - 1) {\n      setCurrentTaskIndex(currentTaskIndex + 1);\n    }\n  }\n\n  function handleNextTask() {\n    setShowFeedback(false);\n    setSelectedAnswer(null);\n\n    if (session && currentTaskIndex < session.execution.taskIds.length - 1) {\n      setCurrentTaskIndex(currentTaskIndex + 1);\n    } else {\n      handleComplete();\n    }\n  }\n\n  async function handleComplete() {\n    if (!session) return;\n\n    const sessionService = new PracticeSessionService(\n      getPracticeSessionRepository(),\n      getTaskRepository(),\n      getSpacedRepetitionRepository()\n    );\n\n    await sessionService.completeSession(session.id);\n\n    // Wait a bit to ensure the session is saved to the database\n    await new Promise(resolve => setTimeout(resolve, 100));\n\n    onComplete();\n  }\n\n  // Helper function to check if text has Spanish audio available\n  function isSpanishText(text: string): boolean {\n    if (!text || !audioReady) return false;\n    // Only return true if we actually have audio for this text\n    return audioService.hasAudio(text);\n  }\n\n  // Helper function to check if answer is ready to submit\n  function canSubmit(): boolean {\n    if (showFeedback) return false;\n\n    if (currentTask?.type === 'multiple-choice') return selectedAnswer !== null;\n    if (currentTask?.type === 'cloze-deletion') return blankAnswers.every(a => a.trim().length > 0);\n    if (currentTask?.type === 'true-false') return trueFalseAnswer !== null;\n    if (currentTask?.type === 'ordering') return orderedItems.length > 0;\n    if (currentTask?.type === 'matching') {\n      const content = currentTask.content as MatchingContent;\n      return Object.keys(matchingAnswers).length === content.pairs.length;\n    }\n    if (currentTask?.type === 'multiple-select') return selectedOptions.size > 0;\n    if (currentTask?.type === 'slider') return true; // Slider always has a value\n    if (currentTask?.type === 'word-scramble') return scrambleAnswer.trim().length > 0;\n    if (currentTask?.type === 'flashcard') return flashcardKnown !== null;\n    if (currentTask?.type === 'text-input') return textInputAnswer.trim().length > 0;\n    return false;\n  }\n\n  // Render task-specific content\n  function renderTaskContent() {\n    if (!currentTask) return null;\n\n    if (currentTask.type === 'multiple-choice') {\n      return renderMultipleChoice();\n    } else if (currentTask.type === 'cloze-deletion') {\n      return renderClozeDeletion();\n    } else if (currentTask.type === 'true-false') {\n      return renderTrueFalse();\n    } else if (currentTask.type === 'ordering') {\n      return renderOrdering();\n    } else if (currentTask.type === 'matching') {\n      return renderMatching();\n    } else if (currentTask.type === 'multiple-select') {\n      return renderMultipleSelect();\n    } else if (currentTask.type === 'slider') {\n      return renderSlider();\n    } else if (currentTask.type === 'word-scramble') {\n      return renderWordScramble();\n    } else if (currentTask.type === 'flashcard') {\n      return renderFlashcard();\n    } else if (currentTask.type === 'text-input') {\n      return renderTextInput();\n    }\n    return null;\n  }\n\n  function renderMultipleChoice() {\n    if (!currentTask || currentTask.type !== 'multiple-choice') return null;\n\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem', flex: 1, minHeight: 0 }}>\n        {shuffledOptions.map((option, index) => {\n          let backgroundColor = '#ffffff';\n          let borderColor = '#d1d5db';\n\n          if (showFeedback) {\n            if (index === correctAnswerIndex) {\n              backgroundColor = '#dcfce7';\n              borderColor = '#86efac';\n            } else if (index === selectedAnswer && !isCorrect) {\n              backgroundColor = '#fee2e2';\n              borderColor = '#fca5a5';\n            }\n          } else if (selectedAnswer === index) {\n            backgroundColor = '#dbeafe';\n            borderColor = '#3b82f6';\n          }\n\n          const hasAudio = isSpanishText(option);\n          const isCorrectOption = index === correctAnswerIndex;\n          const showAudio = showFeedback && isCorrectOption && hasAudio;\n\n          return (\n            <button\n              key={index}\n              onClick={() => !showFeedback && setSelectedAnswer(index)}\n              disabled={showFeedback}\n              style={{\n                padding: '0.875rem',\n                background: backgroundColor,\n                border: `2px solid ${borderColor}`,\n                borderRadius: '6px',\n                cursor: showFeedback ? 'default' : 'pointer',\n                textAlign: 'left',\n                fontSize: '0.95rem',\n                transition: 'all 0.2s',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                gap: '0.5rem',\n                opacity: 1,\n              }}\n            >\n              <span>{option}</span>\n              {showAudio && <AudioButton text={option} size=\"small\" />}\n            </button>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderClozeDeletion() {\n    if (!currentTask || currentTask.type !== 'cloze-deletion') return null;\n    const content = currentTask.content as ClozeDeletionContent;\n\n    // Split text by {{blank}} markers\n    const parts = content.text.split(/\\{\\{blank\\}\\}/g);\n\n    return (\n      <div style={{ flex: 1, minHeight: 0 }}>\n        <div style={{ fontSize: '1rem', lineHeight: '1.8' }}>\n          {parts.map((part, i) => (\n            <span key={i}>\n              {part}\n              {i < content.blanks.length && (() => {\n                const userAnswer = blankAnswers[i]?.trim().toLowerCase() || '';\n                const isCorrect = userAnswer === content.blanks[i]!.correctAnswer.toLowerCase() ||\n                  content.blanks[i]!.alternatives?.map(a => a.toLowerCase()).includes(userAnswer);\n                const hasAnswer = blankAnswers[i]?.trim() !== '';\n\n                return (\n                  <Input\n                    value={blankAnswers[i] || ''}\n                    onChange={(e) => {\n                      const newAnswers = [...blankAnswers];\n                      newAnswers[i] = e.target.value;\n                      setBlankAnswers(newAnswers);\n                    }}\n                    disabled={showFeedback}\n                    error={showFeedback && hasAnswer && !isCorrect ? true : false}\n                    success={showFeedback && isCorrect ? true : false}\n                    style={{\n                      fontSize: '0.95rem',\n                      minWidth: '100px',\n                      display: 'inline-block',\n                    }}\n                  />\n                );\n              })()}\n            </span>\n          ))}\n        </div>\n        {showFeedback && (\n          <div style={{ marginTop: '1rem', padding: '1rem', background: '#f9fafb', borderRadius: '6px' }}>\n            <div style={{ fontSize: '0.875rem', fontWeight: '500', marginBottom: '0.5rem', color: '#374151' }}>\n              Richtige Antworten:\n            </div>\n            {content.blanks.map((blank, i) => {\n              const userAnswer = blankAnswers[i]?.trim().toLowerCase() || '';\n              const isCorrect = userAnswer === blank.correctAnswer.toLowerCase() ||\n                blank.alternatives?.map(a => a.toLowerCase()).includes(userAnswer);\n              return (\n                <div key={i} style={{\n                  fontSize: '0.875rem',\n                  marginTop: '0.25rem',\n                  color: isCorrect ? '#10b981' : '#374151'\n                }}>\n                  Lücke {i + 1}: <strong style={{ color: '#10b981' }}>{blank.correctAnswer}</strong>\n                  {blank.alternatives && blank.alternatives.length > 0 && (\n                    <span style={{ color: '#6b7280', fontSize: '0.8rem' }}>\n                      {' '}(auch richtig: {blank.alternatives.join(', ')})\n                    </span>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderTrueFalse() {\n    if (!currentTask || currentTask.type !== 'true-false') return null;\n    const content = currentTask.content as TrueFalseContent;\n\n    return (\n      <div style={{ flex: 1, minHeight: 0, display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n        <div style={{ fontSize: '1rem', lineHeight: '1.6', flex: 1 }}>\n          {content.statement}\n        </div>\n        <div style={{ display: 'flex', gap: '1rem' }}>\n          {[true, false].map((value) => {\n            let backgroundColor = '#ffffff';\n            let borderColor = '#d1d5db';\n\n            if (showFeedback) {\n              if (value === content.correctAnswer) {\n                backgroundColor = '#dcfce7';\n                borderColor = '#86efac';\n              } else if (value === trueFalseAnswer && !isCorrect) {\n                backgroundColor = '#fee2e2';\n                borderColor = '#fca5a5';\n              }\n            } else if (trueFalseAnswer === value) {\n              backgroundColor = '#dbeafe';\n              borderColor = '#3b82f6';\n            }\n\n            return (\n              <button\n                key={value.toString()}\n                onClick={() => !showFeedback && setTrueFalseAnswer(value)}\n                disabled={showFeedback}\n                style={{\n                  flex: 1,\n                  padding: '1rem',\n                  background: backgroundColor,\n                  border: `2px solid ${borderColor}`,\n                  borderRadius: '6px',\n                  cursor: showFeedback ? 'default' : 'pointer',\n                  fontSize: '1rem',\n                  fontWeight: '500',\n                  transition: 'all 0.2s',\n                }}\n              >\n                {value ? 'Richtig' : 'Falsch'}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  function renderOrdering() {\n    if (!currentTask || currentTask.type !== 'ordering') return null;\n    const content = currentTask.content as OrderingContent;\n\n    return (\n      <div style={{ flex: 1, minHeight: 0 }}>\n        <div style={{ marginBottom: '0.5rem', fontSize: '0.875rem', color: '#6b7280' }}>\n          Ordne die Elemente in die richtige Reihenfolge\n        </div>\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n          {orderedItems.map((item, index) => {\n            const originalIndex = content.items.indexOf(item);\n            const isInCorrectPosition = showFeedback && content.correctOrder[index] === originalIndex;\n            const shouldBeAtPosition = showFeedback ? content.correctOrder.indexOf(originalIndex) : -1;\n\n            return (\n              <div\n                key={index}\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '0.5rem',\n                  padding: '0.75rem',\n                  background: showFeedback\n                    ? isInCorrectPosition\n                      ? '#dcfce7'\n                      : '#ffffff'\n                    : '#ffffff',\n                  border: showFeedback\n                    ? isInCorrectPosition\n                      ? '2px solid #86efac'\n                      : '2px solid #d1d5db'\n                    : '2px solid #d1d5db',\n                  borderRadius: '6px',\n                }}\n              >\n                <div style={{ fontWeight: '500', color: '#6b7280', minWidth: '24px' }}>\n                  {index + 1}.\n                </div>\n                <div style={{ flex: 1 }}>\n                  {item}\n                  {showFeedback && !isInCorrectPosition && (\n                    <span style={{ fontSize: '0.8rem', color: '#ef4444', marginLeft: '0.5rem' }}>\n                      → Position {shouldBeAtPosition + 1}\n                    </span>\n                  )}\n                </div>\n                {!showFeedback && (\n                  <div style={{ display: 'flex', gap: '0.25rem' }}>\n                    {index > 0 && (\n                      <button\n                        onClick={() => {\n                          const newItems = [...orderedItems];\n                          [newItems[index]!, newItems[index - 1]!] = [newItems[index - 1]!, newItems[index]!];\n                          setOrderedItems(newItems);\n                        }}\n                        style={{\n                          padding: '0.25rem 0.5rem',\n                          background: '#f3f4f6',\n                          border: 'none',\n                          borderRadius: '4px',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        ↑\n                      </button>\n                    )}\n                    {index < orderedItems.length - 1 && (\n                      <button\n                        onClick={() => {\n                          const newItems = [...orderedItems];\n                          [newItems[index]!, newItems[index + 1]!] = [newItems[index + 1]!, newItems[index]!];\n                          setOrderedItems(newItems);\n                        }}\n                        style={{\n                          padding: '0.25rem 0.5rem',\n                          background: '#f3f4f6',\n                          border: 'none',\n                          borderRadius: '4px',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        ↓\n                      </button>\n                    )}\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n        {showFeedback && !isCorrect && (\n          <div style={{ marginTop: '1rem', padding: '1rem', background: '#f9fafb', borderRadius: '6px' }}>\n            <div style={{ fontSize: '0.875rem', fontWeight: '500', marginBottom: '0.5rem', color: '#374151' }}>\n              Richtige Reihenfolge:\n            </div>\n            {content.correctOrder.map((originalIndex, position) => (\n              <div key={position} style={{ fontSize: '0.875rem', marginTop: '0.25rem', color: '#10b981' }}>\n                {position + 1}. <strong>{content.items[originalIndex]}</strong>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderMatching() {\n    if (!currentTask || currentTask.type !== 'matching') return null;\n    const content = currentTask.content as MatchingContent;\n\n    return (\n      <div style={{ flex: 1, minHeight: 0 }}>\n        <div style={{ marginBottom: '0.5rem', fontSize: '0.875rem', color: '#6b7280' }}>\n          Ordne die passenden Paare zu\n        </div>\n        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0.75rem' }}>\n          {content.pairs.map((pair, leftIndex) => {\n            const isCorrect = showFeedback && matchingAnswers[leftIndex] === leftIndex;\n            const hasAnswer = matchingAnswers[leftIndex] !== undefined && matchingAnswers[leftIndex] !== null;\n\n            return (\n              <React.Fragment key={leftIndex}>\n                <div\n                  style={{\n                    padding: '0.75rem',\n                    background: '#f9fafb',\n                    border: '2px solid #d1d5db',\n                    borderRadius: '6px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    gap: '0.5rem',\n                  }}\n                >\n                  <span>{pair.left}</span>\n                  {isSpanishText(pair.left) && <AudioButton text={pair.left} size=\"small\" />}\n                </div>\n                <Select\n                  value={matchingAnswers[leftIndex]?.toString() ?? ''}\n                  onChange={(value) => {\n                    const numValue = parseInt(value);\n                    setMatchingAnswers({ ...matchingAnswers, [leftIndex]: numValue });\n                  }}\n                  options={shuffledRightColumn.map((rightIndex) => ({\n                    value: rightIndex.toString(),\n                    label: content.pairs[rightIndex]!.right,\n                  }))}\n                  disabled={showFeedback}\n                  placeholder=\"Wähle...\"\n                  error={showFeedback && hasAnswer && !isCorrect}\n                  success={showFeedback && isCorrect}\n                  fullWidth\n                />\n              </React.Fragment>\n            );\n          })}\n        </div>\n        {showFeedback && !isCorrect && (\n          <div style={{ marginTop: '1rem', padding: '1rem', background: '#f9fafb', borderRadius: '6px' }}>\n            <div style={{ fontSize: '0.875rem', fontWeight: '500', marginBottom: '0.5rem', color: '#374151' }}>\n              Richtige Zuordnungen:\n            </div>\n            {content.pairs.map((pair, i) => (\n              <div key={i} style={{ fontSize: '0.875rem', marginTop: '0.25rem', color: '#10b981' }}>\n                <strong>{pair.left}</strong> → <strong>{pair.right}</strong>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderMultipleSelect() {\n    if (!currentTask || currentTask.type !== 'multiple-select') return null;\n    const content = currentTask.content as MultipleSelectContent;\n\n    const toggleOption = (index: number) => {\n      if (showFeedback) return;\n      const newSelected = new Set(selectedOptions);\n      if (newSelected.has(index)) {\n        newSelected.delete(index);\n      } else {\n        newSelected.add(index);\n      }\n      setSelectedOptions(newSelected);\n    };\n\n    return (\n      <div style={{ flex: 1, minHeight: 0 }}>\n        <div style={{ marginBottom: '0.75rem', fontSize: '0.875rem', color: '#6b7280' }}>\n          Wähle alle zutreffenden Antworten\n        </div>\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem' }}>\n          {content.options.map((option, index) => {\n            const isSelected = selectedOptions.has(index);\n            const isCorrectAnswer = content.correctAnswers.includes(index);\n            let backgroundColor = '#ffffff';\n            let borderColor = '#d1d5db';\n            let statusIcon = '';\n\n            if (showFeedback) {\n              // Show green for all correct answers (whether selected or not)\n              if (isCorrectAnswer) {\n                backgroundColor = '#dcfce7';\n                borderColor = '#86efac';\n                statusIcon = isSelected ? '✓' : '○'; // Check if selected, circle if missed\n              }\n              // Show red for wrong selections\n              else if (isSelected && !isCorrectAnswer) {\n                backgroundColor = '#fee2e2';\n                borderColor = '#fca5a5';\n                statusIcon = '✗';\n              }\n            } else if (isSelected) {\n              backgroundColor = '#dbeafe';\n              borderColor = '#3b82f6';\n            }\n\n            return (\n              <div\n                key={index}\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  padding: '0.875rem',\n                  background: backgroundColor,\n                  border: `2px solid ${borderColor}`,\n                  borderRadius: '6px',\n                  transition: 'all 0.2s',\n                  position: 'relative',\n                }}\n              >\n                <Checkbox\n                  checked={isSelected}\n                  onChange={() => toggleOption(index)}\n                  disabled={showFeedback}\n                  label={<span style={{ fontSize: '0.95rem', flex: 1 }}>{option}</span>}\n                  error={showFeedback && isSelected && !isCorrectAnswer}\n                  success={showFeedback && isCorrectAnswer && isSelected}\n                  style={{ flex: 1 }}\n                />\n                {showFeedback && statusIcon && (\n                  <span style={{\n                    fontSize: '1.25rem',\n                    fontWeight: 'bold',\n                    marginLeft: '0.5rem',\n                    color: isCorrectAnswer ? '#10b981' : '#ef4444'\n                  }}>\n                    {statusIcon}\n                  </span>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  function renderSlider() {\n    if (!currentTask || currentTask.type !== 'slider') return null;\n    const content = currentTask.content as SliderContent;\n    const step = content.step || 1;\n    const tolerance = content.tolerance || 0;\n\n    return (\n      <div style={{ flex: 1, minHeight: 0, display: 'flex', flexDirection: 'column', gap: '1.5rem' }}>\n        <div style={{ textAlign: 'center' }}>\n          <div style={{\n            fontSize: '2.5rem',\n            fontWeight: 'bold',\n            color: showFeedback\n              ? Math.abs(sliderValue - content.correctValue) <= tolerance\n                ? '#10b981'\n                : '#ef4444'\n              : '#3b82f6'\n          }}>\n            {sliderValue}{content.unit || ''}\n          </div>\n        </div>\n\n        <div style={{ padding: '0 1rem' }}>\n          <Slider\n            value={sliderValue}\n            onChange={setSliderValue}\n            min={content.min}\n            max={content.max}\n            step={step}\n            disabled={showFeedback}\n            unit={content.unit || ''}\n            showValue={false}\n          />\n        </div>\n\n        {showFeedback && (\n          <div style={{\n            padding: '1rem',\n            background: '#f9fafb',\n            borderRadius: '6px',\n            textAlign: 'center'\n          }}>\n            <div style={{ fontSize: '0.875rem', fontWeight: '500', color: '#374151' }}>\n              Richtige Antwort: <strong style={{ color: '#10b981', fontSize: '1.1rem' }}>\n                {content.correctValue}{content.unit || ''}\n              </strong>\n              {tolerance > 0 && (\n                <span style={{ fontSize: '0.8rem', color: '#6b7280' }}>\n                  {' '}(±{tolerance})\n                </span>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderWordScramble() {\n    if (!currentTask || currentTask.type !== 'word-scramble') return null;\n    const content = currentTask.content as WordScrambleContent;\n\n    return (\n      <div style={{ flex: 1, minHeight: 0, display: 'flex', flexDirection: 'column', gap: '1.5rem' }}>\n        <div style={{\n          padding: '1.5rem',\n          background: '#f9fafb',\n          borderRadius: '8px',\n          textAlign: 'center'\n        }}>\n          <div style={{ fontSize: '0.875rem', color: '#6b7280', marginBottom: '0.5rem' }}>\n            Buchstabensalat:\n          </div>\n          <div style={{\n            fontSize: '2rem',\n            fontWeight: 'bold',\n            letterSpacing: '0.5rem',\n            color: '#3b82f6',\n            fontFamily: 'monospace'\n          }}>\n            {content.scrambledWord}\n          </div>\n          {content.showLength && (\n            <div style={{ fontSize: '0.875rem', color: '#6b7280', marginTop: '0.5rem' }}>\n              ({content.correctWord.length} Buchstaben)\n            </div>\n          )}\n        </div>\n\n        <div>\n          <label style={{\n            display: 'block',\n            fontSize: '0.875rem',\n            fontWeight: '500',\n            marginBottom: '0.5rem',\n            color: '#374151'\n          }}>\n            Deine Lösung:\n          </label>\n          <input\n            type=\"text\"\n            value={scrambleAnswer}\n            onChange={(e) => setScrambleAnswer(e.target.value)}\n            disabled={showFeedback}\n            placeholder=\"Entschlüssle das Wort...\"\n            style={{\n              width: '100%',\n              padding: '0.875rem',\n              fontSize: '1.1rem',\n              border: showFeedback\n                ? scrambleAnswer.trim().toLowerCase() === content.correctWord.toLowerCase()\n                  ? '2px solid #86efac'\n                  : scrambleAnswer.trim()\n                  ? '2px solid #fca5a5'\n                  : '2px solid #d1d5db'\n                : '2px solid #d1d5db',\n              borderRadius: '6px',\n              backgroundColor: showFeedback\n                ? scrambleAnswer.trim().toLowerCase() === content.correctWord.toLowerCase()\n                  ? '#dcfce7'\n                  : scrambleAnswer.trim()\n                  ? '#fee2e2'\n                  : '#ffffff'\n                : '#ffffff',\n              textAlign: 'center',\n              fontWeight: '500'\n            }}\n          />\n        </div>\n\n        {showFeedback && !isCorrect && (\n          <div style={{ padding: '1rem', background: '#f9fafb', borderRadius: '6px', textAlign: 'center' }}>\n            <div style={{ fontSize: '0.875rem', fontWeight: '500', marginBottom: '0.5rem', color: '#374151' }}>\n              Richtige Lösung:\n            </div>\n            <div style={{ fontSize: '1.5rem', fontWeight: 'bold', color: '#10b981' }}>\n              {content.correctWord}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderFlashcard() {\n    if (!currentTask || currentTask.type !== 'flashcard') return null;\n    const content = currentTask.content as FlashcardContent;\n\n    return (\n      <div style={{ flex: 1, minHeight: 0, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', gap: '2rem', padding: '2rem' }}>\n        {/* Flashcard */}\n        <div style={{\n          width: '100%',\n          maxWidth: '500px',\n          minHeight: '300px',\n          background: 'white',\n          border: '3px solid #e5e7eb',\n          borderRadius: '16px',\n          padding: '3rem',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gap: '1.5rem',\n          boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n          transition: 'all 0.3s ease',\n        }}>\n          {/* Language indicator */}\n          <div style={{\n            fontSize: '0.75rem',\n            fontWeight: '600',\n            color: '#6b7280',\n            textTransform: 'uppercase',\n            letterSpacing: '0.05em'\n          }}>\n            {content.frontLanguage === 'de' ? 'Deutsch' : content.frontLanguage === 'es' ? 'Español' : 'English'}\n          </div>\n\n          {/* Front side */}\n          <div style={{\n            fontSize: '2.5rem',\n            fontWeight: 'bold',\n            color: '#1f2937',\n            textAlign: 'center',\n            minHeight: '80px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: '1rem',\n          }}>\n            <div>{content.front}</div>\n            {isSpanishText(content.front) && <AudioButton text={content.front} size=\"large\" />}\n          </div>\n\n          {/* Back side or reveal button */}\n          {!flashcardRevealed ? (\n            <button\n              onClick={() => setFlashcardRevealed(true)}\n              disabled={showFeedback}\n              style={{\n                padding: '1rem 2.5rem',\n                background: '#3b82f6',\n                color: 'white',\n                border: 'none',\n                borderRadius: '8px',\n                cursor: 'pointer',\n                fontSize: '1.125rem',\n                fontWeight: '500',\n                transition: 'all 0.2s',\n                boxShadow: '0 2px 4px rgba(59, 130, 246, 0.3)',\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.background = '#2563eb';\n                e.currentTarget.style.transform = 'translateY(-1px)';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.background = '#3b82f6';\n                e.currentTarget.style.transform = 'translateY(0)';\n              }}\n            >\n              Ergebnis anzeigen\n            </button>\n          ) : (\n            <>\n              <div style={{\n                width: '100%',\n                height: '2px',\n                background: '#e5e7eb',\n                margin: '0.5rem 0'\n              }} />\n\n              {/* Language indicator for back */}\n              <div style={{\n                fontSize: '0.75rem',\n                fontWeight: '600',\n                color: '#6b7280',\n                textTransform: 'uppercase',\n                letterSpacing: '0.05em'\n              }}>\n                {content.backLanguage === 'de' ? 'Deutsch' : content.backLanguage === 'es' ? 'Español' : 'English'}\n              </div>\n\n              {/* Answer */}\n              <div style={{\n                fontSize: '2rem',\n                fontWeight: 'bold',\n                color: '#10b981',\n                textAlign: 'center',\n                minHeight: '60px',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                gap: '1rem',\n              }}>\n                <div>{content.back}</div>\n                {isSpanishText(content.back) && <AudioButton text={content.back} size=\"large\" />}\n              </div>\n            </>\n          )}\n        </div>\n\n        {/* Self-assessment buttons - only shown after reveal */}\n        {flashcardRevealed && !showFeedback && (\n          <div style={{\n            display: 'flex',\n            gap: '1.5rem',\n            justifyContent: 'center',\n            width: '100%',\n            maxWidth: '500px',\n          }}>\n            <button\n              onClick={() => {\n                setFlashcardKnown(false);\n                handleAnswerSubmit();\n              }}\n              style={{\n                flex: 1,\n                padding: '1.25rem',\n                background: '#fee2e2',\n                color: '#dc2626',\n                border: '2px solid #fca5a5',\n                borderRadius: '12px',\n                cursor: 'pointer',\n                fontSize: '1.125rem',\n                fontWeight: '600',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                gap: '0.75rem',\n                transition: 'all 0.2s',\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.background = '#fecaca';\n                e.currentTarget.style.transform = 'scale(1.02)';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.background = '#fee2e2';\n                e.currentTarget.style.transform = 'scale(1)';\n              }}\n            >\n              <span style={{ fontSize: '1.75rem' }}>✗</span>\n              <span>Nicht gewusst</span>\n            </button>\n\n            <button\n              onClick={() => {\n                setFlashcardKnown(true);\n                handleAnswerSubmit();\n              }}\n              style={{\n                flex: 1,\n                padding: '1.25rem',\n                background: '#dcfce7',\n                color: '#16a34a',\n                border: '2px solid #86efac',\n                borderRadius: '12px',\n                cursor: 'pointer',\n                fontSize: '1.125rem',\n                fontWeight: '600',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                gap: '0.75rem',\n                transition: 'all 0.2s',\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.background = '#bbf7d0';\n                e.currentTarget.style.transform = 'scale(1.02)';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.background = '#dcfce7';\n                e.currentTarget.style.transform = 'scale(1)';\n              }}\n            >\n              <span style={{ fontSize: '1.75rem' }}>✓</span>\n              <span>Gewusst</span>\n            </button>\n          </div>\n        )}\n\n        {/* Explanation after answer */}\n        {showFeedback && content.explanation && (\n          <div style={{\n            width: '100%',\n            maxWidth: '500px',\n            padding: '1rem',\n            background: '#f3f4f6',\n            borderRadius: '8px',\n            fontSize: '0.95rem',\n            color: '#4b5563',\n            lineHeight: '1.6',\n          }}>\n            <strong>Hinweis:</strong> {content.explanation}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderTextInput() {\n    if (!currentTask || currentTask.type !== 'text-input') return null;\n    const content = currentTask.content as TextInputContent;\n\n    return (\n      <div style={{ flex: 1, minHeight: 0, display: 'flex', flexDirection: 'column', gap: '1.5rem' }}>\n        <div style={{\n          padding: '2rem',\n          background: '#ffffff',\n          borderRadius: '12px',\n          boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n        }}>\n          <Input\n            value={textInputAnswer}\n            onChange={(e) => setTextInputAnswer(e.target.value)}\n            disabled={showFeedback}\n            placeholder=\"Deine Antwort...\"\n            error={showFeedback && !isCorrect}\n            success={showFeedback && isCorrect}\n            fullWidth\n            style={{\n              fontSize: '1.125rem',\n              padding: '1rem',\n            }}\n          />\n\n          {showFeedback && !isCorrect && (\n            <div style={{\n              marginTop: '1rem',\n              padding: '0.75rem',\n              background: '#f3f4f6',\n              borderRadius: '6px',\n              fontSize: '0.95rem',\n              color: '#4b5563',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n            }}>\n              <div>\n                <strong>Richtige Antwort:</strong> {content.correctAnswer}\n              </div>\n              {isSpanishText(content.correctAnswer) && <AudioButton text={content.correctAnswer} size=\"small\" />}\n            </div>\n          )}\n        </div>\n\n        {content.hint && !showFeedback && (\n          <div style={{\n            padding: '0.75rem 1rem',\n            background: '#fef3c7',\n            border: '1px solid #fbbf24',\n            borderRadius: '6px',\n            fontSize: '0.9rem',\n            color: '#92400e',\n          }}>\n            💡 <strong>Tipp:</strong> {content.hint}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  if (!session || !currentTask) {\n    return (\n      <div style={{ padding: '2rem', textAlign: 'center' }}>\n        <p>Wird geladen...</p>\n      </div>\n    );\n  }\n\n  const progress = ((currentTaskIndex + 1) / session.execution.taskIds.length) * 100;\n\n  return (\n    <div style={{\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      padding: '1rem',\n      maxWidth: '900px',\n      margin: '0 auto'\n    }}>\n      {/* Header - compact */}\n      <div style={{ marginBottom: '1rem', flexShrink: 0 }}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: '0.75rem',\n          }}\n        >\n          <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n            <h2 style={{ margin: 0, fontSize: '1.25rem' }}>Übungssitzung</h2>\n            <span style={{ fontSize: '0.875rem', color: '#6b7280' }}>\n              {currentTaskIndex + 1}/{session.execution.taskIds.length}\n            </span>\n            <span style={{ fontSize: '0.75rem', color: '#9ca3af', fontFamily: 'monospace' }}>\n              ID: {currentTask.id}\n            </span>\n          </div>\n          <button\n            onClick={onCancel}\n            style={{\n              padding: '0.5rem 1rem',\n              background: '#e5e7eb',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '0.875rem',\n            }}\n          >\n            Abbrechen\n          </button>\n        </div>\n\n        {/* Progress bar */}\n        <div\n          style={{\n            width: '100%',\n            height: '6px',\n            background: '#e5e7eb',\n            borderRadius: '3px',\n            overflow: 'hidden',\n          }}\n        >\n          <div\n            style={{\n              width: `${progress}%`,\n              height: '100%',\n              background: '#3b82f6',\n              transition: 'width 0.3s ease',\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Question - main content area */}\n      <div\n        style={{\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          background: '#f9fafb',\n          padding: '1.5rem',\n          borderRadius: '8px',\n          marginBottom: '1rem',\n          minHeight: 0,\n        }}\n      >\n        {(currentTask.type === 'multiple-choice' ||\n          currentTask.type === 'ordering' ||\n          currentTask.type === 'matching' ||\n          currentTask.type === 'multiple-select' ||\n          currentTask.type === 'slider' ||\n          currentTask.type === 'word-scramble' ||\n          currentTask.type === 'text-input') && (\n          <div style={{ marginBottom: '1rem', display: 'flex', alignItems: 'center', gap: '0.75rem' }}>\n            <h3 style={{ margin: 0, fontSize: '1.1rem', lineHeight: '1.4', flex: 1 }}>\n              {(currentTask.content as any).question}\n            </h3>\n            {isSpanishText((currentTask.content as any).question) && (\n              <AudioButton text={(currentTask.content as any).question} size=\"medium\" />\n            )}\n          </div>\n        )}\n\n        {renderTaskContent()}\n      </div>\n\n      {/* Feedback - compact */}\n      {showFeedback && (\n        <div style={{ marginBottom: '1rem', flexShrink: 0 }}>\n          <FeedbackCard\n            variant={isCorrect ? 'success' : 'error'}\n            title={isCorrect ? 'Richtig!' : 'Nicht ganz richtig'}\n          >\n            {currentTask.content.explanation && (\n              <p style={{ margin: 0 }}>{currentTask.content.explanation}</p>\n            )}\n          </FeedbackCard>\n        </div>\n      )}\n\n      {/* Actions and Statistics - combined footer */}\n      <div style={{ flexShrink: 0, display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n        {/* Action buttons */}\n        <div style={{ display: 'flex', justifyContent: 'center', gap: '1rem' }}>\n          {!showFeedback ? (\n            <>\n              <button\n                onClick={handleAnswerSubmit}\n                disabled={!canSubmit()}\n                style={{\n                  padding: '0.875rem 2rem',\n                  background: canSubmit() ? '#3b82f6' : '#9ca3af',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '8px',\n                  cursor: canSubmit() ? 'pointer' : 'not-allowed',\n                  fontSize: '1rem',\n                  fontWeight: '500',\n                }}\n              >\n                Antwort überprüfen\n              </button>\n              <button\n                onClick={currentTaskIndex < session.execution.taskIds.length - 1 ? handleSkipTask : handleComplete}\n                style={{\n                  padding: '0.875rem 2rem',\n                  background: '#f3f4f6',\n                  color: '#6b7280',\n                  border: '1px solid #d1d5db',\n                  borderRadius: '8px',\n                  cursor: 'pointer',\n                  fontSize: '1rem',\n                  fontWeight: '500',\n                }}\n              >\n                {currentTaskIndex < session.execution.taskIds.length - 1\n                  ? 'Überspringen →'\n                  : 'Sitzung beenden'}\n              </button>\n            </>\n          ) : (\n            <button\n              onClick={handleNextTask}\n              style={{\n                padding: '0.875rem 2rem',\n                background: '#3b82f6',\n                color: 'white',\n                border: 'none',\n                borderRadius: '8px',\n                cursor: 'pointer',\n                fontSize: '1rem',\n                fontWeight: '500',\n              }}\n            >\n              {currentTaskIndex < session.execution.taskIds.length - 1\n                ? 'Nächste Aufgabe →'\n                : 'Sitzung beenden'}\n            </button>\n          )}\n        </div>\n\n        {/* Compact statistics */}\n        <div\n          style={{\n            padding: '0.75rem 1rem',\n            background: '#f9fafb',\n            borderRadius: '6px',\n            display: 'flex',\n            justifyContent: 'space-around',\n            gap: '1rem',\n          }}\n        >\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '1.25rem', fontWeight: 'bold', color: '#3b82f6' }}>\n              {session.execution.completedCount}\n            </div>\n            <div style={{ fontSize: '0.75rem', color: '#6b7280' }}>\n              beantwortet\n            </div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '1.25rem', fontWeight: 'bold', color: '#10b981' }}>\n              {session.execution.correctCount}\n            </div>\n            <div style={{ fontSize: '0.75rem', color: '#6b7280' }}>\n              richtig\n            </div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <div style={{ fontSize: '1.25rem', fontWeight: 'bold', color: '#f59e0b' }}>\n              {session.execution.completedCount > 0\n                ? Math.round((session.execution.correctCount / session.execution.completedCount) * 100)\n                : 0}%\n            </div>\n            <div style={{ fontSize: '0.75rem', color: '#6b7280' }}>\n              genau\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { Card } from './Card';\nimport {\n  typography,\n  semanticColors,\n  spacing,\n  colors,\n} from '@ui/design-tokens';\n\nexport interface StatCardProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * The stat label/title\n   */\n  title: string;\n\n  /**\n   * The main value to display\n   */\n  value: string | number;\n\n  /**\n   * Optional subtitle/context below the value\n   */\n  subtitle?: string;\n\n  /**\n   * Accent color for visual distinction\n   * @default colors.primary[500]\n   */\n  color?: string;\n\n  /**\n   * Optional icon element\n   */\n  icon?: React.ReactNode;\n}\n\n/**\n * StatCard Component\n *\n * A specialized card for displaying statistical information on dashboards.\n * Features a title, prominent value, optional subtitle, and color accent.\n *\n * @example\n * ```tsx\n * <StatCard\n *   title=\"Total Sessions\"\n *   value=\"42\"\n *   subtitle=\"this week\"\n *   color=\"#3b82f6\"\n * />\n *\n * <StatCard\n *   title=\"Accuracy\"\n *   value=\"95%\"\n *   subtitle=\"12/13 correct\"\n *   color=\"#10b981\"\n *   icon={<CheckIcon />}\n * />\n * ```\n */\nexport function StatCard({\n  title,\n  value,\n  subtitle,\n  color = colors.primary[500],\n  icon,\n  className = '',\n  style = {},\n  ...props\n}: StatCardProps) {\n  const containerStyles: React.CSSProperties = {\n    borderLeft: `4px solid ${color}`,\n    ...style,\n  };\n\n  return (\n    <Card\n      {...props}\n      padding=\"medium\"\n      shadow\n      border\n      style={containerStyles}\n      className={className}\n    >\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: spacing[2],\n        }}\n      >\n        {/* Title and Icon Row */}\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n        >\n          <h3\n            style={{\n              margin: 0,\n              fontSize: typography.fontSize.sm,\n              fontWeight: typography.fontWeight.medium,\n              color: semanticColors.text.secondary,\n              textTransform: 'uppercase',\n              letterSpacing: typography.letterSpacing.wide,\n            }}\n          >\n            {title}\n          </h3>\n          {icon && (\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                color: color,\n                fontSize: typography.fontSize.xl,\n              }}\n            >\n              {icon}\n            </div>\n          )}\n        </div>\n\n        {/* Value */}\n        <div\n          style={{\n            fontSize: typography.fontSize['3xl'],\n            fontWeight: typography.fontWeight.bold,\n            color: semanticColors.text.primary,\n            lineHeight: typography.lineHeight.tight,\n          }}\n        >\n          {value}\n        </div>\n\n        {/* Subtitle */}\n        {subtitle && (\n          <div\n            style={{\n              fontSize: typography.fontSize.sm,\n              color: semanticColors.text.tertiary,\n            }}\n          >\n            {subtitle}\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n}\n\n// ============================================================================\n// EXPORTS\n// ============================================================================\n\nexport default StatCard;\n","import React from 'react';\nimport { colors, spacing, typography, transitions, components } from '@ui/design-tokens';\n\nexport type ButtonVariant = 'primary' | 'secondary' | 'ghost' | 'danger';\nexport type ButtonSize = 'small' | 'medium' | 'large';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * Visual style variant of the button\n   * @default 'primary'\n   */\n  variant?: ButtonVariant;\n\n  /**\n   * Size of the button\n   * @default 'medium'\n   */\n  size?: ButtonSize;\n\n  /**\n   * Whether the button is in a loading state\n   * @default false\n   */\n  loading?: boolean;\n\n  /**\n   * Whether the button takes up the full width of its container\n   * @default false\n   */\n  fullWidth?: boolean;\n\n  /**\n   * Optional icon to display before the button text\n   */\n  startIcon?: React.ReactNode;\n\n  /**\n   * Optional icon to display after the button text\n   */\n  endIcon?: React.ReactNode;\n}\n\n/**\n * Button Component\n *\n * A reusable button component with multiple variants, sizes, and states.\n * Built with design tokens for consistency across the application.\n *\n * @example\n * ```tsx\n * <Button variant=\"primary\" onClick={handleClick}>\n *   Click me\n * </Button>\n *\n * <Button variant=\"secondary\" size=\"small\" loading>\n *   Loading...\n * </Button>\n *\n * <Button variant=\"danger\" startIcon={<TrashIcon />}>\n *   Delete\n * </Button>\n * ```\n */\nexport function Button({\n  variant = 'primary',\n  size = 'medium',\n  loading = false,\n  fullWidth = false,\n  disabled = false,\n  startIcon,\n  endIcon,\n  children,\n  className = '',\n  style = {},\n  ...props\n}: ButtonProps) {\n  // Get variant styles\n  const variantStyles = getVariantStyles(variant);\n\n  // Get size styles\n  const sizeStyles = getSizeStyles(size);\n\n  // Combine all styles\n  const buttonStyles: React.CSSProperties = {\n    // Base styles\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: spacing[2],\n    border: 'none',\n    borderRadius: components.button.borderRadius,\n    fontFamily: typography.fontFamily.sans,\n    fontWeight: typography.fontWeight.medium,\n    cursor: disabled || loading ? 'not-allowed' : 'pointer',\n    transition: transitions.presets.colors,\n    textDecoration: 'none',\n    userSelect: 'none',\n    outline: 'none',\n    width: fullWidth ? '100%' : 'auto',\n\n    // Variant styles\n    ...variantStyles,\n\n    // Size styles\n    ...sizeStyles,\n\n    // Opacity for disabled/loading state\n    opacity: disabled || loading ? 0.6 : 1,\n\n    // Custom styles\n    ...style,\n  };\n\n  return (\n    <button\n      {...props}\n      disabled={disabled || loading}\n      style={buttonStyles}\n      className={className}\n      onMouseEnter={(e) => {\n        if (!disabled && !loading) {\n          const hoverStyles = getVariantHoverStyles(variant);\n          Object.assign(e.currentTarget.style, hoverStyles);\n        }\n        props.onMouseEnter?.(e);\n      }}\n      onMouseLeave={(e) => {\n        if (!disabled && !loading) {\n          Object.assign(e.currentTarget.style, variantStyles);\n        }\n        props.onMouseLeave?.(e);\n      }}\n      onFocus={(e) => {\n        if (!disabled && !loading) {\n          e.currentTarget.style.outline = `2px solid ${colors.primary[300]}`;\n          e.currentTarget.style.outlineOffset = '2px';\n        }\n        props.onFocus?.(e);\n      }}\n      onBlur={(e) => {\n        e.currentTarget.style.outline = 'none';\n        props.onBlur?.(e);\n      }}\n    >\n      {loading ? (\n        <>\n          <LoadingSpinner size={size} />\n          {children}\n        </>\n      ) : (\n        <>\n          {startIcon && <span style={{ display: 'flex', alignItems: 'center' }}>{startIcon}</span>}\n          {children}\n          {endIcon && <span style={{ display: 'flex', alignItems: 'center' }}>{endIcon}</span>}\n        </>\n      )}\n    </button>\n  );\n}\n\n// ============================================================================\n// VARIANT STYLES\n// ============================================================================\n\nfunction getVariantStyles(variant: ButtonVariant): React.CSSProperties {\n  const baseStyles: React.CSSProperties = {\n    border: '2px solid transparent',\n  };\n\n  switch (variant) {\n    case 'primary':\n      return {\n        ...baseStyles,\n        backgroundColor: colors.primary[500],\n        color: colors.neutral[0],\n      };\n\n    case 'secondary':\n      return {\n        ...baseStyles,\n        backgroundColor: colors.neutral[200],\n        color: colors.neutral[700],\n      };\n\n    case 'ghost':\n      return {\n        ...baseStyles,\n        backgroundColor: 'transparent',\n        color: colors.neutral[700],\n        border: `2px solid ${colors.neutral[300]}`,\n      };\n\n    case 'danger':\n      return {\n        ...baseStyles,\n        backgroundColor: colors.error[500],\n        color: colors.neutral[0],\n      };\n\n    default:\n      return baseStyles;\n  }\n}\n\nfunction getVariantHoverStyles(variant: ButtonVariant): React.CSSProperties {\n  switch (variant) {\n    case 'primary':\n      return {\n        backgroundColor: colors.primary[600],\n      };\n\n    case 'secondary':\n      return {\n        backgroundColor: colors.neutral[300],\n      };\n\n    case 'ghost':\n      return {\n        backgroundColor: colors.neutral[50],\n        borderColor: colors.neutral[400],\n      };\n\n    case 'danger':\n      return {\n        backgroundColor: colors.error[600],\n      };\n\n    default:\n      return {};\n  }\n}\n\n// ============================================================================\n// SIZE STYLES\n// ============================================================================\n\nfunction getSizeStyles(size: ButtonSize): React.CSSProperties {\n  switch (size) {\n    case 'small':\n      return {\n        height: components.button.height.sm,\n        padding: components.button.padding.sm,\n        fontSize: components.button.fontSize.sm,\n      };\n\n    case 'medium':\n      return {\n        height: components.button.height.md,\n        padding: components.button.padding.md,\n        fontSize: components.button.fontSize.md,\n      };\n\n    case 'large':\n      return {\n        height: components.button.height.lg,\n        padding: components.button.padding.lg,\n        fontSize: components.button.fontSize.lg,\n      };\n\n    default:\n      return {};\n  }\n}\n\n// ============================================================================\n// LOADING SPINNER\n// ============================================================================\n\ninterface LoadingSpinnerProps {\n  size: ButtonSize;\n}\n\nfunction LoadingSpinner({ size }: LoadingSpinnerProps) {\n  const spinnerSize = size === 'small' ? '12px' : size === 'large' ? '18px' : '16px';\n\n  return (\n    <svg\n      width={spinnerSize}\n      height={spinnerSize}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={{\n        animation: 'spin 1s linear infinite',\n      }}\n    >\n      <style>{`\n        @keyframes spin {\n          from { transform: rotate(0deg); }\n          to { transform: rotate(360deg); }\n        }\n      `}</style>\n      <circle\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeDasharray=\"31.4 31.4\"\n        opacity=\"0.25\"\n      />\n      <path\n        d=\"M12 2a10 10 0 0 1 10 10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n      />\n    </svg>\n  );\n}\n\n// ============================================================================\n// EXPORTS\n// ============================================================================\n\nexport default Button;\n","import type { PracticeSession } from '@core/types/services';\nimport { StatCard } from './common/StatCard';\nimport { Button } from './common/Button';\nimport { Card } from './common/Card';\nimport { FeedbackCard } from './common/FeedbackCard';\nimport { semanticColors, spacing, typography, colors } from '@ui/design-tokens';\n\ninterface Props {\n  session: PracticeSession;\n  onClose: () => void;\n  onStartNew: () => void;\n}\n\nexport function SessionResults({ session, onClose, onStartNew }: Props) {\n  const accuracy = session.results.accuracy;\n  const averageTime = Math.round(session.results.averageTime);\n\n  // Calculate performance rating\n  let performanceRating = '';\n  let performanceColor = '';\n  if (accuracy >= 90) {\n    performanceRating = 'Ausgezeichnet!';\n    performanceColor = colors.success[500];\n  } else if (accuracy >= 75) {\n    performanceRating = 'Sehr gut!';\n    performanceColor = colors.primary[500];\n  } else if (accuracy >= 60) {\n    performanceRating = 'Gut gemacht!';\n    performanceColor = colors.warning[500];\n  } else {\n    performanceRating = 'Weiter üben!';\n    performanceColor = colors.error[500];\n  }\n\n  // Format time\n  function formatTime(seconds: number): string {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    if (mins > 0) {\n      return `${mins}:${secs.toString().padStart(2, '0')} min`;\n    }\n    return `${secs} sek`;\n  }\n\n  return (\n    <div\n      style={{\n        padding: spacing[8],\n        maxWidth: '600px',\n        margin: '0 auto',\n        textAlign: 'center',\n      }}\n    >\n      {/* Header */}\n      <div style={{ marginBottom: spacing[8] }}>\n        <div style={{ fontSize: '4rem', marginBottom: spacing[4] }}>🎉</div>\n        <h1 style={{ marginBottom: spacing[2] }}>Sitzung abgeschlossen!</h1>\n        <p\n          style={{\n            fontSize: typography.fontSize['2xl'],\n            fontWeight: typography.fontWeight.bold,\n            color: performanceColor,\n            margin: 0,\n          }}\n        >\n          {performanceRating}\n        </p>\n      </div>\n\n      {/* Statistics Cards */}\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(2, 1fr)',\n          gap: spacing[4],\n          marginBottom: spacing[8],\n        }}\n      >\n        <StatCard\n          title=\"Aufgaben bearbeitet\"\n          value={session.execution.completedCount}\n          color={colors.primary[500]}\n        />\n\n        <StatCard\n          title=\"Richtige Antworten\"\n          value={session.execution.correctCount}\n          color={colors.success[500]}\n        />\n\n        <StatCard\n          title=\"Genauigkeit\"\n          value={`${Math.round(accuracy)}%`}\n          color={performanceColor}\n        />\n\n        <StatCard\n          title=\"Ø Zeit pro Aufgabe\"\n          value={formatTime(averageTime)}\n          color={colors.warning[500]}\n        />\n      </div>\n\n      {/* Total Time */}\n      <Card\n        padding=\"medium\"\n        style={{\n          backgroundColor: colors.primary[100],\n          marginBottom: spacing[8],\n        }}\n      >\n        <p style={{ margin: 0, fontSize: typography.fontSize.base }}>\n          <strong>Gesamtzeit:</strong> {formatTime(session.execution.totalTimeSpent)}\n        </p>\n      </Card>\n\n      {/* Progress Message */}\n      <Card padding=\"large\" style={{ marginBottom: spacing[8] }}>\n        <h3 style={{ marginBottom: spacing[2] }}>📈 Dein Fortschritt</h3>\n        <p\n          style={{\n            margin: 0,\n            fontSize: typography.fontSize.base,\n            color: semanticColors.text.secondary,\n            lineHeight: typography.lineHeight.relaxed,\n          }}\n        >\n          {accuracy >= 90 && 'Hervorragende Leistung! Du beherrschst dieses Thema sehr gut.'}\n          {accuracy >= 75 && accuracy < 90 && 'Sehr gute Arbeit! Du machst große Fortschritte.'}\n          {accuracy >= 60 && accuracy < 75 && 'Gute Arbeit! Weiter so, du verbesserst dich stetig.'}\n          {accuracy < 60 &&\n            'Bleib dran! Übung macht den Meister. Die nächste Sitzung wird noch besser!'}\n        </p>\n      </Card>\n\n      {/* Spaced Repetition Info */}\n      <FeedbackCard variant=\"success\" style={{ marginBottom: spacing[8] }}>\n        <h4 style={{ marginBottom: spacing[2] }}>🧠 Spaced Repetition aktiviert</h4>\n        <p\n          style={{\n            margin: 0,\n            fontSize: typography.fontSize.sm,\n            lineHeight: typography.lineHeight.normal,\n          }}\n        >\n          Deine Antworten wurden gespeichert. Aufgaben, die du nicht sofort beherrscht hast, werden\n          dir in optimalen Abständen wieder vorgelegt, um dein Langzeitgedächtnis zu trainieren.\n        </p>\n      </FeedbackCard>\n\n      {/* Actions */}\n      <div style={{ display: 'flex', gap: spacing[4], justifyContent: 'center' }}>\n        <Button onClick={onStartNew} variant=\"primary\">\n          Neue Sitzung starten\n        </Button>\n        <Button onClick={onClose} variant=\"secondary\">\n          Zurück zur Übersicht\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import {\n  spacing,\n  typography,\n  semanticColors,\n  borderRadius,\n  transitions,\n} from '@ui/design-tokens';\n\nexport interface MasteryBarProps {\n  /**\n   * Label displayed above the progress bar\n   */\n  label: string;\n\n  /**\n   * Count value displayed\n   */\n  count: number;\n\n  /**\n   * Color of the progress bar\n   */\n  color: string;\n\n  /**\n   * Maximum count for calculating percentage\n   * If not provided, bar shows as full when count > 0\n   */\n  max?: number;\n}\n\n/**\n * Mastery Bar Component\n *\n * Displays a labeled progress indicator for mastery levels.\n * Used in the dashboard to show progress across different mastery categories.\n *\n * @example\n * ```tsx\n * <MasteryBar\n *   label=\"Gemeistert\"\n *   count={12}\n *   max={50}\n *   color={colors.success[500]}\n * />\n * ```\n */\nexport function MasteryBar({ label, count, color, max }: MasteryBarProps) {\n  const percentage = max && max > 0 ? (count / max) * 100 : count > 0 ? 100 : 0;\n\n  return (\n    <div style={{ flex: 1 }}>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginBottom: spacing[2],\n        }}\n      >\n        <span\n          style={{\n            fontSize: typography.fontSize.sm,\n            fontWeight: typography.fontWeight.medium,\n          }}\n        >\n          {label}\n        </span>\n        <span\n          style={{\n            fontSize: typography.fontSize.sm,\n            color: semanticColors.text.secondary,\n          }}\n        >\n          {count}\n        </span>\n      </div>\n      <div\n        style={{\n          background: semanticColors.background.tertiary,\n          height: '8px',\n          borderRadius: borderRadius.md,\n          overflow: 'hidden',\n        }}\n      >\n        <div\n          style={{\n            background: color,\n            height: '100%',\n            width: `${percentage}%`,\n            transition: transitions.presets.base,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MasteryBar;\n","import { useEffect, useState } from 'react';\nimport { db } from '@storage/database';\nimport type { PracticeSession } from '@core/types/services';\nimport { StatCard } from './common/StatCard';\nimport { Card } from './common/Card';\nimport { Button } from './common/Button';\nimport { MasteryBar } from './common/MasteryBar';\nimport {\n  semanticColors,\n  spacing,\n  typography,\n  colors,\n  borderRadius,\n  transitions,\n} from '@ui/design-tokens';\n\ninterface DashboardStats {\n  totalSessions: number;\n  completedSessions: number;\n  totalQuestions: number;\n  correctAnswers: number;\n  accuracyRate: number;\n  averageSessionTime: number;\n  currentStreak: number;\n  totalStudyTime: number;\n  topicProgress: Array<{\n    topicId: string;\n    topicName: string;\n    sessionsCompleted: number;\n    accuracy: number;\n    tasksReviewed: number;\n  }>;\n  recentSessions: PracticeSession[];\n  upcomingReviews: number;\n  masteryLevels: {\n    mastered: number;\n    learning: number;\n    new: number;\n  };\n}\n\ninterface DashboardProps {\n  onClose: () => void;\n}\n\nexport function Dashboard({ onClose }: DashboardProps) {\n  const [stats, setStats] = useState<DashboardStats | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadDashboardStats();\n  }, []);\n\n  async function loadDashboardStats() {\n    try {\n      // Load all sessions\n      const allSessions = await db.practiceSessions.toArray();\n      const completedSessions = allSessions.filter((s) => s.execution.status === 'completed');\n\n      // Load topics for names\n      const topics = await db.topics.toArray();\n      const topicMap = new Map(topics.map((t) => [t.id, t]));\n\n      // Load spaced repetition items for mastery levels\n      const srItems = await db.spacedRepetition.toArray();\n\n      // Calculate overall stats\n      const totalQuestions = completedSessions.reduce(\n        (sum, s) => sum + (s.execution?.completedCount || 0),\n        0\n      );\n      const correctAnswers = completedSessions.reduce(\n        (sum, s) => sum + (s.execution?.correctCount || 0),\n        0\n      );\n      const accuracyRate = totalQuestions > 0 ? (correctAnswers / totalQuestions) * 100 : 0;\n\n      const totalStudyTime = completedSessions.reduce((sum, s) => {\n        if (s.execution.startedAt && s.execution.completedAt) {\n          return (\n            sum +\n            (new Date(s.execution.completedAt).getTime() -\n              new Date(s.execution.startedAt).getTime()) /\n              1000\n          );\n        }\n        return sum;\n      }, 0);\n\n      const averageSessionTime =\n        completedSessions.length > 0 ? totalStudyTime / completedSessions.length : 0;\n\n      // Calculate topic progress\n      const topicStatsMap = new Map<\n        string,\n        { sessions: number; correct: number; total: number }\n      >();\n\n      for (const session of completedSessions) {\n        const topicId = session.configuration.topicId;\n        if (!topicStatsMap.has(topicId)) {\n          topicStatsMap.set(topicId, { sessions: 0, correct: 0, total: 0 });\n        }\n        const topicStats = topicStatsMap.get(topicId)!;\n        topicStats.sessions++;\n        topicStats.correct += session.execution?.correctCount || 0;\n        topicStats.total += session.execution?.completedCount || 0;\n      }\n\n      const topicProgress = Array.from(topicStatsMap.entries()).map(\n        ([topicId, data]) => ({\n          topicId,\n          topicName: topicMap.get(topicId)?.title || topicId,\n          sessionsCompleted: data.sessions,\n          accuracy: data.total > 0 ? (data.correct / data.total) * 100 : 0,\n          tasksReviewed: data.total,\n        })\n      );\n\n      // Calculate mastery levels\n      const now = new Date();\n      const mastered = srItems.filter((item) => item.algorithm.efactor >= 2.5).length;\n      const learning = srItems.filter(\n        (item) => item.algorithm.efactor < 2.5 && item.algorithm.repetition > 0\n      ).length;\n      const newItems = srItems.filter((item) => item.algorithm.repetition === 0).length;\n\n      // Upcoming reviews\n      const upcomingReviews = srItems.filter(\n        (item) => new Date(item.schedule.nextReview) <= now\n      ).length;\n\n      // Recent sessions (last 5)\n      const recentSessions = completedSessions\n        .sort((a, b) => {\n          const aTime = a.execution.completedAt\n            ? new Date(a.execution.completedAt).getTime()\n            : 0;\n          const bTime = b.execution.completedAt\n            ? new Date(b.execution.completedAt).getTime()\n            : 0;\n          return bTime - aTime;\n        })\n        .slice(0, 5);\n\n      setStats({\n        totalSessions: allSessions.length,\n        completedSessions: completedSessions.length,\n        totalQuestions,\n        correctAnswers,\n        accuracyRate,\n        averageSessionTime,\n        currentStreak: 0, // TODO: Calculate from session dates\n        totalStudyTime,\n        topicProgress,\n        recentSessions,\n        upcomingReviews,\n        masteryLevels: {\n          mastered,\n          learning,\n          new: newItems,\n        },\n      });\n    } catch (error) {\n      console.error('Failed to load dashboard stats:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function formatTime(seconds: number): string {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    }\n    return `${minutes}m`;\n  }\n\n  function formatDate(date: Date | string): string {\n    const d = typeof date === 'string' ? new Date(date) : date;\n    return d.toLocaleDateString('de-DE', { day: '2-digit', month: '2-digit', year: 'numeric' });\n  }\n\n  if (isLoading) {\n    return (\n      <div\n        style={{\n          padding: spacing[8],\n          fontFamily: typography.fontFamily.sans,\n          textAlign: 'center',\n        }}\n      >\n        <h1>📊 Dashboard</h1>\n        <p>Lade Statistiken...</p>\n      </div>\n    );\n  }\n\n  if (!stats) {\n    return (\n      <div\n        style={{\n          padding: spacing[8],\n          fontFamily: typography.fontFamily.sans,\n        }}\n      >\n        <Button variant=\"secondary\" onClick={onClose} style={{ marginBottom: spacing[4] }}>\n          ← Zurück\n        </Button>\n        <h1>📊 Dashboard</h1>\n        <p>Keine Daten verfügbar.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        padding: spacing[8],\n        fontFamily: typography.fontFamily.sans,\n        maxWidth: '1200px',\n        margin: '0 auto',\n      }}\n    >\n      {/* Header */}\n      <div style={{ marginBottom: spacing[8] }}>\n        <Button variant=\"secondary\" onClick={onClose} style={{ marginBottom: spacing[4] }}>\n          ← Zurück\n        </Button>\n        <h1 style={{ margin: 0 }}>📊 Lern-Dashboard</h1>\n        <p\n          style={{\n            color: semanticColors.text.secondary,\n            marginTop: spacing[2],\n          }}\n        >\n          Deine Fortschritte und Statistiken im Überblick\n        </p>\n      </div>\n\n      {/* Key Metrics */}\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n          gap: spacing[4],\n          marginBottom: spacing[8],\n        }}\n      >\n        <StatCard\n          title=\"Gesamt Sitzungen\"\n          value={stats.completedSessions.toString()}\n          subtitle={`von ${stats.totalSessions} gestartet`}\n          color={colors.primary[500]}\n        />\n        <StatCard\n          title=\"Genauigkeit\"\n          value={`${Math.round(stats.accuracyRate)}%`}\n          subtitle={`${stats.correctAnswers}/${stats.totalQuestions} richtig`}\n          color={colors.success[500]}\n        />\n        <StatCard\n          title=\"Lernzeit\"\n          value={formatTime(stats.totalStudyTime)}\n          subtitle={`Ø ${formatTime(stats.averageSessionTime)} pro Sitzung`}\n          color={colors.warning[500]}\n        />\n        <StatCard\n          title=\"Anstehende Wiederholungen\"\n          value={stats.upcomingReviews.toString()}\n          subtitle=\"bereit zum Üben\"\n          color={colors.info[500]}\n        />\n      </div>\n\n      {/* Mastery Levels */}\n      <Card padding=\"medium\" style={{ marginBottom: spacing[8] }}>\n        <h2 style={{ marginTop: 0 }}>🎯 Beherrschungsniveau</h2>\n        <div style={{ display: 'flex', gap: spacing[4], marginTop: spacing[4] }}>\n          <MasteryBar\n            label=\"Gemeistert\"\n            count={stats.masteryLevels.mastered}\n            color={colors.success[500]}\n          />\n          <MasteryBar\n            label=\"In Arbeit\"\n            count={stats.masteryLevels.learning}\n            color={colors.warning[500]}\n          />\n          <MasteryBar label=\"Neu\" count={stats.masteryLevels.new} color={colors.primary[500]} />\n        </div>\n      </Card>\n\n      {/* Topic Progress */}\n      {stats.topicProgress.length > 0 && (\n        <Card padding=\"medium\" style={{ marginBottom: spacing[8] }}>\n          <h2 style={{ marginTop: 0 }}>📚 Fortschritt nach Thema</h2>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              gap: spacing[4],\n              marginTop: spacing[4],\n            }}\n          >\n            {stats.topicProgress.map((topic) => (\n              <div key={topic.topicId}>\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    marginBottom: spacing[2],\n                  }}\n                >\n                  <span style={{ fontWeight: typography.fontWeight.medium }}>\n                    {topic.topicName}\n                  </span>\n                  <span\n                    style={{\n                      color: semanticColors.text.secondary,\n                      fontSize: typography.fontSize.sm,\n                    }}\n                  >\n                    {topic.sessionsCompleted} Sitzungen • {Math.round(topic.accuracy)}% genau\n                  </span>\n                </div>\n                <div\n                  style={{\n                    background: semanticColors.background.tertiary,\n                    height: '8px',\n                    borderRadius: borderRadius.md,\n                    overflow: 'hidden',\n                  }}\n                >\n                  <div\n                    style={{\n                      background:\n                        topic.accuracy >= 75\n                          ? colors.success[500]\n                          : topic.accuracy >= 50\n                          ? colors.warning[500]\n                          : colors.error[500],\n                      height: '100%',\n                      width: `${topic.accuracy}%`,\n                      transition: transitions.presets.base,\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    fontSize: typography.fontSize.xs,\n                    color: semanticColors.text.secondary,\n                    marginTop: spacing[1],\n                  }}\n                >\n                  {topic.tasksReviewed} Aufgaben bearbeitet\n                </div>\n              </div>\n            ))}\n          </div>\n        </Card>\n      )}\n\n      {/* Recent Sessions */}\n      {stats.recentSessions.length > 0 && (\n        <Card padding=\"medium\">\n          <h2 style={{ marginTop: 0 }}>🕐 Letzte Sitzungen</h2>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              gap: spacing[3],\n              marginTop: spacing[4],\n            }}\n          >\n            {stats.recentSessions.map((session) => (\n              <div\n                key={session.id}\n                style={{\n                  padding: spacing[4],\n                  background: semanticColors.background.secondary,\n                  borderRadius: borderRadius.md,\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                }}\n              >\n                <div>\n                  <div style={{ fontWeight: typography.fontWeight.medium }}>\n                    {session.configuration.topicId}\n                  </div>\n                  <div\n                    style={{\n                      fontSize: typography.fontSize.sm,\n                      color: semanticColors.text.secondary,\n                    }}\n                  >\n                    {session.execution.completedAt && formatDate(session.execution.completedAt)}\n                  </div>\n                </div>\n                <div style={{ textAlign: 'right' }}>\n                  <div\n                    style={{\n                      fontWeight: typography.fontWeight.medium,\n                      color:\n                        session.results.accuracy >= 75\n                          ? colors.success[500]\n                          : colors.warning[500],\n                    }}\n                  >\n                    {Math.round(session.results.accuracy)}%\n                  </div>\n                  <div\n                    style={{\n                      fontSize: typography.fontSize.sm,\n                      color: semanticColors.text.secondary,\n                    }}\n                  >\n                    {session.execution.correctCount}/{session.execution.completedCount}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n}","import React, { useEffect, useState, useRef } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { db } from './modules/storage/database';\nimport { seedDatabase } from './modules/storage/seed-data';\nimport type { Topic, LearningPath, PracticeSession as IPracticeSession } from './modules/core/types/services';\nimport { PracticeSession } from './modules/ui/components/practice-session';\nimport { SessionResults } from './modules/ui/components/session-results';\nimport { Dashboard } from './modules/ui/components/dashboard';\nimport './index.css';\n\n/**\n * German Learning Platform with Spaced Repetition\n */\n\nfunction App() {\n  const [topics, setTopics] = useState<Topic[]>([]);\n  const [selectedTopic, setSelectedTopic] = useState<Topic | null>(null);\n  const [learningPaths, setLearningPaths] = useState<LearningPath[]>([]);\n  const [learningPathTaskCounts, setLearningPathTaskCounts] = useState<Record<string, number>>({});\n  const [selectedLearningPath, setSelectedLearningPath] = useState<LearningPath | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [inSession, setInSession] = useState(false);\n  const [completedSession, setCompletedSession] = useState<IPracticeSession | null>(null);\n  const [showDashboard, setShowDashboard] = useState(false);\n  const [showSessionConfig, setShowSessionConfig] = useState(false);\n  const [sessionConfig, setSessionConfig] = useState({ targetCount: 10, includeReview: true });\n  const initStarted = useRef(false);\n\n  useEffect(() => {\n    if (!initStarted.current) {\n      initStarted.current = true;\n      initializeApp();\n    }\n  }, []);\n\n  async function initializeApp() {\n    try {\n      // Check if database has data\n      const topicCount = await db.topics.count();\n      const taskCount = await db.tasks.count();\n\n      console.log(`Database status: ${topicCount} topics, ${taskCount} tasks`);\n\n      if (topicCount === 0 || taskCount === 0) {\n        console.log('Database empty or incomplete, seeding...');\n        await seedDatabase(db);\n      } else {\n        console.log('Database already seeded, skipping seed');\n      }\n\n      // Load topics\n      const loadedTopics = await db.topics.toArray();\n      setTopics(loadedTopics);\n      setIsLoading(false);\n    } catch (error: any) {\n      console.error('Failed to initialize app:', error);\n      console.error('Error details:', {\n        name: error?.name,\n        message: error?.message,\n        failures: error?.failures,\n        stack: error?.stack,\n      });\n      setIsLoading(false);\n    }\n  }\n\n  async function selectTopic(topic: Topic) {\n    setSelectedTopic(topic);\n    const paths = await db.learningPaths.where('topicId').equals(topic.id).toArray();\n    console.log(`Loading learning paths for topic ${topic.id}:`, paths);\n\n    // Sort by createdAt (latest first)\n    paths.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n\n    // Get actual task counts from database\n    const taskCounts: Record<string, number> = {};\n    for (const path of paths) {\n      const tasks = await db.tasks.where('learningPathId').equals(path.id).toArray();\n      taskCounts[path.id] = tasks.length;\n      console.log(`Learning path \"${path.title}\" (${path.id}): ${tasks.length} tasks in DB, taskIds array length: ${path.taskIds?.length || 0}`);\n      console.log('Task IDs:', tasks.map(t => t.id));\n    }\n\n    setLearningPathTaskCounts(taskCounts);\n    setLearningPaths(paths);\n  }\n\n  function showConfigScreen(learningPath: LearningPath) {\n    setSelectedLearningPath(learningPath);\n    setShowSessionConfig(true);\n  }\n\n  function startPracticeSession() {\n    setShowSessionConfig(false);\n    setInSession(true);\n  }\n\n  function cancelSessionConfig() {\n    setShowSessionConfig(false);\n    setSelectedLearningPath(null);\n  }\n\n  async function handleSessionComplete() {\n    setInSession(false);\n    if (selectedLearningPath && selectedTopic) {\n      // Get the completed session\n      const sessions = await db.practiceSessions\n        .where('execution.status')\n        .equals('completed')\n        .reverse()\n        .limit(1)\n        .toArray();\n\n      if (sessions.length > 0 && sessions[0]) {\n        setCompletedSession(sessions[0]);\n      }\n    }\n  }\n\n  function handleSessionCancel() {\n    setInSession(false);\n    setSelectedLearningPath(null);\n  }\n\n  function handleCloseResults() {\n    setCompletedSession(null);\n  }\n\n  function handleStartNewSession() {\n    setCompletedSession(null);\n    if (selectedLearningPath) {\n      setInSession(true);\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <div style={{ padding: '2rem', fontFamily: 'system-ui, sans-serif', textAlign: 'center' }}>\n        <h1>🧠 MindForge Academy</h1>\n        <p>Wird geladen...</p>\n      </div>\n    );\n  }\n\n  // Show dashboard\n  if (showDashboard) {\n    return (\n      <div style={{ fontFamily: 'system-ui, sans-serif' }}>\n        <Dashboard onClose={() => setShowDashboard(false)} />\n      </div>\n    );\n  }\n\n  // Show session results\n  if (completedSession) {\n    return (\n      <div style={{ fontFamily: 'system-ui, sans-serif' }}>\n        <SessionResults\n          session={completedSession}\n          onClose={handleCloseResults}\n          onStartNew={handleStartNewSession}\n        />\n      </div>\n    );\n  }\n\n  // Show session configuration\n  if (showSessionConfig && selectedLearningPath && selectedTopic) {\n    return (\n      <div style={{ padding: '2rem', fontFamily: 'system-ui, sans-serif', maxWidth: '600px', margin: '0 auto' }}>\n        <button\n          onClick={cancelSessionConfig}\n          style={{\n            padding: '0.5rem 1rem',\n            background: '#e5e7eb',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            marginBottom: '1rem',\n          }}\n        >\n          ← Zurück\n        </button>\n\n        <h1 style={{ marginBottom: '0.5rem' }}>Sitzung konfigurieren</h1>\n        <p style={{ color: '#6b7280', marginBottom: '2rem' }}>\n          {selectedLearningPath.title}\n        </p>\n\n        <div style={{ marginBottom: '2rem' }}>\n          <label style={{ display: 'block', fontWeight: '500', marginBottom: '0.5rem' }}>\n            Anzahl der Fragen\n          </label>\n          <div style={{ display: 'flex', gap: '0.5rem', flexWrap: 'wrap' }}>\n            {[5, 10, 15, 20].map((count) => (\n              <button\n                key={count}\n                onClick={() => setSessionConfig({ ...sessionConfig, targetCount: count })}\n                style={{\n                  padding: '0.75rem 1.5rem',\n                  background: sessionConfig.targetCount === count ? '#3b82f6' : '#f3f4f6',\n                  color: sessionConfig.targetCount === count ? 'white' : '#374151',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '1rem',\n                  fontWeight: '500',\n                }}\n              >\n                {count}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div style={{ marginBottom: '2rem' }}>\n          <label style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\n            <input\n              type=\"checkbox\"\n              checked={sessionConfig.includeReview}\n              onChange={(e) => setSessionConfig({ ...sessionConfig, includeReview: e.target.checked })}\n              style={{ marginRight: '0.5rem', width: '1.25rem', height: '1.25rem', cursor: 'pointer' }}\n            />\n            <span>Wiederholungsfragen einbeziehen</span>\n          </label>\n          <p style={{ fontSize: '0.875rem', color: '#6b7280', marginTop: '0.5rem', marginLeft: '1.75rem' }}>\n            Fragen, die du bereits beantwortet hast und die zur Wiederholung fällig sind\n          </p>\n        </div>\n\n        <button\n          onClick={startPracticeSession}\n          style={{\n            padding: '1rem 2rem',\n            background: '#3b82f6',\n            color: 'white',\n            border: 'none',\n            borderRadius: '8px',\n            cursor: 'pointer',\n            fontSize: '1.1rem',\n            fontWeight: '500',\n            width: '100%',\n          }}\n        >\n          Sitzung starten →\n        </button>\n      </div>\n    );\n  }\n\n  // Show practice session\n  if (inSession && selectedLearningPath && selectedTopic) {\n    return (\n      <div style={{ fontFamily: 'system-ui, sans-serif' }}>\n        <PracticeSession\n          topicId={selectedTopic.id}\n          learningPathIds={[selectedLearningPath.id]}\n          targetCount={sessionConfig.targetCount}\n          includeReview={sessionConfig.includeReview}\n          onComplete={handleSessionComplete}\n          onCancel={handleSessionCancel}\n        />\n      </div>\n    );\n  }\n\n  if (selectedTopic) {\n    return (\n      <div style={{ padding: '2rem', fontFamily: 'system-ui, sans-serif' }}>\n        <button\n          onClick={() => setSelectedTopic(null)}\n          style={{\n            padding: '0.5rem 1rem',\n            background: '#e5e7eb',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            marginBottom: '1rem',\n          }}\n        >\n          ← Zurück zu Themen\n        </button>\n\n        <h1>📚 {selectedTopic.title}</h1>\n\n        <h2 style={{ marginTop: '2rem', marginBottom: '1rem' }}>Lernpfade</h2>\n        <div\n          style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\n            gap: '1rem',\n          }}\n        >\n          {learningPaths.map((path) => (\n            <div\n              key={path.id}\n              style={{\n                padding: '1.5rem',\n                background: '#ffffff',\n                border: '2px solid #e5e7eb',\n                borderRadius: '8px',\n                cursor: 'pointer',\n                transition: 'all 0.2s',\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.borderColor = '#3b82f6';\n                e.currentTarget.style.transform = 'translateY(-2px)';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.borderColor = '#e5e7eb';\n                e.currentTarget.style.transform = 'translateY(0)';\n              }}\n            >\n              <h3 style={{ marginBottom: '0.5rem' }}>{path.title}</h3>\n              <p style={{ fontSize: '0.9rem', color: '#6b7280', marginBottom: '1rem' }}>\n                {path.description}\n              </p>\n              <div style={{ fontSize: '0.85rem', color: '#9ca3af' }}>\n                <span style={{ marginRight: '1rem' }}>\n                  {path.difficulty === 'easy'\n                    ? '🟢 Leicht'\n                    : path.difficulty === 'medium'\n                    ? '🟡 Mittel'\n                    : '🔴 Schwer'}\n                </span>\n                <span>{learningPathTaskCounts[path.id] || path.taskIds?.length || 0} Aufgaben</span>\n              </div>\n              <button\n                onClick={() => showConfigScreen(path)}\n                style={{\n                  marginTop: '1rem',\n                  padding: '0.5rem 1rem',\n                  background: '#3b82f6',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  width: '100%',\n                }}\n              >\n                Lernpfad starten →\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  async function handleReseed() {\n    if (confirm('Datenbank neu laden? Dies wird alle Lernpfade aktualisieren, aber dein Fortschritt bleibt erhalten.')) {\n      try {\n        // Clear only topics, learning paths, and tasks - keep user progress\n        await db.topics.clear();\n        await db.learningPaths.clear();\n        await db.tasks.clear();\n\n        // Reseed\n        await seedDatabase(db);\n\n        // Reload topics\n        const loadedTopics = await db.topics.toArray();\n        setTopics(loadedTopics);\n\n        alert('✅ Datenbank erfolgreich aktualisiert!');\n      } catch (error) {\n        console.error('Reseed failed:', error);\n        alert('❌ Fehler beim Aktualisieren der Datenbank');\n      }\n    }\n  }\n\n  return (\n    <div style={{ padding: '2rem', fontFamily: 'system-ui, sans-serif' }}>\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '2rem' }}>\n        <div>\n          <h1>🧠 MindForge Academy</h1>\n          <p style={{ fontSize: '1.1rem', color: '#6b7280', marginTop: '0.5rem' }}>\n            Erweitere dein Wissen, eine Frage nach der anderen\n          </p>\n        </div>\n        <div style={{ display: 'flex', gap: '0.5rem' }}>\n          <button\n            onClick={handleReseed}\n            style={{\n              padding: '0.75rem 1.5rem',\n              background: '#f59e0b',\n              color: 'white',\n              border: 'none',\n              borderRadius: '6px',\n              cursor: 'pointer',\n              fontSize: '1rem',\n              fontWeight: '500',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n            }}\n          >\n            🔄 DB Aktualisieren\n          </button>\n          <button\n            onClick={() => setShowDashboard(true)}\n            style={{\n              padding: '0.75rem 1.5rem',\n              background: '#3b82f6',\n              color: 'white',\n              border: 'none',\n              borderRadius: '6px',\n              cursor: 'pointer',\n              fontSize: '1rem',\n              fontWeight: '500',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n            }}\n          >\n            📊 Dashboard\n          </button>\n        </div>\n      </div>\n\n      <h2 style={{ marginTop: 0, marginBottom: '1rem' }}>Themen auswählen</h2>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n          gap: '1.5rem',\n        }}\n      >\n        {topics.map((topic) => (\n          <div\n            key={topic.id}\n            onClick={() => selectTopic(topic)}\n            style={{\n              padding: '2rem',\n              background: topic.id === 'test' ? '#fef3c7' : topic.id === 'mathematik' ? '#dbeafe' : '#dcfce7',\n              borderRadius: '12px',\n              cursor: 'pointer',\n              transition: 'transform 0.2s, box-shadow 0.2s',\n              border: '2px solid transparent',\n            }}\n            onMouseEnter={(e) => {\n              e.currentTarget.style.transform = 'translateY(-4px)';\n              e.currentTarget.style.boxShadow = '0 10px 25px rgba(0,0,0,0.1)';\n              e.currentTarget.style.borderColor = '#3b82f6';\n            }}\n            onMouseLeave={(e) => {\n              e.currentTarget.style.transform = 'translateY(0)';\n              e.currentTarget.style.boxShadow = 'none';\n              e.currentTarget.style.borderColor = 'transparent';\n            }}\n          >\n            <h2 style={{ marginBottom: '0.5rem' }}>\n              {topic.id === 'test' ? '🎯' : topic.id === 'mathematik' ? '🔢' : '🧬'} {topic.title}\n            </h2>\n            <div style={{ fontSize: '0.85rem', opacity: 0.7 }}>\n              {topic.learningPathIds.length} Lernpfade\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","LearningPlatformDB","Dexie","db","loadLearningPathsFromJSON","topics","learningPaths","tasks","learningPathFiles","topicId","files","topic","createTopicFromId","filename","path","response","data","taskIds","task","learningPath","taskData","error","config","seedDatabase","beforeTopics","beforePaths","beforeTasks","afterClear","t","lp","err","putErr","savedTopics","savedPaths","savedTasks","LearningPlatformError","message","code","context","ValidationError","NotFoundError","resource","id","PracticeSessionEntity","validStatuses","learningPathIds","configuration","isCorrect","timeSpent","result","PracticeSessionService","sessionRepository","taskRepository","spacedRepRepository","sessionId","sessionConfig","sessionEntity","updates","session","userId","limit","selectedTaskIds","remainingCount","dueItems","reviewTaskIds","item","filters","newTasks","SpacedRepetitionItemEntity","taskId","grade","efactorChange","correct","totalReviews","newSum","diff","SpacedRepetitionService","_userId","count","selectedItems","_isCorrect","srItem","newItem","srEntity","days","schedule","now","i","date","items","estimatedTime","newDate","allItems","graduated","totalInterval","sum","totalAccuracy","TopicRepository","table","query","lowerQuery","_title","_entities","_updates","_ids","LearningPathRepository","difficulty","_query","TaskRepository","learningPathId","beforeExclude","shuffled","_type","_difficulty","_tags","AnswerHistoryRepository","history","_limit","_startDate","_endDate","UserProgressRepository","progress","_id","_stats","_correct","_streakDays","PracticeSessionRepository","status","_status","_timeSpent","SpacedRepetitionRepository","_date","_algorithm","_schedule","_performance","StorageFactory","getTaskRepository","getPracticeSessionRepository","getSpacedRepetitionRepository","AudioService","text","audioPath","audio","resolve","reject","handleEnded","cleanup","handleError","audioService","VolumeIcon","size","jsx","VolumeOffIcon","AudioButton","className","disabled","isPlaying","setIsPlaying","useState","setError","hasAudio","handleClick","sizeClasses","iconSizes","isDisabled","buttonClasses","colors","semanticColors","spacing","typography","shadows","borderRadius","transitions","components","Card","padding","shadow","border","borderColor","backgroundColor","children","style","props","paddingValue","getPaddingValue","cardStyles","FeedbackCard","variant","title","dismissible","onDismiss","React","getVariantColors","icon","getVariantIcon","containerStyles","jsxs","Input","value","onChange","success","helperText","fullWidth","isFocused","setIsFocused","helperId","getBorderColor","getBackgroundColor","inputStyles","Checkbox","checked","label","generatedId","checkboxId","getCheckboxColor","checkboxStyles","checkmarkOverlayStyles","Select","options","placeholder","selectStyles","option","Slider","min","max","step","unit","showValue","ariaLabel","percentage","sliderTrackStyles","sliderFillStyles","sliderInputStyles","thumbStyles","valueDisplayStyles","PracticeSession","targetCount","includeReview","onComplete","onCancel","setSession","currentTask","setCurrentTask","currentTaskIndex","setCurrentTaskIndex","selectedAnswer","setSelectedAnswer","showFeedback","setShowFeedback","setIsCorrect","startTime","setStartTime","shuffledOptions","setShuffledOptions","correctAnswerIndex","setCorrectAnswerIndex","blankAnswers","setBlankAnswers","trueFalseAnswer","setTrueFalseAnswer","orderedItems","setOrderedItems","matchingAnswers","setMatchingAnswers","shuffledRightColumn","setShuffledRightColumn","selectedOptions","setSelectedOptions","sliderValue","setSliderValue","scrambleAnswer","setScrambleAnswer","flashcardRevealed","setFlashcardRevealed","flashcardKnown","setFlashcardKnown","textInputAnswer","setTextInputAnswer","audioReady","setAudioReady","useEffect","initializeSession","loadCurrentTask","newSession","content","originalOptions","originalCorrectAnswer","indices","_","j","newCorrectIndex","originalIndex","handleAnswerSubmit","blank","userAnswer","correctAnswer","alternatives","_pair","ans","tolerance","caseSensitive","spacedRepService","updatedSession","handleSkipTask","handleNextTask","handleComplete","isSpanishText","canSubmit","renderTaskContent","renderMultipleChoice","renderClozeDeletion","renderTrueFalse","renderOrdering","renderMatching","renderMultipleSelect","renderSlider","renderWordScramble","renderFlashcard","renderTextInput","index","showAudio","parts","part","hasAnswer","newAnswers","isInCorrectPosition","shouldBeAtPosition","newItems","position","pair","leftIndex","numValue","rightIndex","toggleOption","newSelected","isSelected","isCorrectAnswer","statusIcon","Fragment","StatCard","subtitle","color","Button","loading","startIcon","endIcon","variantStyles","getVariantStyles","sizeStyles","getSizeStyles","buttonStyles","hoverStyles","getVariantHoverStyles","LoadingSpinner","baseStyles","spinnerSize","SessionResults","onClose","onStartNew","accuracy","averageTime","performanceRating","performanceColor","formatTime","seconds","mins","secs","MasteryBar","Dashboard","stats","setStats","isLoading","setIsLoading","loadDashboardStats","allSessions","completedSessions","s","topicMap","srItems","totalQuestions","correctAnswers","accuracyRate","totalStudyTime","averageSessionTime","topicStatsMap","topicStats","topicProgress","mastered","learning","upcomingReviews","recentSessions","aTime","hours","minutes","formatDate","App","setTopics","selectedTopic","setSelectedTopic","setLearningPaths","learningPathTaskCounts","setLearningPathTaskCounts","selectedLearningPath","setSelectedLearningPath","inSession","setInSession","completedSession","setCompletedSession","showDashboard","setShowDashboard","showSessionConfig","setShowSessionConfig","setSessionConfig","initStarted","useRef","initializeApp","topicCount","taskCount","loadedTopics","selectTopic","paths","taskCounts","showConfigScreen","startPracticeSession","cancelSessionConfig","handleSessionComplete","sessions","handleSessionCancel","handleCloseResults","handleStartNewSession","handleReseed","ReactDOM"],"mappings":"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","x_google_ignoreList":[0,1,2]}